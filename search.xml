<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Linux命令</title>
      <link href="/posts/82734d8.html"/>
      <url>/posts/82734d8.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>作为一位Java后端开发，怎能不会点Linux命令？总结了一套非常实用的Linux命令（基于CentOS 7.6），希望对大家有所帮助！</p><h2 id="系统服务管理">系统服务管理</h2><h3 id="systemctl">systemctl</h3><blockquote><p><code>systemctl</code>命令是<code>service</code>和<code>chkconfig</code>命令的组合体，可用于管理系统。</p></blockquote><ul><li>输出系统中各个服务的状态：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl list-units --<span class="built_in">type</span>=service</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/linux_command_01.e52b2e58.png" alt="img"></p><ul><li>查看服务的运行状态：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status firewalld</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/linux_command_02.756a34ee.png" alt="img"></p><ul><li>关闭服务：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/linux_command_03.c606063b.png" alt="img"></p><ul><li>启动服务：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start firewalld</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/linux_command_04.eb8ce98a.png" alt="img"></p><ul><li>重新启动服务（不管当前服务是启动还是关闭）：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart firewalld</span><br></pre></td></tr></table></figure><ul><li>重新载入配置信息而不中断服务：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl reload firewalld</span><br></pre></td></tr></table></figure><ul><li>禁止服务开机自启动：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/linux_command_05.c5414c77.png" alt="img"></p><ul><li>设置服务开机自启动：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> firewalld</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/linux_command_06.74fd90ab.png" alt="img"></p><h2 id="文件管理">文件管理</h2><h3 id="ls">ls</h3><p>列出指定目录下的所有文件，列出<code>/</code>目录下的文件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> -l /</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/linux_command_07.366177c2.png" alt="img"></p><h3 id="pwd">pwd</h3><p>获取目前所在工作目录的绝对路径：</p><p><img src="https://img.777nx.cn/test/Linux-pwd.png" alt="Linux-pwd"></p><h3 id="cd">cd</h3><p>改变当前工作目录：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/Linux-cd.png" alt="Linux-cd"></p><h3 id="date">date</h3><p>显示或修改系统时间与日期；</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">date</span> <span class="string">&#x27;+%Y-%m-%d %H:%M:%S&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/Linux-date.png" alt="Linux-date"></p><h3 id="passwd">passwd</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd root</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/linux_command_11.fc029fa4.png" alt="img"></p><h3 id="su">su</h3><p>改变用户身份（切换到超级用户）：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su -</span><br></pre></td></tr></table></figure><h3 id="clear">clear</h3><p>用于清除屏幕信息</p><h3 id="man">man</h3><p>显示指定命令的帮助信息：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man <span class="built_in">ls</span></span><br></pre></td></tr></table></figure><h3 id="who">who</h3><ul><li>查询系统处于什么运行级别：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">who</span> -r</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/Linux-who-1.png" alt="Linux-who-1"></p><ul><li>显示目前登录到系统的用户：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">who</span> -buT</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/Linux-who-2.png" alt="Linux-who-2"></p><h3 id="free">free</h3><p>显示系统内存状态（单位MB）：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">free -m</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/Linux-free.png" alt="Linux-free"></p><h3 id="ps">ps</h3><ul><li>显示系统进程运行动态：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef</span><br></pre></td></tr></table></figure><ul><li>查看<code>sshd</code>进程的运行动态：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep sshd</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/Linux-ps.png" alt="Linux-ps"></p><h3 id="top">top</h3><p>查看即时活跃的进程，类似Windows的任务管理器。</p><p><img src="https://img.777nx.cn/test/linux_command_16.45769ce0.png" alt="img"></p><h3 id="mkdir">mkdir</h3><p>创建目录：</p><p><img src="https://img.777nx.cn/test/linux_command_17.4c3596ed.png" alt="img"></p><h3 id="more">more</h3><p>用于分页查看文件，例如每页10行查看<code>boot.log</code>文件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">more -c -10 /var/log/boot.log</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/linux_command_18.3eed35a4.png" alt="img"></p><h3 id="cat">cat</h3><p>用于查看文件，例如查看Linux启动日志文件文件，并标明行号：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> -Ab /var/log/boot.log</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/linux_command_19.f00e1482.png" alt="img"></p><h3 id="touch">touch</h3><p>用于创建文件，例如创建<code>text.txt</code>文件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> text.txt</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/Linux-touch.png" alt="Linux-touch"></p><h3 id="rm">rm</h3><ul><li>删除文件：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> text.txt</span><br></pre></td></tr></table></figure><ul><li>强制删除某个目录及其子目录：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> -rf testdir/</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/Linux-rm.png" alt="Linux-rm"></p><h3 id="cp">cp</h3><p>用于拷贝文件，例如将<code>test1</code>目录复制到<code>test2</code>目录</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> -r /mydata/tes1 /mydata/test2</span><br></pre></td></tr></table></figure><h3 id="mv">mv</h3><p>用于移动或覆盖文件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> text.txt text2.txt</span><br></pre></td></tr></table></figure><h2 id="压缩与解压">压缩与解压</h2><h3 id="tar">tar</h3><ul><li>将<code>/etc</code>文件夹中的文件归档到文件<code>etc.tar</code>（并不会进行压缩）：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -cvf /mydata/etc.tar /etc</span><br></pre></td></tr></table></figure><ul><li>用<code>gzip</code>压缩文件夹<code>/etc</code>中的文件到文件<code>etc.tar.gz</code>：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zcvf /mydata/etc.tar.gz /etc</span><br></pre></td></tr></table></figure><ul><li>用<code>bzip2</code>压缩文件夹<code>/etc</code>到文件<code>/etc.tar.bz2</code>：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -jcvf /mydata/etc.tar.bz2 /etc</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/Linux-tar-1.png" alt="Linux-tar-1"></p><ul><li>分页查看压缩包中内容（gzip）：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -ztvf /mydata/etc.tar.gz |more -c -10</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/linux_command_24.3d771f9d.png" alt="img"></p><ul><li>解压文件到当前目录（gzip）：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf /mydata/etc.tar.gz</span><br></pre></td></tr></table></figure><ul><li>解压文件到指定目录（gzip）：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf /mydata/etc.tar.gz -C /mydata/etc</span><br></pre></td></tr></table></figure><h2 id="磁盘和网络管理">磁盘和网络管理</h2><h3 id="df">df</h3><p>查看磁盘空间占用情况：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">df</span> -hT</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/linux_command_25.2eadcd66.png" alt="img"></p><h3 id="dh">dh</h3><p>查看当前目录下的文件及文件夹所占大小：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">du</span> -h --max-depth=1 ./*</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/Linux-dh.png" alt="Linux-dh"></p><h3 id="ipconfig">ipconfig</h3><p>显示当前网络接口状态：</p><p><img src="https://img.777nx.cn/test/linux_command_27.1322230c.png" alt="img"></p><h3 id="netstat">netstat</h3><ul><li>查看当前路由信息：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -rn</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/linux_command_28.01eb6632.png" alt="img"></p><ul><li>查看所有有效TCP连接：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -an</span><br></pre></td></tr></table></figure><ul><li>查看系统中启动的监听服务：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -tulnp</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/linux_command_29.497bdcb7.png" alt="img"></p><ul><li>查看处于连接状态的系统资源信息：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -atunp</span><br></pre></td></tr></table></figure><h3 id="wget">wget</h3><p>从网络上下载文件</p><p><img src="https://img.777nx.cn/test/linux_command_30.c77bb975.png" alt="img"></p><h2 id="文件上传下载">文件上传下载</h2><ul><li>安装上传下载工具<code>lrzsz</code>；</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y lrzsz</span><br></pre></td></tr></table></figure><ul><li>上传文件，输入以下命令<code>XShell</code>会弹出文件上传框；</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rz</span><br></pre></td></tr></table></figure><ul><li>下载文件，输入以下命令<code>XShell</code>会弹出文件保存框；</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sz fileName</span><br></pre></td></tr></table></figure><h2 id="软件的安装与管理">软件的安装与管理</h2><h3 id="rpm">rpm</h3><blockquote><p>RPM是<code>Red-Hat Package Manager</code>的缩写，一种Linux下通用的软件包管理方式，可用于安装和管理<code>.rpm</code>结尾的软件包。</p></blockquote><ul><li>安装软件包：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh nginx-1.12.2-2.el7.x86_64.rpm</span><br></pre></td></tr></table></figure><ul><li>模糊搜索软件包：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep nginx</span><br></pre></td></tr></table></figure><ul><li>精确查找软件包：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa nginx</span><br></pre></td></tr></table></figure><ul><li>查询软件包的安装路径：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ql nginx-1.12.2-2.el7.x86_64</span><br></pre></td></tr></table></figure><ul><li>查看软件包的概要信息：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qi nginx-1.12.2-2.el7.x86_64</span><br></pre></td></tr></table></figure><ul><li>验证软件包内容和安装文件是否一致：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -V nginx-1.12.2-2.el7.x86_64</span><br></pre></td></tr></table></figure><ul><li>更新软件包：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh nginx-1.12.2-2.el7.x86_64</span><br></pre></td></tr></table></figure><ul><li>删除软件包：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -e nginx-1.12.2-2.el7.x86_64</span><br></pre></td></tr></table></figure><h3 id="yum">yum</h3><blockquote><p>Yum是<code>Yellow dog Updater, Modified</code>的缩写，能够在线自动下载RPM包并安装，可以自动处理依赖性关系，并且一次安装所有依赖的软件包，非常方便！</p></blockquote><ul><li>安装软件包：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install nginx</span><br></pre></td></tr></table></figure><ul><li>检查可以更新的软件包：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum check-update</span><br></pre></td></tr></table></figure><ul><li>更新指定的软件包：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update nginx</span><br></pre></td></tr></table></figure><ul><li>在资源库中查找软件包信息：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum info nginx*</span><br></pre></td></tr></table></figure><ul><li>列出已经安装的所有软件包：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum info installed</span><br></pre></td></tr></table></figure><ul><li>列出软件包名称：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list nginx*</span><br></pre></td></tr></table></figure><ul><li>模糊搜索软件包：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum search nginx</span><br></pre></td></tr></table></figure><h2 id="用户管理">用户管理</h2><h3 id="用户信息查看">用户信息查看</h3><ul><li>查看用户信息：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>用户信息格式如下（密码已过滤）：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 用户名:密码:用户标识号:组标识号:组注释性描述:主目录:默认shell</span></span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">macro:x:1000:982:macro:/home/macro:/bin/bash</span><br></pre></td></tr></table></figure><ul><li>查看用户组信息：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/group</span><br></pre></td></tr></table></figure><ul><li>用户组信息格式如下：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 组名:密码:组标识号:组内用户列表</span></span><br><span class="line">root:x:0:</span><br><span class="line">docker:x:982:macro,andy</span><br></pre></td></tr></table></figure><h3 id="passwd-2">passwd</h3><p>用于设置用户密码：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd root</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/linux_command_11.fc029fa4.png" alt="img"></p><h3 id="su-2">su</h3><p>改变用户身份（切换到超级用户）：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 切换到root用户</span></span><br><span class="line">su -</span><br><span class="line"><span class="comment"># 切换到fantasy用户</span></span><br><span class="line">su fantasy</span><br></pre></td></tr></table></figure><h3 id="groupadd">groupadd</h3><p>添加用户组，使用<code>-g</code>可以设置用户组的标志号：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupadd -g 1024 fantasyfu</span><br></pre></td></tr></table></figure><h3 id="groupdel">groupdel</h3><p>删除用户组：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupdel fantasyfu</span><br></pre></td></tr></table></figure><h3 id="useradd">useradd</h3><p>添加用户，<code>-u</code>设置标志号，<code>-g</code>设置主用户组：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -u 1024 -g fantasyfu fantasy</span><br></pre></td></tr></table></figure><h3 id="usermod">usermod</h3><p>修改用户所属用户组：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod -g docker fantasy</span><br></pre></td></tr></table></figure><h3 id="userdel">userdel</h3><p>删除用户，使用<code>-r</code>可以删除用户主目录：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">userdel fantasy -r</span><br></pre></td></tr></table></figure><h2 id="最后">最后</h2>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数维杯数学建模挑战赛C题</title>
      <link href="/posts/b13bf0e.html"/>
      <url>/posts/b13bf0e.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="233a3281fcfa1f4dc11c18fab3c7a990304e3859e4985eb55ef462a20a5c6929"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学建模 </tag>
            
            <tag> 数维杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue3组件之间的数据共享</title>
      <link href="/posts/f8f8cbb6.html"/>
      <url>/posts/f8f8cbb6.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-组件之间的关系">1. 组件之间的关系</h2><p>在项目开发中，组件之间的关系分为如下3种：</p><ol><li>父子关系</li><li>兄弟关系</li><li>后代关系</li></ol><p><img src="https://img.777nx.cn/test/image-20230509215311561.png" alt=""></p><h2 id="2-父子组件之间的数据共享">2. 父子组件之间的数据共享</h2><p>父子组件之间的数据共享又分为：</p><ol><li><code>父 -&gt; 子</code>共享数据</li><li><code>子 -&gt; 父</code>共享数据</li><li><code>父 &lt;-&gt; 子</code>双向数据同步</li></ol><h3 id="2-1-父组件向子组件共享数据">2.1 父组件向子组件共享数据</h3><p>父组件通过<code>v-bind属性绑定</code>向子组件共享数据。同时，子组件需要使用<code>props</code>接收数据。示例代码如下：</p><p><img src="https://img.777nx.cn/test/image-20230509215706903.png" alt="image-20230509215706903"></p><h3 id="2-2-子组件向父组件共享数据">2.2 子组件向父组件共享数据</h3><p>子组件通过<code>自定义事件</code>的方式向父组件共享数据。示例代码如下：</p><p><img src="https://img.777nx.cn/test/image-20230509215742232.png" alt="image-20230509215742232"></p><h3 id="2-3-父子组件之间数据的双向同步">2.3 父子组件之间数据的双向同步</h3><p>父组件在使用子组件期间，可以使用<code>v-model指令</code>维护组件内外数据的双向同步：</p><p><img src="https://img.777nx.cn/test/image-20230509215830222.png" alt="image-20230509215830222"></p><h2 id="3-兄弟组件之间的数据共享">3. 兄弟组件之间的数据共享</h2><p><code>兄弟组件之间</code>实现数据共享的方案是<code>EventBus</code>。可以借助于第三方的包<code>mitt</code>来创建 <code>eventBus对象</code>，从而实现兄弟组件之间的数据共享。示意图如下：</p><p><img src="https://img.777nx.cn/test/image-20230509215948200.png" alt="image-20230509215948200"></p><h3 id="3-1-安装-mitt-依赖包">3.1 安装 mitt 依赖包</h3><p>在项目中运行如下的命令，安装mitt依赖包：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install mitt@2.1.0</span><br></pre></td></tr></table></figure><h3 id="3-2-创建公共的EventBus模块">3.2 创建公共的EventBus模块</h3><p>在项目中创建公共的<code>eventBus模块</code>如下：</p><p><img src="https://img.777nx.cn/test/image-20230509220134562.png" alt="image-20230509220134562"></p><h3 id="3-3-在数据接收方自定义事件">3.3 在<code>数据接收方</code>自定义事件</h3><p>在数据接收方，调用<code>bus.on</code>(‘事件名称’, 事件处理函数)方法<code>注册一个自定义事件</code>。示例代码如下：</p><p><img src="https://img.777nx.cn/test/image-20230509220251394.png" alt="image-20230509220251394"></p><h3 id="3-4-在数据接发送方触发事件">3.4 在<code>数据接发送方</code>触发事件</h3><p>在数据发送方，调用<code>bus.emit</code>(‘事件名称’, 要发送的数据)方法<code>触发自定义事件</code>。示例代码如下：</p><p><img src="https://img.777nx.cn/test/image-20230509220330547.png" alt="image-20230509220330547"></p><h2 id="4-后代关系组件之间的数据共享">4. 后代关系组件之间的数据共享</h2><p>后代关系组件之间共享数据，指的是<code>父节点的组件</code>向其<code>子孙组件</code>共享数据。此时组件之间的嵌套关系比较复杂，可以使用<code>provide</code>和<code>inject</code>实现后代关系组件之间的数据共享。</p><p><img src="https://img.777nx.cn/test/image-20230509220415962.png" alt="image-20230509220415962"></p><h3 id="4-1-父节点通过provide共享数据">4.1 父节点通过<code>provide</code>共享数据</h3><p>父节点的组件可以通过<code>provide方法</code>，对其<code>子孙组件</code>共享数据：</p><p><img src="https://img.777nx.cn/test/image-20230509221324505.png" alt="image-20230509221324505"></p><h3 id="4-2-子孙节点通过inject接收数据">4.2 子孙节点通过<code>inject</code>接收数据</h3><p>子孙节点可以使用<code>inject</code>数组，接收父级节点<code>向下共享的数据</code>。示例代码如下：</p><p><img src="https://img.777nx.cn/test/image-20230509221413094.png" alt="image-20230509221413094"></p><h3 id="4-3-父节点对外共享响应式的数据">4.3 父节点对外共享<code>响应式的数据</code></h3><p>父节点使用provide向下共享数据时，可以结合<code>computed函数</code>向下共享<code>响应式的数据</code>。示例代码如下：</p><p><img src="https://img.777nx.cn/test/image-20230509221523077.png" alt="image-20230509221523077"></p><h3 id="4-4-子孙节点使用响应式的数据">4.4 子孙节点<code>使用</code>响应式的数据</h3><p>如果父级节点共享的是<code>响应式的数据</code>，则子孙节点必须以<code>.value</code>的形式进行使用。示例代码如下：</p><p><img src="https://img.777nx.cn/test/image-20230509221603596.png" alt="image-20230509221603596"></p><h2 id="5-vuex">5. vuex</h2><p>vuex是<code>终极的</code>组件之间的数据共享方案。在企业级的vue项目开发中，vuex可以让组件之间的数据共享变得<code>高效</code>、<code>清晰</code>、且<code>易于维护</code>。</p><p><img src="https://img.777nx.cn/test/image-20230509221832242.png" alt="image-20230509221832242"></p><h2 id="6-总结">6. 总结</h2><ul><li><p>父子关系</p><ol><li>父 -&gt; 子 <code>属性绑定</code></li><li>子 -&gt; 父 <code>事件绑定</code></li><li>父 &lt;-&gt; 子 <code>组件上的v-model</code></li></ol></li><li><p>兄弟关系<br>4. <code>EventBus</code></p></li><li><p>后代关系<br>5. <code>provide</code>&amp;<code>inject</code></p></li><li><p>全局数据共享<br>6. <code>vuex</code></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL命令</title>
      <link href="/posts/1069a098.html"/>
      <url>/posts/1069a098.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>开发者必备Mysql常用命令，涵盖了数据定义语句、数据操纵语句及数据控制语句，基于Mysql5.7。</p><h2 id="数据定义语句-DDL">数据定义语句(DDL)</h2><h3 id="数据库操作">数据库操作</h3><ul><li>登录数据库：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -proot</span><br></pre></td></tr></table></figure><ul><li>创建数据库：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database test</span><br></pre></td></tr></table></figure><ul><li>查看所有数据库：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> databases</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/refer_screen_41.f37d4d3a.png" alt="img"></p><ul><li>选择数据库并使用：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use test</span><br></pre></td></tr></table></figure><ul><li>查看所有数据表：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> tables</span><br></pre></td></tr></table></figure><ul><li>删除数据库：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> database test</span><br></pre></td></tr></table></figure><h3 id="表操作">表操作</h3><ul><li>创建表：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> emp(ename <span class="type">varchar</span>(<span class="number">10</span>),hiredate <span class="type">date</span>,sal <span class="type">decimal</span>(<span class="number">10</span>,<span class="number">2</span>),deptno <span class="type">int</span>(<span class="number">2</span>))  </span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> dept(deptno <span class="type">int</span>(<span class="number">2</span>),deptname <span class="type">varchar</span>(<span class="number">10</span>))</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/refer_screen_42.940b3b71.png" alt="img"></p><ul><li>查看表的定义：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">desc</span> emp</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/refer_screen_43.1ede5291.png" alt="img"></p><ul><li>查看表定义（详细）：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> emp \G</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/refer_screen_44.79ca2830.png" alt="img"></p><ul><li>删除表：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> emp</span><br></pre></td></tr></table></figure><ul><li>修改表字段：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp modify ename <span class="type">varchar</span>(<span class="number">20</span>)</span><br></pre></td></tr></table></figure><ul><li>添加表字段：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">add</span> <span class="keyword">column</span> age <span class="type">int</span>(<span class="number">3</span>)</span><br></pre></td></tr></table></figure><ul><li>删除表字段：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">drop</span> <span class="keyword">column</span> age</span><br></pre></td></tr></table></figure><ul><li>字段改名；</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp change age age1 <span class="type">int</span>(<span class="number">4</span>)</span><br></pre></td></tr></table></figure><ul><li>修改表名：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp rename emp1</span><br></pre></td></tr></table></figure><h2 id="数据操纵语句-DML">数据操纵语句(DML)</h2><h3 id="插入记录">插入记录</h3><ul><li>指定名称插入：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> emp (ename,hiredate,sal,deptno) <span class="keyword">values</span> (<span class="string">&#x27;zhangsan&#x27;</span>,<span class="string">&#x27;2018-01-01&#x27;</span>,<span class="string">&#x27;2000&#x27;</span>,<span class="number">1</span>)</span><br></pre></td></tr></table></figure><ul><li>不指定名称插入：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> emp <span class="keyword">values</span> (<span class="string">&#x27;lisi&#x27;</span>,<span class="string">&#x27;2018-01-01&#x27;</span>,<span class="string">&#x27;2000&#x27;</span>,<span class="number">1</span>)</span><br></pre></td></tr></table></figure><ul><li>批量插入数据：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> dept <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;dept1&#x27;</span>),(<span class="number">2</span>,<span class="string">&#x27;dept2&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="修改记录">修改记录</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> emp <span class="keyword">set</span> sal<span class="operator">=</span><span class="string">&#x27;4000&#x27;</span>,deptno<span class="operator">=</span><span class="number">2</span> <span class="keyword">where</span> ename<span class="operator">=</span><span class="string">&#x27;zhangsan&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="删除记录">删除记录</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename<span class="operator">=</span><span class="string">&#x27;zhangsan&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="查询记录">查询记录</h3><ul><li>查询所有记录：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp</span><br></pre></td></tr></table></figure><ul><li>查询不重复的记录：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> deptno <span class="keyword">from</span> emp</span><br></pre></td></tr></table></figure><ul><li>条件查询：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> deptno<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> sal<span class="operator">&lt;</span><span class="number">3000</span></span><br></pre></td></tr></table></figure><ul><li>排序和限制：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> deptno <span class="keyword">desc</span> limit <span class="number">2</span></span><br></pre></td></tr></table></figure><ul><li>分页查询(查询从第0条记录开始10条)：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> deptno <span class="keyword">desc</span> limit <span class="number">0</span>,<span class="number">10</span></span><br></pre></td></tr></table></figure><ul><li>聚合(查询部门人数大于1的部门编号)：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">having</span> <span class="built_in">count</span>(<span class="number">1</span>) <span class="operator">&gt;</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><ul><li>连接查询：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp e <span class="keyword">left</span> <span class="keyword">join</span> dept d <span class="keyword">on</span> e.deptno<span class="operator">=</span>d.deptno</span><br></pre></td></tr></table></figure><ul><li>子查询：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> deptno <span class="keyword">in</span> (<span class="keyword">select</span> deptno <span class="keyword">from</span> dept)</span><br></pre></td></tr></table></figure><ul><li>记录联合：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> deptno <span class="keyword">from</span> emp <span class="keyword">union</span> <span class="keyword">select</span> deptno <span class="keyword">from</span> dept</span><br></pre></td></tr></table></figure><h2 id="数据控制语句-DCL">数据控制语句(DCL)</h2><h3 id="权限相关">权限相关</h3><ul><li>授予操作权限(将test数据库中所有表的select和insert权限授予test用户)：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span>,<span class="keyword">insert</span> <span class="keyword">on</span> test.<span class="operator">*</span> <span class="keyword">to</span> <span class="string">&#x27;test&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;123&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>查看账号权限：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> grants <span class="keyword">for</span> <span class="string">&#x27;test&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/refer_screen_45.072633db.png" alt="img"></p><ul><li>收回操作权限：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">revoke</span> <span class="keyword">insert</span> <span class="keyword">on</span> test.<span class="operator">*</span> <span class="keyword">from</span> <span class="string">&#x27;test&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/refer_screen_46.9c6f36a5.png" alt="img"></p><ul><li>授予所有数据库的所有权限：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> privileges <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> <span class="string">&#x27;test&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>授予所有数据库的所有权限(包括grant)：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> privileges <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> <span class="string">&#x27;test&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> <span class="keyword">with</span> <span class="keyword">grant</span> option</span><br></pre></td></tr></table></figure><ul><li>授予SUPER PROCESS FILE权限（系统权限不能指定数据库）：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> super,process,file <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> <span class="string">&#x27;test&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>只授予登录权限：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> usage <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> <span class="string">&#x27;test&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="账号相关">账号相关</h3><ul><li>删除账号：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">user</span> <span class="string">&#x27;test&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>修改自己的密码：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> password <span class="operator">=</span> password(<span class="string">&#x27;123&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li>管理员修改他人密码：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> password <span class="keyword">for</span> <span class="string">&#x27;test&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> <span class="operator">=</span> password(<span class="string">&#x27;123&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="其他">其他</h2><h3 id="字符集相关">字符集相关</h3><ul><li>查看字符集：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;character%&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/refer_screen_47.495dee0a.png" alt="img"></p><ul><li>创建数据库时指定字符集：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database test2 <span class="type">character</span> <span class="keyword">set</span> utf8</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/refer_screen_48.a08408d7.png" alt="img"></p><h3 id="时区相关">时区相关</h3><ul><li>查看当前时区（UTC为世界统一时间，中国为UTC+8）：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> &quot;%time_zone%&quot;</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/refer_screen_49.3441424e.png" alt="img"></p><ul><li>修改mysql全局时区为北京时间，即我们所在的东8区：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> time_zone <span class="operator">=</span> <span class="string">&#x27;+8:00&#x27;</span>;</span><br></pre></td></tr></table></figure><ul><li>修改当前会话时区：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> time_zone <span class="operator">=</span> <span class="string">&#x27;+8:00&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/refer_screen_50.f4888b63.png" alt="img"></p><ul><li>立即生效：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush privileges</span><br></pre></td></tr></table></figure><h2 id="最后">最后</h2>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的图床解决方案</title>
      <link href="/posts/ab6c83fc.html"/>
      <url>/posts/ab6c83fc.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、前言">一、前言</h2><p>博客的文章经常需要插入图片，如果我将文档与图片放在一起，那么图片的加载速度将会很慢，于是我使用了图床。</p><p>图床的选择有很多，<a href="https://www.777nx.cn/posts/d7fb1ba1.html">笔者之前写过一篇关于免费图床的汇总</a>，本文就来介绍下我采用的方案：Github图床，NPM。</p><h2 id="二、基于GitHub仓库的图床">二、基于GitHub仓库的图床</h2><h3 id="2-1-建立Github仓库">2.1 建立Github仓库</h3><ol><li>进入<a href="https://github.com/">Github官网</a>注册并登录自己的账号，到自己的个人主页，点击右上角的<code>+</code>，并选择<code>New Repository</code>创建自己的仓库。</li></ol><p><img src="https://img.777nx.cn/test/image-20230505005100794.png" alt="image-20230505005100794"></p><ol start="2"><li>仓库名字随意，描述也可以自由发挥，可见性最好选<code>public</code>，<code>Readme</code>文件可以创建，然后点击<code>Create Repository</code>创建仓库。</li></ol><p><img src="https://img.777nx.cn/test/image-20230505005223253.png" alt="image-20230505005223253"></p><ol start="3"><li>让你的计算机与Github建立通信，这部分可以参考<a href="https://www.777nx.cn/posts/e593433d.html">Hexo 博客搭建基础教程 (一)</a>的第7点，主要是<code>创建公钥</code>、<code>上传公钥</code>、<code>检查通信</code>这几步，确保计算机有权限访问远程仓库，所述教程是用的<code>RSA公钥</code>。</li></ol><p><img src="https://img.777nx.cn/test/image-20230505005657526.png" alt="image-20230505005657526"></p><ol start="4"><li>先在本地创建一个文件夹，文件夹位置和名字随意就可以，进入该文件夹后右键打开<code>Git Bash</code>，然后输入以下代码把之前创建的仓库拷贝下来，其中<code>git clone</code>后面的东西要替换成自己的仓库信息，可以通过自己仓库的ssh链接来获取。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:777nx/fantasy-static.git</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/image-20230505005954445.png" alt="image-20230505005954445"></p><p><img src="https://img.777nx.cn/test/image-20230505010026723.png" alt="image-20230505010026723"></p><p>看到上图的信息就代表成功把整个仓库拷贝到当前文件夹了，此时我们可以看见自己的文件夹多了个<code>.git</code>文件夹和<code>Readme.md</code>文件，这就代表成功了。</p><p><img src="https://img.777nx.cn/test/image-20230505010119305.png" alt="image-20230505010119305"></p><blockquote><p>注意：<code>.git</code>是隐藏文件夹</p></blockquote><ol start="5"><li>此时我们最好在这个文件夹里面创建创建一个<code>img</code>文件夹专门存放图片，如果有存放其他类型资源的可以创建别的文件夹，比如现在想往仓库里加两张图，直接就把图片复制到<code>img</code>文件夹里面即可。</li></ol><p><img src="https://img.777nx.cn/test/image-20230505010504436.png" alt="image-20230505010504436"></p><p>然后在带有<code>Readme.md</code>文件的那个文件夹内，右键打开<code>Git Bash</code>（注意看清楚是什么文件夹），然后依次输入以下命令把更改推送到远程仓库，最后一步不成功可能要多试几次。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将更改提交</span></span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;更新图片&quot;</span></span><br><span class="line"><span class="comment"># 推送至github仓库</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure><p>最后看见如下信息就代表推送成功了</p><p><img src="https://img.777nx.cn/test/image-20230505010652292.png" alt="image-20230505010652292"></p><p>仓库此时应该也有了刚刚上传的资源了</p><p><img src="https://img.777nx.cn/test/image-20230505010811285.png" alt="image-20230505010811285"></p><p>下次增删图片或者其他东西，就这样照猫画虎就可以推上来更新仓库！</p><h3 id="2-2-Staticaly-CDN加速">2.2 Staticaly CDN加速</h3><p>直接访问Github仓库的资源是非常慢的！因此我们要用一些免费的CDN进行加速，<code>Staticaly CDN</code>是目前免费CDN中比较好用的啦，他的应用规则如下：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 格式 其中 user是用户名  repo是仓库名  version代表版本(tag或者分支 默认为main)  flie是文件路径 </span></span><br><span class="line">https:<span class="regexp">//</span>cdn.staticaly.com<span class="regexp">/gh/u</span>ser<span class="regexp">/repo@version/</span>file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 比如我的示例仓库就是加速地址就是这个大家可以参考参考</span></span><br><span class="line">https:<span class="regexp">//</span>cdn.staticaly.com<span class="regexp">/gh/</span><span class="number">777</span>nx<span class="regexp">/fantasy-static@main/img</span><span class="regexp">/wallhaven-72x31v.png</span></span><br></pre></td></tr></table></figure><h3 id="2-3-Vercel部署">2.3 Vercel部署</h3><div class="note info modern"><p>此方法加载速度较快，但是需要域名自定义绑定，其优点也是可以绑定自定义域了，目前Vercel每个月限制流量100GB</p></div><ol><li>进入<a href="https://vercel.com/dashboard">Vercel控制面板</a>新建项目，并<code>通过Github继续</code>，选择导入刚刚创建的仓库，然后直接部署即可</li></ol><p><img src="https://img.777nx.cn/test/image-20230505011341235.png" alt="image-20230505011341235"></p><p><img src="https://img.777nx.cn/test/image-20230505011429195.png" alt="image-20230505011429195"></p><ol start="2"><li>进入该项目控制台后，选择右上角的<code>View Domains</code>添加新的域名，添加一个自己域名的二级域名，然后在你对应的域名解析控制台添加对应解析，等待生效。</li></ol><p><img src="https://img.777nx.cn/test/image-20230505011617606.png" alt="image-20230505011617606"></p><p><img src="https://img.777nx.cn/test/image-20230505012224095.png" alt="image-20230505012224095"></p><p><img src="https://img.777nx.cn/test/image-20230505011846533.png" alt="image-20230505011846533"></p><ol start="3"><li><p>通过<code>自定义域名+资源路径</code>即可访问到对应的资源，例如我这里为<code>https://fantasy-static.777nx.cn/img/wallhaven-72x31v.png</code></p></li><li><p>要更新图片怎么办？只要将资源复制到对应的文件夹，然后再执行一次下面的命令即可：</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将更改提交</span></span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;更新图片&quot;</span></span><br><span class="line"><span class="comment"># 推送至github仓库</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure><p>这个命令默认是更新到仓库的<code>main</code>分支上，Vercel一旦检测到main分支发送变化就会触发新一轮部署，我们稍候片刻即可通过新的路径访问到新的资源。</p><h3 id="2-4-Cloudflare部署">2.4 Cloudflare部署</h3><div class="note info modern"><p>此方法速度比Vercel稍慢，但是可以不需要域名，目前我就在用这个，而且CloudFlare对于普通用户来说几乎不限量了</p></div><ol><li>进入<a href="https://www.cloudflare.com/">Cloudflare官网</a>注册并登录自己的账号，然后进入控制台后选择左边的<code>Pages</code>，再创建一个新项目并通过Git进行连接，所有参数默认直接部署。</li></ol><p><img src="https://img.777nx.cn/test/image-20230505012614707.png" alt="image-20230505012614707"></p><p><img src="https://img.777nx.cn/test/image-20230505012721012.png" alt="image-20230505012721012"></p><ol start="2"><li>通过给出的<code>初始域名+资源路径</code>即可访问到的对应资源，例如我这个就是<code>fantasy-static.pages.dev/img/wallhaven-72x31v.png</code>，当然你也可以绑定自定义域名使用。</li></ol><p><img src="https://img.777nx.cn/test/image-20230505012852757.png" alt="image-20230505012852757"></p><h2 id="三、npm图床">三、npm图床</h2><h3 id="3-1-npm发布包">3.1 npm发布包</h3><ol><li>首先需要注册一个npm的账号。访问<a href="https://www.npmjs.com/signup/">npm注册页面</a></li></ol><p><img src="https://img.777nx.cn/test/image-20230505013352088.png" alt="image-20230505013352088"></p><ol start="2"><li>完成邮箱验证，注册完成后进入账号管理界面:头像-&gt;Account，拉倒最上方，你会看到<code>You have not verified your email address</code>字样的提示，点击以后按提示步骤验证你的邮箱。</li></ol><p><img src="https://img.777nx.cn/test/02.png" alt="img"></p><ol start="3"><li>找到我们之前创建的图床仓库，在本地合适的位置把它<code>clone</code>下来。找个空文件夹打开终端输入</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:[username]/[AssetsRepo].git</span><br><span class="line"><span class="comment">#或者</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/[username]/[AssetsRepo].git</span><br></pre></td></tr></table></figure><p>例如我的是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:777nx/fantasy-static.git</span><br><span class="line"><span class="comment">#或者</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/777nx/fantasy-static.git</span><br></pre></td></tr></table></figure><ol start="4"><li>在clone下来的[AssetsRepo]文件夹内(例如我的是fantasy-static文件夹内)打开终端，输入以下指令切换回原生源</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmjs.org</span><br></pre></td></tr></table></figure><ol start="5"><li>添加本地npm用户设置</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 仅第一次使用需要添加用户，之后会提示你输入你的npm账号密码以及注册邮箱</span></span><br><span class="line">npm adduser</span><br><span class="line"><span class="comment"># 非第一次使用直接登录即可，之后会提示你输入你的npm账号密码以及注册邮箱</span></span><br><span class="line">npm login</span><br></pre></td></tr></table></figure><ol start="6"><li>运行npm初始化指令，把整个图床仓库打包，按照指示进行配置，注意需要事先确认你的包名没有和别人已发布的包重复，可以在npm官网搜索相应包名，搜不到就说明还没被占用。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/image-20230505014742021.png" alt="image-20230505014742021"></p><p>最后会输出一段package.json，请求确认，输入yes即可。</p><ol start="7"><li>然后输入发布指令，我们就可以把包发布到npm上了。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm publish</span><br></pre></td></tr></table></figure><ol start="8"><li>jsdelivr+npm 的图片引用和 jsdelivr+github 很相似，例如我在<code>[AssetsRepo]</code>仓库里存放的<code>/img/wallhaven-72x31v.png</code></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># jsDelivr+github链接</span></span><br><span class="line">https://cdn.jsdelivr.net/gh/[GithubUserName]/[AssetsRepo]/img/wallhaven-72x31v.png</span><br><span class="line"><span class="comment"># jsDelivr+npm链接</span></span><br><span class="line">https://cdn.jsdelivr.net/npm/[NpmPackageName]/img/wallhaven-72x31v.png</span><br></pre></td></tr></table></figure><blockquote><p>可以看到Npm只需要提供包名即可。这也是一开始要求包名不重复的原因之一</p></blockquote><p>jsDelivr+Npm依然有100MB的包大小限制，但是NPM有丰富的国内节点。可以挑选一个使用。个人推荐知乎的。没有大小限制，而且也很稳定。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">【jsd出品，网宿国内节点】</span><br><span class="line">https:<span class="regexp">//</span>cdn.jsdelivr.net<span class="regexp">/npm/</span>:package@:version/:file</span><br><span class="line">【unpkg 自建】</span><br><span class="line">https:<span class="regexp">//</span>cdn.cbd.int<span class="regexp">/:package@:version/</span>:file</span><br></pre></td></tr></table></figure><p>当然你也可以利用<a href="https://unpkg.com/">unpkg</a>自建。(UNPKG 是一个内容源自 npm 的全球快速 CDN。它部署在 cloudflare 上，在大陆地区访问到的是香港节点。所以速度也不错。)</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">https:</span>/<span class="regexp">/unpkg.com/</span><span class="symbol">:package</span>@<span class="symbol">:version/</span><span class="symbol">:file</span></span><br></pre></td></tr></table></figure><h3 id="3-2-图片转换与发布">3.2 图片转换与发布</h3><p>如果每次都要在本地进行<code>npm publish</code>的话，npm的提交是整个包一起上传的，不存在增量更新，耗时不说，而且还往往需要架梯子才能正常上传。所以我们可以把它交给github action来完成。</p><ol><li>在<a href="https://www.npmjs.com/">npm官网</a>-&gt;头像-&gt;Access Tokens-&gt;Generate New Token,勾选Automation 选项，<code>Token</code>只会显示这一次，之后如果忘记了就只能重新生成重新配置了。</li></ol><p><img src="https://img.777nx.cn/test/image-20230505015328425.png" alt="image-20230505015328425"></p><p><img src="https://img.777nx.cn/test/image-20230505015408100.png" alt="image-20230505015408100"></p><ol start="2"><li>在github的[AssetsRepo]仓库设置项里添加一个名为<code>NPM_TOKEN</code>的<code>secrets</code>，把获取的Npm的Access token输入进去。</li></ol><p><img src="https://img.777nx.cn/test/image-20230505015618726.png" alt="image-20230505015618726"></p><ol start="3"><li>在本地的<code>[AssetsRepo]</code>文件夹下新建<code>[AssetsRepo]/.github/workflows/autopublish.yml</code></li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Node.js</span> <span class="string">Package</span></span><br><span class="line"><span class="comment"># 监测图床分支，2020年10月后github新建仓库默认分支改为main，记得更改</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">publish-npm:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">&quot;12.x&quot;</span></span><br><span class="line">          <span class="attr">registry-url:</span> <span class="string">https://registry.npmjs.org/</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">run:</span> <span class="string">npm</span> <span class="string">publish</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="attr">NODE_AUTH_TOKEN:</span> <span class="string">$&#123;&#123;secrets.npm_token&#125;&#125;</span></span><br></pre></td></tr></table></figure><ol start="4"><li>在本地的<code>[AssetsRepo]</code>文件夹下打开终端，运行以下指令，上传新增内容至 github，即可触发部署。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将更改提交</span></span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;npm publish&quot;</span></span><br><span class="line"><span class="comment"># 更新package版本号</span></span><br><span class="line">npm version patch</span><br><span class="line"><span class="comment"># 推送至github触发action</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure><div class="note warning flat"><p>此处的四行指令顺序严格。<br>每次更新 npm 图床都需要先修改<code>[AssetsRepo]\package.json</code>里的<code>version</code>,也就是版本号。<br>而<code>npm version patch</code>即为更新 package.json 里的版本号的指令，效果是末尾版本号+1，例如<code>0.0.1=&gt;0.0.2</code>、<code>1.1.3=&gt;1.1.4</code>。免去了打开<code>package.json</code>再修改版本号的麻烦。（大版本更新还是需要手动改的）<br>更新 npm 图床务必要记得更新<code>package.json</code>里的版本号！</p></div><h2 id="四、参考教程">四、参考教程</h2><ol><li><p><a href="https://www.fomal.cc/posts/d7fb1ba1.html">免费图床综合教程</a></p></li><li><p><a href="https://anzhiy.cn/posts/72ea.html">npm图床使用</a></p></li></ol><h2 id="五、最后">五、最后</h2><ol><li><p>GitHub图床仓库大小不能超过1G。当仓库超过1G后会有人工审核仓库内容，如果发现用来做图床，轻则删库重则封号。</p></li><li><p>Npm有<code>100MB</code>的包大小限制，但是NPM有丰富的国内节点。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>全网最详细的重装系统教程</title>
      <link href="/posts/4aa3a157.html"/>
      <url>/posts/4aa3a157.html</url>
      
        <content type="html"><![CDATA[<div class="tip home"><p>以下文章来源于BOOM哥，作者BOOM哥</p></div><div class="note info flat"><p>参考：<a href="https://mp.weixin.qq.com/s/QnQuGfU-1uhOq5nr-cxOKA">全网最详细的重装系统教程</a></p></div><h2 id="一、前言">一、前言</h2><p>相信大家都听说过重装系统。重装系统是在电脑系统出现问题或受到恶意软件、流氓软件的“污染”时可以让电脑满血复活的一种电脑抢救措施。很多小伙伴看到“重装系统”两个字就觉得重装系统非常难。</p><p>其实并不是，重装系统真的不难，这是有点麻烦。学会重装系统后，我们可以在紧急情况下抢救我们的电脑，让它瞬间满血复活。所以非常建议每一位小伙伴学一学怎么重装系统。今天的重装系统教程写的比较详细，希望它能在紧急情况下给大家提供一些帮助。</p><p><img src="https://img.777nx.cn/test/image-20230426235739979.png" alt="image-20230426235739979"></p><p>今天就教大家怎么使用“微PE工具箱”给电脑重装<strong>纯净</strong>的Windows11系统吧。</p><blockquote><p>**注意：**其他Windows系统的重装方法也跟Windows11的重装方法一模一样。</p></blockquote><p>先给大家介绍一下微PE工具箱。它是一个非常不错的PE系统U盘制作工具，免费且无广告，安全可靠，也是我最喜欢的一个PE系统U盘制作工具。因为在不久前有好多老牌PE系统U盘制作工具（如装机大师、大白菜等等）被曝给用户电脑偷偷安装流氓软件，所以在这里不建议大家使用其他PE系统U盘制作软件。</p><h2 id="二、准备工作">二、准备工作</h2><ol><li>准备一个8GB以上的<strong>空</strong>U盘（在PE系统U盘制作过程中，U盘会被格式化）</li><li>准备一台可以正常上网使用的电脑</li></ol><h2 id="三、下载-安装-微PE工具箱">三、下载&amp;安装&quot;微PE工具箱&quot;</h2><ol><li>用电脑打开微PE工具箱官网，官网链接在这里：</li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span>www.wepe.com.cn/download.html?tdsourcetag=s_pcqq_aiomsg</span><br></pre></td></tr></table></figure><ol start="2"><li>点击【查看下载地址列表】：</li></ol><p><img src="https://img.777nx.cn/test/680.png" alt="图片"></p><ol start="3"><li>点击【我已捐赠，继续查看下载地址】</li></ol><p>当然，在这里大家也可以选择支持一下微PE工具箱团队，因为这个软件真的非常好用。</p><p><img src="https://img.777nx.cn/test/660.png" alt="660"></p><ol start="4"><li>下载最新版微PE工具箱的64位版本：</li></ol><p><img src="https://img.777nx.cn/test/661.png" alt="661"></p><ol start="5"><li><strong>将准备好的空U盘插入到电脑中：</strong></li></ol><p><img src="https://img.777nx.cn/test/662.png" alt="662"></p><ol start="6"><li>解压下载好的微PE工具箱压缩包并打开，双击运行其中的exe文件：</li></ol><p><img src="https://img.777nx.cn/test/663.png" alt="663"></p><ol start="7"><li>点击【其他安装方式】右侧的<strong>U盘图标</strong>，即选择【安装PE到U盘】：</li></ol><p><img src="https://img.777nx.cn/test/664.png" alt="664"></p><ol start="8"><li>选好自己刚刚插入的U盘后，点击【立即安装进U盘】，其他地方不用改：</li></ol><p><img src="https://img.777nx.cn/test/665.png" alt="665"></p><ol start="9"><li>点击【开始制作】：</li></ol><p><img src="https://img.777nx.cn/test/666.png" alt="666"></p><ol start="10"><li>点击【完成安装】：</li></ol><p><img src="https://img.777nx.cn/test/667.png" alt="667"></p><ol start="11"><li>就这样，PE系统U盘制作完成了。打开此电脑可以发现U盘被分成了两个分区，一个分区容量较大，这个分区可以正常存放文件。另一个分区名字叫【EFI】，这个分区非常重要，不能给里面存储其他文件，<strong>里面的文件也不能动！！</strong></li></ol><p><img src="https://img.777nx.cn/test/668.png" alt="668"></p><h2 id="四、下载系统ISO文件，并拷贝到PE系统U盘">四、下载系统ISO文件，并拷贝到PE系统U盘</h2><p>接下来，我们要从MSDN上下载纯净的Windows11操作系统ISO文件（镜像文件），并将它拷贝到PE系统U盘的那个容量较大，可以正常存放文件的分区中。</p><p>MSDN提供的系统资源都来自微软，MSDN可以理解为微软在中国的资源下载网站，大家可以放心使用里面的系统资源。</p><ol><li>用电脑打开以下链接进入MSDN：</li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//m</span>sdn.itellyou.cn/</span><br></pre></td></tr></table></figure><ol start="2"><li>点击【Windows11】：</li></ol><p><img src="https://img.777nx.cn/test/image-20230427001136575.png" alt="image-20230427001136575"></p><ol start="3"><li>输入自己的账号进行登录。如果没有注册过账号，可以注册一下：</li></ol><p><img src="https://img.777nx.cn/test/image-20230427001156665.png" alt="image-20230427001156665"></p><ol start="4"><li>点击Windows11下方的【详细信息】：</li></ol><p><img src="https://img.777nx.cn/test/image-20230427001351234.png" alt="image-20230427001351234"></p><ol start="5"><li>用迅雷下载系统ISO文件：</li></ol><p><img src="https://img.777nx.cn/test/image-20230427001500155.png" alt="image-20230427001500155"></p><blockquote><p>**注意：**不知道business edition和consumer edition区别的小伙伴看这里</p></blockquote><p><img src="https://img.777nx.cn/test/641.png" alt="641"></p><ol start="6"><li>将下载好的系统ISO文件拷贝到PE系统U盘的容量大的分区中：</li></ol><p><img src="https://img.777nx.cn/test/642.png" alt="642"></p><p><strong>就这样，可以重装系统的PE系统U盘已经制作完成了。</strong></p><h2 id="五、重启故障电脑，重装系统">五、重启故障电脑，重装系统</h2><ol><li>接下来，将已经制作好的PE系统U盘插入到要重装系统的电脑中并重启它。当它重启出现开机画面时不停的按<strong>启动热键</strong>，出现选择菜单时选择自己的U盘，进入微PE。不知道自己电脑的启动热键的小伙伴看这里：</li></ol><p><img src="https://img.777nx.cn/test/643.png" alt="643"></p><p><img src="https://img.777nx.cn/test/644.png" alt="644"></p><ol start="2"><li>进入PE系统后，打开此电脑，打开PE系统U盘的有系统ISO的分区，鼠标右键点击此ISO文件，选择【装载】，再双击运行【Setup.exe】：</li></ol><p><img src="https://img.777nx.cn/test/645.png" alt="645"></p><p><img src="https://img.777nx.cn/test/646.png" alt="646"></p><p><img src="https://img.777nx.cn/test/647.png" alt="647"></p><ol start="3"><li>点击【现在安装】：</li></ol><p><img src="https://img.777nx.cn/test/648.png" alt="648"></p><ol start="4"><li>此时可能会出现密钥输入窗口。如果知道自己电脑原来的系统的密钥的话可以填进去。如果不知道的话就选【我没有产品密钥】，先安装系统，进入系统后再激活：</li></ol><p><img src="https://img.777nx.cn/test/649.png" alt="649"></p><ol start="5"><li>选择系统类型：</li></ol><p><img src="https://img.777nx.cn/test/650.png" alt="650"></p><ol start="6"><li>选择【自定义：仅安装Windows（高级）】：</li></ol><blockquote><p>**小提示：**这里也可以选【升级：安装Windows并保留文件、设置和应用程序】。如果你的电脑原来的系统没啥问题，你只是想升级一下系统的话可以选此选项。此选项不会格式化C盘。</p><p>如果你的电脑曾经中毒了或者被流氓软件“占领”了，那么我建议你选【自定义：仅安装Windows（高级）】，此选项会格式化C盘再安装系统，可以彻底杀死C盘中的病毒或流氓软件</p></blockquote><p><img src="https://img.777nx.cn/test/651.png" alt="651"></p><ol start="7"><li>选择自己电脑的C盘（按空间大小），并点击下一步</li></ol><p><img src="https://img.777nx.cn/test/652.png" alt="652"></p><ol start="8"><li>现在按提示操作就可以了，该避开的坑我已经说完了。</li></ol><p><strong>最后系统安装完成后会提示电脑将会在10秒内重启。此时等待电脑重启就可以了。当电脑重启进入黑屏状态时要立刻拔掉U盘！！！！！如果倒计时结束后电脑只是回到了PE系统，并没有自动重启的话，自己手动重启（PE系统左下角有重启/关机选项）就可以了。但无论是那种重启，在电脑黑屏时都必须要立刻拔掉U盘！！！</strong></p><ol start="9"><li><p>接下来电脑可能会重启好几次，这些都正常。这过程中不需要碰电脑，等待它正式进入系统设置页面就OK了。</p></li><li><p>进入桌面后不要忘了安装驱动程序，否则电脑会很卡。安装驱动时建议使用电脑官方提供的电脑管家。如果是组装机，那么可以从该主板品牌官网直接下载必要的驱动程序。个人不太建议使用驱动人生等乱七八糟的软件，因为这些软件也有很多流氓行为，一不小心就会给电脑安装流氓软件。</p></li></ol><p><img src="https://img.777nx.cn/test/670.png" alt="670"></p><ol start="11"><li>就这样，重装系统结束了。</li></ol><h2 id="六、最后">六、最后</h2><p>系统没有激活，系统的功能会被限制，比如你在桌面空白处点击右键，进入个性化设置，就会要求你进行激活，而WIN11激活需要秘钥。不懂激活，可以去我的公众号：<strong>Fantasy的技术小站</strong>，回复“激活”，也可以百度搜下激活。这样，所有的系统的相关事情就搞完了。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vscode镜像下载</title>
      <link href="/posts/b663c12a.html"/>
      <url>/posts/b663c12a.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>vscode官方网站下载速度太慢，非正规网站又不太敢下，通过镜像源下载就好了。</p><h2 id="教程">教程</h2><p>你们不介意版本的话，下面是1.78版本的链接（直接复制下载就好了）：<br><a href="https://vscode.cdn.azure.cn/stable/252e5463d60e63238250799aef7375787f68b4ee/VSCodeUserSetup-x64-1.78.0.exe">https://vscode.cdn.azure.cn/stable/252e5463d60e63238250799aef7375787f68b4ee/VSCodeUserSetup-x64-1.78.0.exe</a></p><ol><li>首先进入<a href="https://code.visualstudio.com/">vscode官方网站</a>，点击Download for Windows下载（最新版）。</li></ol><p><img src="https://img.777nx.cn/test/image-20230421194611880.png" alt="image-20230421194611880"></p><ol start="2"><li>然后进入到下载页面，点击链接，加载一会会，等到出现链接</li></ol><p><img src="https://img.777nx.cn/test/image-20230421194725264.png" alt="image-20230421194725264"></p><ol start="3"><li>直接在地址栏按下面方式修改就好啦。将地址中的/stable前的<code>az764295.vo.msecnd.net</code>换成<code>vscode.cdn.azure.cn</code>，再回车就会直接在下载列表啦。</li></ol><p><img src="https://img.777nx.cn/test/image-20230421195057696.png" alt="image-20230421195057696"></p><h2 id="最后">最后</h2><p>我的博客即将同步至腾讯云开发者社区，邀请大家一同入驻：<a href="https://cloud.tencent.com/developer/support-plan?invite_code=9m0hq0k625h2">https://cloud.tencent.com/developer/support-plan?invite_code=9m0hq0k625h2</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vscode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数学建模竞赛准备之python环境篇</title>
      <link href="/posts/4e7f4123.html"/>
      <url>/posts/4e7f4123.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、前言">一、前言</h2><p>最近正在准备数维杯，之前试过在电脑上安装 tensorflow，但一直都不成功。然后看了一眼 pip 管理工具下一堆包，乱得一批，所以干脆直接打算捡一些比较重点的包装上，比较鸡肋的就不要了。</p><h2 id="二、环境准备">二、环境准备</h2><h3 id="pip安装与使用">pip安装与使用</h3><p>pip 是 Python 包管理工具，该工具提供了对Python 包的查找、下载、安装、卸载的功能。</p><p>目前如果你在 <a href="https://www.python.org/">python.org</a> 下载最新版本的安装包，则是已经自带了该工具。</p><blockquote><p><em>注意：Python 2.7.9 + 或 Python 3.4+ 以上版本都自带 pip 工具。</em></p></blockquote><p>pip 官网：<a href="https://pypi.org/project/pip/">https://pypi.org/project/pip/</a></p><p>你可以通过以下命令来判断是否已安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip --version     # Python2.x 版本命令</span><br><span class="line">pip3 --version    # Python3.x 版本命令</span><br></pre></td></tr></table></figure><h3 id="pip使用国内镜像源">pip使用国内镜像源</h3><p>默认情况下 pip 使用的是国外的镜像，在下载的时候速度非常慢，本文我们介绍使用国内清华大学的源，地址为：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure><p>我们可以直接在 pip 命令中使用 <strong>-i</strong> 参数来指定镜像地址，例如：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install numpy -i https:<span class="regexp">//</span>pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure><p>以上命令使用清华镜像源安装 numpy 包。</p><p>这种只对当前安装对命令有用，如果需要全局修改，则需要修改配置文件。</p><p>Linux/Mac os 环境中，配置文件位置在 ~/.pip/pip.conf（如果不存在创建该目录和文件）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> ~/.pip</span><br></pre></td></tr></table></figure><p>打开配置文件 <code>~/.pip/pip.conf</code>，修改如下：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="keyword">global</span>]</span><br><span class="line"><span class="keyword">index</span>-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">[install]</span><br><span class="line"><span class="keyword">trusted</span>-host = https://pypi.tuna.tsinghua.edu.cn</span><br></pre></td></tr></table></figure><p>查看 镜像地址：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ pip3 config list   </span><br><span class="line"><span class="keyword">global</span>.<span class="keyword">index</span>-url=<span class="string">&#x27;https://pypi.tuna.tsinghua.edu.cn/simple&#x27;</span></span><br><span class="line">install.<span class="keyword">trusted</span>-host=<span class="string">&#x27;https://pypi.tuna.tsinghua.edu.cn&#x27;</span></span><br></pre></td></tr></table></figure><p>可以看到已经成功修改了镜像。</p><p>Windows下，你需要在当前对用户目录下（C:\Users\xx\pip，xx 表示当前使用对用户，比如张三）创建一个 pip.ini在pip.ini文件中输入以下内容：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="keyword">global</span>]</span><br><span class="line"><span class="keyword">index</span>-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">[install]</span><br><span class="line"><span class="keyword">trusted</span>-host = pypi.tuna.tsinghua.edu.cn</span><br></pre></td></tr></table></figure><h3 id="升级pip包管理工具">升级pip包管理工具</h3><p>在命令行中输入下命令（如果是最新版本这一步可略）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m pip install --upgrade pip</span><br></pre></td></tr></table></figure><h3 id="卸载pip下管理的所有包">卸载pip下管理的所有包</h3><p>首先在命令行输入下命令，目的是将 pip 下管理所有的包信息写到一个文本文件中：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip freeze &gt; requirements.txt</span><br></pre></td></tr></table></figure><p>再按照 所生成文本文件的信息将所有信息卸载：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip uninstall -r requirements.txt</span><br></pre></td></tr></table></figure><h3 id="批量下载自己所需的包">批量下载自己所需的包</h3><p>首先先要定义 requirements.txt 文件，里面的格式是一个包的名字一行，依次往下排。分享一下我的：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">numpy</span></span><br><span class="line"><span class="attribute">pandas</span></span><br><span class="line"><span class="attribute">pyecharts</span></span><br><span class="line"><span class="attribute">matplotlib</span></span><br><span class="line"><span class="attribute">seaborn</span></span><br><span class="line"><span class="attribute">keras</span></span><br><span class="line"><span class="attribute">tensorflow</span></span><br><span class="line"><span class="attribute">sklearn</span></span><br><span class="line"><span class="attribute">statsmodels</span></span><br><span class="line"><span class="attribute">scipy</span></span><br><span class="line"><span class="attribute">biopython</span></span><br></pre></td></tr></table></figure><p>再安装所有：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure><h2 id="三、python包推荐及介绍">三、python包推荐及介绍</h2><ul><li><p>numpy</p><p>数据分析类，相当于 免费版的Matlab 矩阵功能以及其它一些少量的小算法。</p></li><li><p>pandas</p><p>数据分析类，非常完美的表格操作，非常适合洗数据。</p></li><li><p>pyecharts</p><p>数据可视化类，百度良心开源项目的echarts 的python 接口，功能非常强大，但缺点就是通常代码量会比较大，比较建议用来做地图（比 geopandas 安装方便一万倍）。</p></li><li><p>matplotlib</p><p>数据可视化类，非常经典的数据可视化工具，功能很全面，代码量比 pyecharts 少，但图效果通常相对简单。</p></li><li><p>seaborn</p><p>数据可视化类，基于 matplotlib 开发的可视化工具，它的特点是所有的零碎东西几乎都是设置成你想要的样子，而且做复杂图代码量相较 matplotlib 而言极少，且里面还包含了一些常用的算法最终一块可视化，亮点是甚至还能深度兼容 pandas 表格，强烈推荐！</p></li><li><p>tensorflow</p><p>神经网络类，Google 的开源神经网络构建工具，在计算机界应该是相当出名，构建自由度极强，但缺点就是代码量比较大（自由度高的代价）。</p></li><li><p>keras</p><p>神经网络类，基于 tensorflow 开发的神经网络构建工具，比 tensorflow 的代码量要少很多，对新手比较友好，竞赛期间比较推荐用这个包，省时间，代码量小。</p></li><li><p>sklearn</p><p>机器学习类，功能十分强大，代码量短小精悍。基本上除神经网络外其他所有机器学习算法（包括回归、聚类、降维）总之基本上 Matlab 直接支持的那些机器学习算法，甚至还有部分 Matlab 不直接支持的算法（例如 t-SNE、MDS 等）都能以 5 行以内的代码量实现。</p></li><li><p>scipy</p><p>数据科学、算法类，功能也是非常强大。包含特殊函数、统计学、微积分求解、拟合（基本所有拟合都能做）、线性规划、整数规划、数据结构算法等，甚至还可以做图片处理。</p></li></ul><h2 id="四、参考教程">四、参考教程</h2><ol><li><p><a href="https://www.runoob.com/w3cnote/python-pip-install-usage.html">Python pip 安装与使用</a></p></li><li><p><a href="https://www.runoob.com/w3cnote/pip-cn-mirror.html">pip 使用国内镜像源</a></p></li><li><p><a href="https://www.modb.pro/db/479910">数学建模竞赛准备之python环境篇</a></p></li></ol><h2 id="五、最后">五、最后</h2>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如果时光可以倒流</title>
      <link href="/posts/f7be2b02.html"/>
      <url>/posts/f7be2b02.html</url>
      
        <content type="html"><![CDATA[<h1>如果时光可以倒流</h1><p>如果真的有反方向的钟，我希望回到刚遇见你的时候，因为那个时候，我连你叫什么都不感兴趣。</p><p>一开始就知道我们注定无法在一起，但我却没能藏住心底的秘密。想到这里我的内心就开始隐隐作痛。</p><p>喜欢你和放下你，我都做不到。</p><p>比结束更痛苦的，就是拖泥带水的耗着。说爱吧，耗尽了所有希望，说不爱吧，又在某个瞬间发了疯的想。一边崩溃，一边自愈，反反复复，一边清醒，一边糊涂，一边说放下，一边又无可救药的想。</p>]]></content>
      
      
      <categories>
          
          <category> 生活趣闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 时光 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>eshop商城项目实训代码重构</title>
      <link href="/posts/f56b144a.html"/>
      <url>/posts/f56b144a.html</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><p><strong>eshop商城项目实训系列教程导航</strong></p><ol><li><a href="https://www.777nx.cn/posts/3bc4be07.html">eshop商城项目实训源码</a></li><li><a href="https://www.777nx.cn/posts/f56b144a.html">eshop商城项目实训代码重构</a> &lt;= 当前位置</li></ol></div><h2 id="基本架构">基本架构</h2><p>要先把基本框架搭建起来，才能够愉快的写代码</p><h3 id="1-entity">1. entity</h3><p>先看下数据库表结构</p><p><img src="https://img.777nx.cn/test/image-20230330174111302.png" alt="image-20230330174111302"></p><p>要在<code>eshop-business</code>模块下新建<code>src\main\java</code>的文件夹，在该文件夹下创建<code>com.eshop.entity</code>的包，在该包下创建<code>StoreProductRelation</code>的实体类与之数据表一一对应，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.eshop.domain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.IdType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.TableId;</span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Builder;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StoreProductRelation</span> <span class="keyword">extends</span> <span class="title class_">BaseDomain</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableId(value = &quot;id&quot;, type = IdType.AUTO)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> Long uid;</span><br><span class="line">    <span class="keyword">private</span> Long productId;</span><br><span class="line">    <span class="keyword">private</span> String type;</span><br><span class="line">    <span class="keyword">private</span> String category;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为该表继承了<code>BaseDomain</code>，拥有父的属性</p><p><code>BaseDomain</code>的部分代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line">   <span class="meta">@TableField(</span></span><br><span class="line"><span class="meta">       fill = FieldFill.INSERT</span></span><br><span class="line"><span class="meta">   )</span></span><br><span class="line">   <span class="meta">@JsonFormat(</span></span><br><span class="line"><span class="meta">       pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;,</span></span><br><span class="line"><span class="meta">       timezone = &quot;GMT+8&quot;</span></span><br><span class="line"><span class="meta">   )</span></span><br><span class="line">   <span class="keyword">private</span> Date createTime;</span><br><span class="line">   <span class="meta">@TableField(</span></span><br><span class="line"><span class="meta">       fill = FieldFill.UPDATE</span></span><br><span class="line"><span class="meta">   )</span></span><br><span class="line">   <span class="meta">@JsonFormat(</span></span><br><span class="line"><span class="meta">       pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;,</span></span><br><span class="line"><span class="meta">       timezone = &quot;GMT+8&quot;</span></span><br><span class="line"><span class="meta">   )</span></span><br><span class="line">   <span class="keyword">private</span> Date updateTime;</span><br><span class="line">   <span class="meta">@TableLogic</span></span><br><span class="line">   <span class="meta">@JsonIgnore</span></span><br><span class="line">   <span class="meta">@TableField(</span></span><br><span class="line"><span class="meta">       fill = FieldFill.INSERT</span></span><br><span class="line"><span class="meta">   )</span></span><br><span class="line">   <span class="keyword">private</span> Integer isDel;</span><br></pre></td></tr></table></figure><h3 id="2-mapper">2. mapper</h3><p>在<code>mapper</code>的包下新建<code>ProductRelationMapper</code>的类，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.eshop.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class="line"><span class="keyword">import</span> com.eshop.domain.StoreProductRelation;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ProductRelationMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;StoreProductRelation&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-service">3. service</h3><p>在<code>service</code>的包下新建<code>ProductRelationService</code>的类，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.eshop.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.service.IService;</span><br><span class="line"><span class="keyword">import</span> com.eshop.domain.StoreProductRelation;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ProductRelationService</span> <span class="keyword">extends</span> <span class="title class_">IService</span>&lt;StoreProductRelation&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新建<code>ProductRelationServiceImpl</code>的实现类，实现<code>ProductRelationService</code>的接口，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.eshop.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;</span><br><span class="line"><span class="keyword">import</span> com.eshop.api.EshopException;</span><br><span class="line"><span class="keyword">import</span> com.eshop.domain.StoreProductRelation;</span><br><span class="line"><span class="keyword">import</span> com.eshop.mapper.ProductRelationMapper;</span><br><span class="line"><span class="keyword">import</span> com.eshop.service.ProductRelationService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductRelationServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;ProductRelationMapper, StoreProductRelation&gt; <span class="keyword">implements</span> <span class="title class_">ProductRelationService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ProductRelationMapper productRelationMapper;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-controller">4. controller</h3><p>在<code>com.eshop</code>下新建一个包，包名叫<code>controller</code>，新建一个类，类名叫<code>ProductCollectController</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.eshop.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.util.NumberUtil;</span><br><span class="line"><span class="keyword">import</span> com.eshop.api.ApiResult;</span><br><span class="line"><span class="keyword">import</span> com.eshop.api.EshopException;</span><br><span class="line"><span class="keyword">import</span> com.eshop.common.bean.LocalUser;</span><br><span class="line"><span class="keyword">import</span> com.eshop.common.interceptor.AuthCheck;</span><br><span class="line"><span class="keyword">import</span> com.eshop.modules.product.param.StoreProductRelationQueryParam;</span><br><span class="line"><span class="keyword">import</span> com.eshop.service.ProductRelationService;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.annotation.Validated;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/collect&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductCollectController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ProductRelationService productRelationService;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="功能编码">功能编码</h2><h3 id="1-商品添加收藏">1. 商品添加收藏</h3><p>前端发过来的请求(使用的是post方式)：<code>http://localhost:8008/api/collect/add</code></p><p><img src="https://img.777nx.cn/test/image-20230329114943308.png" alt="image-20230329114943308"></p><p>看报错<code>Request method 'POST' not supported</code>，不支持请求方法“POST”</p><p>开始编写controller层的代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加收藏</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> param body部分，需要查询的参数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 是否成功：成功 true，失败 false</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/add&quot;)</span></span><br><span class="line"><span class="meta">@AuthCheck</span></span><br><span class="line"><span class="keyword">public</span> ApiResult&lt;Boolean&gt; <span class="title function_">addProductCollect</span><span class="params">(<span class="meta">@Validated</span> <span class="meta">@RequestBody</span> StoreProductRelationQueryParam param)</span>&#123;</span><br><span class="line">    <span class="type">Long</span> <span class="variable">uid</span> <span class="operator">=</span> LocalUser.getUser().getUid();</span><br><span class="line">    <span class="keyword">if</span> (!NumberUtil.isNumber(param.getId()))&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">EshopException</span>(<span class="string">&quot;参数非法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    productRelationService.addProductCollect(Long.valueOf(param.getId()), uid, param.getCategory());</span><br><span class="line">    <span class="keyword">return</span> ApiResult.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>部分注解说明：</p><ul><li>@NoRepeatSubmit：防止重复提交自定义注解</li><li>@AuthCheck：自定义注解实现用户行为认证</li><li>@Validated：参数验证注解</li></ul><h4 id="1-1-是否收藏">1.1 是否收藏</h4><p>service接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 是否收藏</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> productId 商品ID</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uid 用户ID</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> Boolean</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Boolean <span class="title function_">isProductRelation</span><span class="params">(<span class="type">long</span> productId, <span class="type">long</span> uid)</span>;</span><br></pre></td></tr></table></figure><p>实现该业务功能：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 是否收藏</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> productId 商品Id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uid 用户Id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isProductCollect</span><span class="params">(<span class="type">long</span> productId, <span class="type">long</span> uid)</span> &#123;</span><br><span class="line">    LambdaQueryWrapper&lt;StoreProductRelation&gt; lqw = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">    lqw.eq(StoreProductRelation::getProductId, productId)</span><br><span class="line">            .eq(StoreProductRelation::getUid, uid)</span><br><span class="line">            .eq(StoreProductRelation::getType, <span class="string">&quot;collect&quot;</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> productRelationMapper.selectCount(lqw);</span><br><span class="line">    <span class="keyword">if</span> (count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-2-添加收藏">1.2 添加收藏</h4><p>service接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加收藏</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> productId 商品Id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uid 用户Id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> category</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">addProductCollect</span><span class="params">(<span class="type">long</span> productId, <span class="type">long</span> uid, String category)</span>;</span><br></pre></td></tr></table></figure><p>实现该业务功能：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加收藏</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> productId 商品Id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uid 用户Id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> category</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addProductCollect</span><span class="params">(<span class="type">long</span> productId, <span class="type">long</span> uid, String category)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (isProductCollect(productId, uid))&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">EshopException</span>(<span class="string">&quot;已收藏&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">StoreProductRelation</span> <span class="variable">storeProductRelation</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StoreProductRelation</span>();</span><br><span class="line">    storeProductRelation.setProductId(productId);</span><br><span class="line">    storeProductRelation.setUid(uid);</span><br><span class="line">    storeProductRelation.setType(category);</span><br><span class="line">    productRelationMapper.insert(storeProductRelation);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-商品取消收藏">2. 商品取消收藏</h3><p>前端发过来的请求(使用的是post方式)：<code>http://localhost:8008/api/collect/del</code></p><p>controller层：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 取消收藏</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> param body部分，需要查询的参数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 是否成功：成功 true，失败 false</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@NoRepeatSubmit</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/del&quot;)</span></span><br><span class="line"><span class="meta">@AuthCheck</span></span><br><span class="line"><span class="keyword">public</span> ApiResult&lt;Boolean&gt; <span class="title function_">delProductCollect</span><span class="params">(<span class="meta">@Validated</span> <span class="meta">@RequestBody</span> StoreProductRelationQueryParam param)</span>&#123;</span><br><span class="line">    <span class="type">Long</span> <span class="variable">uid</span> <span class="operator">=</span> LocalUser.getUser().getUid();</span><br><span class="line">    <span class="keyword">if</span> (!NumberUtil.isNumber(param.getId()))&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">EshopException</span>(<span class="string">&quot;参数非法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    productRelationService.delProductCollect(Long.valueOf(param.getId()), uid, param.getCategory());</span><br><span class="line">    <span class="keyword">return</span> ApiResult.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>service接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 取消收藏</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> productId 商品Id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uid 用户Id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> category</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">delProductCollect</span><span class="params">(<span class="type">long</span> productId, <span class="type">long</span> uid, String category)</span>;</span><br></pre></td></tr></table></figure><p>实现该业务功能：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 取消收藏</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> productId 商品Id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uid       用户Id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> category</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delProductCollect</span><span class="params">(<span class="type">long</span> productId, <span class="type">long</span> uid, String category)</span> &#123;</span><br><span class="line">    LambdaQueryWrapper&lt;StoreProductRelation&gt; lqw = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">    lqw.eq(StoreProductRelation::getProductId, productId)</span><br><span class="line">            .eq(StoreProductRelation::getUid, uid)</span><br><span class="line">            .eq(StoreProductRelation::getType, category);</span><br><span class="line">    <span class="type">StoreProductRelation</span> <span class="variable">productRelation</span> <span class="operator">=</span> productRelationMapper.selectOne(lqw);</span><br><span class="line">    <span class="keyword">if</span> (productRelation == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">EshopException</span>(<span class="string">&quot;已取消&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.removeById(productRelation.getId());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-批量删除收藏-足迹">3. 批量删除收藏/足迹</h3><p>前端发过来的请求(使用的是post方式)：<code>http://localhost:8008/api/collect/dels/&#123;productIds&#125;</code></p><p>controller层：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 批量删除收藏/足迹 collect收藏 foot 足迹</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> productIds 商品Id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> param body部分，需要查询的参数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 是否成功：成功 true，失败 false</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@NoRepeatSubmit</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/dels/&#123;productIds&#125;&quot;)</span></span><br><span class="line"><span class="meta">@AuthCheck</span></span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="keyword">public</span> ApiResult&lt;Boolean&gt; <span class="title function_">delCollects</span><span class="params">(<span class="meta">@PathVariable</span> String productIds,<span class="meta">@RequestBody</span> StoreProductRelationQueryParam param)</span> &#123;</span><br><span class="line">    <span class="type">Long</span> <span class="variable">uid</span> <span class="operator">=</span> LocalUser.getUser().getUid();</span><br><span class="line">    String[] ids = productIds.split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (ids.length &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span> (String id : ids) &#123;</span><br><span class="line">            productRelationService.delProductCollect(Long.valueOf(id), uid, param.getCategory());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">EshopException</span>(<span class="string">&quot;参数非法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ApiResult.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-获取收藏或足迹">4. 获取收藏或足迹</h3><p>前端发过来的请求(使用的是get方式)：<code>http://localhost:8008/api/collect/user?limit=10&amp;page=1&amp;type=foot</code></p><p>后端接受的请求：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="meta">@AuthCheck</span></span><br><span class="line"><span class="keyword">public</span> ApiResult&lt;List&lt;StoreProductRelationQueryVo&gt;&gt; <span class="title function_">UserCollect</span><span class="params">(<span class="meta">@RequestParam(value = &quot;page&quot;, defaultValue = &quot;1&quot;)</span> <span class="type">int</span> page, <span class="meta">@RequestParam(value = &quot;limit&quot;, defaultValue = &quot;10&quot;)</span> <span class="type">int</span> limit, <span class="meta">@RequestParam(value = &quot;type&quot;)</span> String type)</span> &#123;</span><br><span class="line">    log.info(<span class="string">&quot;limit: &#123;&#125;&quot;</span>, limit);</span><br><span class="line">    log.info(<span class="string">&quot;page: &#123;&#125;&quot;</span>, page);</span><br><span class="line">    log.info(<span class="string">&quot;type: &#123;&#125;&quot;</span>, type);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现可以接收到前端参数后，开始补全<code>controller</code>层代码，添加下面的接口代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取用户收藏列表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> page 页码,默认为 1</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> limit 页大小,默认为 10</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> type foot为足迹，collect为收藏</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="meta">@AuthCheck</span></span><br><span class="line"><span class="keyword">public</span> ApiResult&lt;List&lt;StoreProductRelationQueryVo&gt;&gt; <span class="title function_">UserCollect</span><span class="params">(<span class="meta">@RequestParam(value = &quot;page&quot;, defaultValue = &quot;1&quot;)</span> <span class="type">int</span> page, <span class="meta">@RequestParam(value = &quot;limit&quot;, defaultValue = &quot;10&quot;)</span> <span class="type">int</span> limit, <span class="meta">@RequestParam(value = &quot;type&quot;)</span> String type)</span> &#123;</span><br><span class="line">    <span class="type">Long</span> <span class="variable">uid</span> <span class="operator">=</span> LocalUser.getUser().getUid();</span><br><span class="line">    List&lt;StoreProductRelationQueryVo&gt; storeProductRelationQueryVos = productRelationService.userProductCollect(page, limit, uid, type);</span><br><span class="line">    <span class="keyword">return</span> ApiResult.ok(storeProductRelationQueryVos);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时我们发现API文档要返回的数据并不能够满足我们的需求</p><p><img src="https://img.777nx.cn/test/image-20230330225306494.png" alt="image-20230330225306494"></p><p>通过分析返回的数据是来自<code>store_product_relation</code>和<code>store_product</code>两张表的字段，因此需要在<code>vo</code>包下造个<code>StoreProductRelationQueryVo</code>的类，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.eshop.vo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.eshop.serializer.DoubleSerializer;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.annotation.JsonSerialize;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StoreProductRelationQueryVo</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Long</span> <span class="variable">serialVersion</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> Long uid;</span><br><span class="line">    <span class="keyword">private</span> Long productId;</span><br><span class="line">    <span class="keyword">private</span> String type;</span><br><span class="line">    <span class="keyword">private</span> String category;</span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line">    <span class="keyword">private</span> Long pid;</span><br><span class="line">    <span class="keyword">private</span> String image;</span><br><span class="line">    <span class="keyword">private</span> String storeName;</span><br><span class="line">    <span class="keyword">private</span> Double price;</span><br><span class="line">    <span class="meta">@JsonSerialize(using = DoubleSerializer.class)</span></span><br><span class="line">    <span class="keyword">private</span> Double otPrice;</span><br><span class="line">    <span class="keyword">private</span> Integer sales;</span><br><span class="line">    <span class="keyword">private</span> Integer isShow;</span><br><span class="line">    <span class="keyword">private</span> Integer isIntegral;</span><br><span class="line">    <span class="keyword">private</span> Integer integer;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/image-20230330225930287.png" alt="image-20230330225930287"></p><p><img src="https://img.777nx.cn/test/image-20230330230551222.png" alt="image-20230330230551222"></p><p>service层：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取用户收藏列表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> limit 页大小</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> page 页码</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> type foot为足迹 collect为收藏</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uid 用户Id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">List&lt;StoreProductRelationQueryVo&gt; <span class="title function_">userProductCollect</span><span class="params">(<span class="type">int</span> page, <span class="type">int</span> limit, Long uid, String type)</span>;</span><br></pre></td></tr></table></figure><p>实现该业务功能：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取用户收藏列表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> limit 页大小</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> page 页码</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> type foot为足迹 collect为收藏</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uid 用户Id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> List&lt;StoreProductRelationQueryVo&gt; <span class="title function_">userProductCollect</span><span class="params">(<span class="type">int</span> page, <span class="type">int</span> limit, Long uid, String type)</span> &#123;</span><br><span class="line">    <span class="comment">// IPage&lt;StoreProductRelation&gt; pageModel = new Page&lt;&gt;(page, limit);</span></span><br><span class="line">    Page&lt;StoreProductRelation&gt; pageModel = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(page, limit);</span><br><span class="line">    List&lt;StoreProductRelationQueryVo&gt; list = productRelationMapper.selectRelationList(pageModel, uid, type);</span><br><span class="line">    <span class="keyword">return</span> list;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：这里不能够用<code>mybatis-plus的分页插件</code>，控制台会报<code>Handler dispatch failed; nested exception is java.lang.NoSuchMethodError</code>的错误，我推测的sql语句的问题</p></blockquote><p>因为该业务涉及到多表查询，<code>mybatisplus</code>并未给我们提供相关可以调用的接口，所以我们需要自己编写sql语句，去实现我们的需求。sql语句如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select B.id pid,A.type as category,B.store_name as storeName,B.price,B.is_integral as isIntegral, B.ot_price as otPrice,B.sales,B.image,B.is_show as isShow,B.integral as integral from store_product_relation A left join store_product B on A.product_id = B.id where A.type=&#x27;foot&#x27; and A.uid=1 and A.is_del = 0 and B.is_del = 0 order by A.create_time desc</span><br></pre></td></tr></table></figure><p>mapper层：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Select(&quot;select B.id pid,A.type as category,B.store_name as storeName,B.price,B.is_integral as isIntegral,&quot; +</span></span><br><span class="line"><span class="meta">        &quot;B.ot_price as otPrice,B.sales,B.image,B.is_show as isShow,B.integral as integral&quot; +</span></span><br><span class="line"><span class="meta">        &quot; from store_product_relation A left join store_product B &quot; +</span></span><br><span class="line"><span class="meta">        &quot;on A.product_id = B.id where A.type=#&#123;type&#125; and A.uid=#&#123;uid&#125; and A.is_del = 0 and B.is_del = 0 order by A.create_time desc&quot;)</span></span><br><span class="line">List&lt;StoreProductRelationQueryVo&gt; <span class="title function_">selectRelationList</span><span class="params">(Page page, <span class="meta">@Param(&quot;uid&quot;)</span> Long uid, <span class="meta">@Param(&quot;type&quot;)</span> String type)</span>;</span><br></pre></td></tr></table></figure><p>至此功能编码完毕！！</p><h2 id="程序排错">程序排错</h2><h3 id="任务描述">任务描述</h3><p>接口地址<code>/api/register</code>输入相同的手机号注册新用户时，页面显示了SQL错误。正常情况应该显示该手机号已存在。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\r\n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry &#x27;13512345678&#x27; for key &#x27;username&#x27;\r\n### The error may exist in com/eshop/modules/user/service/mapper/UserMapper.java (best guess)\r\n### The error may involve com.eshop.modules.user.service.mapper.UserMapper.insert-Inline\r\n### The error occurred while setting parameters\r\n### SQL: INSERT INTO eshop_user  ( username, password,       nickname, avatar, phone, add_ip, last_ip,         user_type,        create_time,  is_del )  VALUES  ( ?, ?,       ?, ?, ?, ?, ?,         ?,        ?,  ? )\r\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry &#x27;13512345678&#x27; for key &#x27;username&#x27;\n; Duplicate entry &#x27;13512345678&#x27; for key &#x27;username&#x27;; nested exception is java.sql.SQLIntegrityConstraintViolationException: Duplicate entry &#x27;13512345678&#x27; for key &#x27;username&#x27;</span><br></pre></td></tr></table></figure><h3 id="要求">要求</h3><p>修改完代码之后，相同手机号注册时应提示手机号已存在。</p><h3 id="代码编写">代码编写</h3><p>对该接口代码进行分析，发现并未对获得<code>shopUser</code>的对象做判断是否为空对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/register&quot;)</span></span><br><span class="line"><span class="meta">@ApiOperation(value = &quot;H5/APP注册新用户&quot;, notes = &quot;H5/APP注册新用户&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ApiResult&lt;String&gt; <span class="title function_">register</span><span class="params">(<span class="meta">@Validated</span> <span class="meta">@RequestBody</span> RegParam param)</span> &#123;</span><br><span class="line">    <span class="type">Object</span> <span class="variable">codeObj</span> <span class="operator">=</span> redisUtil.get(<span class="string">&quot;code_&quot;</span> + param.getAccount());</span><br><span class="line">    <span class="keyword">if</span>(codeObj == <span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> ApiResult.fail(<span class="string">&quot;请先获取验证码&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">String</span> <span class="variable">code</span> <span class="operator">=</span> codeObj.toString();</span><br><span class="line">    <span class="keyword">if</span> (!StrUtil.equals(code, param.getCaptcha())) &#123;</span><br><span class="line">        <span class="keyword">return</span> ApiResult.fail(<span class="string">&quot;验证码错误&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">ShopUser</span> <span class="variable">shopUser</span> <span class="operator">=</span> userService.getOne(Wrappers.&lt;ShopUser&gt;lambdaQuery()</span><br><span class="line">            .eq(ShopUser::getPhone,param.getAccount()),<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">    authService.register(param);</span><br><span class="line">    <span class="keyword">return</span> ApiResult.ok(<span class="string">&quot;&quot;</span>,<span class="string">&quot;注册成功&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因此编写以下代码对<code>shopUser</code>进行是否为空对象判断：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (ObjectUtil.isNotNull(shopUser))&#123;</span><br><span class="line">    <span class="keyword">return</span> ApiResult.fail(<span class="string">&quot;用户已存在&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>经测试后成功！！</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> eshop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>eshop商城项目实训源码</title>
      <link href="/posts/3bc4be07.html"/>
      <url>/posts/3bc4be07.html</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><p><strong>eshop商城项目实训系列教程导航</strong></p><ol><li><a href="https://www.777nx.cn/posts/3bc4be07.html">eshop商城项目实训源码</a> &lt;= 当前位置</li><li><a href="https://www.777nx.cn/posts/f56b144a.html">eshop商城项目实训代码重构</a></li></ol></div><h2 id="基本架构">基本架构</h2><p>要先把基本框架搭建起来，才能够愉快的写代码</p><h3 id="1-domain">1. domain</h3><p>在<code>eshop-business</code>模块下新建<code>src\main\java</code>的文件夹，在该文件夹下创建<code>com.eshop.modules.business.domain</code>的包，在该包下创建<code>StoreProductRelation</code>的实体类，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.eshop.<span class="keyword">module</span>.business.domain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.IdType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.TableId;</span><br><span class="line"><span class="keyword">import</span> com.eshop.domain.BaseDomain;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModelProperty;</span><br><span class="line"><span class="keyword">import</span> lombok.*;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="meta">@Setter</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@Builder</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StoreProductRelation</span> <span class="keyword">extends</span> <span class="title class_">BaseDomain</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableId(value = &quot;id&quot;, type = IdType.AUTO)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;用户ID&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Long uid;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;商品ID&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Long productId;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;类型(收藏(collect）、点赞(like)、足迹(foot))&quot;)</span></span><br><span class="line"><span class="meta">    private String type;</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">    @ApiModelProperty(value = &quot;某种类型的商品(普通商品、秒杀商品)&quot;)</span></span><br><span class="line"><span class="meta">    private String category;</span></span><br><span class="line"><span class="meta">&#125;</span></span><br></pre></td></tr></table></figure><p>部分注解说明：</p><ul><li>@Builder：为类生成相对略微复杂的构建器 API</li><li>@ApiModelProperty：添加和操作属性模块的数据</li></ul><h3 id="2-mapper">2. mapper</h3><p>在<code>mapper</code>的包下新建<code>ProductRelationMapper</code>的类，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.eshop.<span class="keyword">module</span>.business.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.eshop.common.mapper.CoreMapper;</span><br><span class="line"><span class="keyword">import</span> com.eshop.<span class="keyword">module</span>.business.domain.StoreProductRelation;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ProductRelationMapper</span> <span class="keyword">extends</span> <span class="title class_">CoreMapper</span>&lt;StoreProductRelation&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中接口<code>ProductRelationMapper</code>继承的<code>CoreMapper</code>，<code>CoreMapper</code>继承<code>BaseMapper</code>，相当于<code>ProductRelationMapper</code>继承<code>CoreMapper</code></p><p><img src="https://img.777nx.cn/test/image-20230329123904643.png" alt="image-20230329123904643"></p><h3 id="3-service">3. service</h3><p>在<code>service</code>的包下新建<code>ProductRelationService</code>的类，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.eshop.<span class="keyword">module</span>.business.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.eshop.common.service.BaseService;</span><br><span class="line"><span class="keyword">import</span> com.eshop.<span class="keyword">module</span>.business.domain.StoreProductRelation;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ProductRelationService</span> <span class="keyword">extends</span> <span class="title class_">BaseService</span>&lt;StoreProductRelation&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新建<code>ProductRelationServiceImpl</code>的实现类，实现<code>ProductRelationService</code>的接口，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.eshop.<span class="keyword">module</span>.business.service.impl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.toolkit.Wrappers;</span><br><span class="line"><span class="keyword">import</span> com.eshop.api.EshopException;</span><br><span class="line"><span class="keyword">import</span> com.eshop.common.service.impl.BaseServiceImpl;</span><br><span class="line"><span class="keyword">import</span> com.eshop.dozer.service.IGenerator;</span><br><span class="line"><span class="keyword">import</span> com.eshop.<span class="keyword">module</span>.business.domain.StoreProductRelation;</span><br><span class="line"><span class="keyword">import</span> com.eshop.<span class="keyword">module</span>.business.mapper.ProductRelationMapper;</span><br><span class="line"><span class="keyword">import</span> com.eshop.<span class="keyword">module</span>.business.service.ProductRelationService;</span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@Transactional(rollbackFor = Exception.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductRelationServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">BaseServiceImpl</span>&lt;ProductRelationMapper, StoreProductRelation&gt; <span class="keyword">implements</span> <span class="title class_">ProductRelationService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ProductRelationMapper productRelationMapper;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> IGenerator generator;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-controller">4. controller</h3><p>在<code>com.eshop</code>下新建一个包，包名叫<code>controller</code>，新建一个类，类名叫<code>ProductCollectController</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.eshop.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.eshop.<span class="keyword">module</span>.business.service.ProductRelationService;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.Api;</span><br><span class="line"><span class="keyword">import</span> lombok.RequiredArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@Api(value = &quot;产品模块&quot;, tags = &quot;商城:产品模块&quot;)</span></span><br><span class="line"><span class="meta">@RequiredArgsConstructor(onConstructor = @__(@Autowired))</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductCollectController</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ProductRelationService productRelationService;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>部分注解说明：</p><ul><li>@Api：用在请求的类上,表示对类的说明</li><li>@RequiredArgsConstructor：生成带有必需参数的构造函数</li></ul><h2 id="功能编码">功能编码</h2><h3 id="1-商品添加收藏">1. 商品添加收藏</h3><p>前端发过来的请求(使用的是post方式)：<code>http://localhost:8008/api/collect/add</code></p><p><img src="https://img.777nx.cn/test/image-20230329114943308.png" alt="image-20230329114943308"></p><p>看报错<code>Request method 'POST' not supported</code>，不支持请求方法“POST”</p><p>开始编写controller层的代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加收藏</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> param body部分，需要查询的参数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 是否成功：成功 true，失败 false</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@AppLog(value = &quot;添加收藏&quot;, type = 1)</span></span><br><span class="line"><span class="meta">@NoRepeatSubmit</span></span><br><span class="line"><span class="meta">@AuthCheck</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;//collect/add&quot;)</span></span><br><span class="line"><span class="meta">@ApiModelProperty(value = &quot;添加收藏&quot;, notes = &quot;添加收藏&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ApiResult&lt;Boolean&gt; <span class="title function_">collectAdd</span><span class="params">(<span class="meta">@Validated</span> <span class="meta">@RequestBody</span> StoreProductRelationQueryParam param)</span>&#123;</span><br><span class="line">    <span class="type">Long</span> <span class="variable">uid</span> <span class="operator">=</span> LocalUser.getUser().getUid();</span><br><span class="line">    <span class="keyword">if</span> (!NumberUtil.isNumber(param.getId()))&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">EshopException</span>(<span class="string">&quot;参数非法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 调业务层</span></span><br><span class="line">    productRelationService.addRroductRelation(Long.valueOf(param.getId()), uid, param.getCategory());</span><br><span class="line">    <span class="keyword">return</span> ApiResult.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>部分注解说明：</p><ul><li>@AppLog：自定义日志注解</li><li>@NoRepeatSubmit：防止重复提交自定义注解</li><li>@AuthCheck：自定义注解实现用户行为认证</li><li>@ApiModelProperty：添加和操作属性模块的数据</li></ul><h4 id="1-1-是否收藏">1.1 是否收藏</h4><p>service接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 是否收藏</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> productId 商品ID</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uid 用户ID</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> Boolean</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Boolean <span class="title function_">isProductRelation</span><span class="params">(<span class="type">long</span> productId, <span class="type">long</span> uid)</span>;</span><br></pre></td></tr></table></figure><p>实现该业务功能：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 是否收藏</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> productId 商品ID</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uid 用户ID</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> Boolean</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Boolean <span class="title function_">isProductRelation</span><span class="params">(<span class="type">long</span> productId, <span class="type">long</span> uid)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> productRelationMapper</span><br><span class="line">            .selectCount(Wrappers.&lt;StoreProductRelation&gt;lambdaQuery()</span><br><span class="line">                    .eq(StoreProductRelation::getUid,uid)</span><br><span class="line">                    .eq(StoreProductRelation::getType,<span class="string">&quot;collect&quot;</span>)</span><br><span class="line">                    .eq(StoreProductRelation::getProductId,productId));</span><br><span class="line">    <span class="keyword">if</span>(count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-2-添加收藏">1.2 添加收藏</h4><p>service接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *添加收藏</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> productId 商品id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uid 用户id</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">addRroductRelation</span><span class="params">(<span class="type">long</span> productId,<span class="type">long</span> uid,String category)</span>;</span><br></pre></td></tr></table></figure><p>实现该业务功能：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加收藏</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> productId 商品id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uid 用户id</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addRroductRelation</span><span class="params">(<span class="type">long</span> productId,<span class="type">long</span> uid,String category)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(isProductRelation(productId,uid)) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">EshopException</span>(<span class="string">&quot;已收藏&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">StoreProductRelation</span> <span class="variable">storeProductRelation</span> <span class="operator">=</span> StoreProductRelation.builder()</span><br><span class="line">            .productId(productId)</span><br><span class="line">            .uid(uid)</span><br><span class="line">            .type(category)</span><br><span class="line">            .build();</span><br><span class="line">    productRelationMapper.insert(storeProductRelation);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-商品取消收藏">2. 商品取消收藏</h3><p>前端发过来的请求(使用的是post方式)：<code>http://localhost:8008/api/collect/del</code></p><p>controller层：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 取消收藏</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@AppLog(value = &quot;取消收藏&quot;, type = 1)</span></span><br><span class="line"><span class="meta">@NoRepeatSubmit</span></span><br><span class="line"><span class="meta">@AuthCheck</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/collect/del&quot;)</span></span><br><span class="line"><span class="meta">@ApiOperation(value = &quot;取消收藏&quot;,notes = &quot;取消收藏&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ApiResult&lt;Boolean&gt; <span class="title function_">collectDel</span><span class="params">(<span class="meta">@Validated</span> <span class="meta">@RequestBody</span> StoreProductRelationQueryParam param)</span>&#123;</span><br><span class="line">    <span class="type">long</span> <span class="variable">uid</span> <span class="operator">=</span> LocalUser.getUser().getUid();</span><br><span class="line">    <span class="keyword">if</span>(!NumberUtil.isNumber(param.getId())) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">EshopException</span>(<span class="string">&quot;参数非法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    productRelationService.delRroductRelation(Long.valueOf(param.getId()),</span><br><span class="line">            uid,param.getCategory());</span><br><span class="line">    <span class="keyword">return</span> ApiResult.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>service接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 取消收藏</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> productId 商品id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uid 用户id</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">delRroductRelation</span><span class="params">(<span class="type">long</span> productId,<span class="type">long</span> uid,String category)</span>;</span><br></pre></td></tr></table></figure><p>实现该业务功能：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 取消收藏</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> productId 商品id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uid 用户id</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delRroductRelation</span><span class="params">(<span class="type">long</span> productId,<span class="type">long</span> uid,String category)</span> &#123;</span><br><span class="line">    <span class="type">StoreProductRelation</span> <span class="variable">productRelation</span> <span class="operator">=</span> <span class="built_in">this</span>.lambdaQuery()</span><br><span class="line">            .eq(StoreProductRelation::getProductId,productId)</span><br><span class="line">            .eq(StoreProductRelation::getUid,uid)</span><br><span class="line">            .eq(StoreProductRelation::getType,category)</span><br><span class="line">            .one();</span><br><span class="line">    <span class="keyword">if</span>(productRelation == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">EshopException</span>(<span class="string">&quot;已取消&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.removeById(productRelation.getId());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-批量删除收藏-足迹">3. 批量删除收藏/足迹</h3><p>前端发过来的请求(使用的是post方式)：<code>http://localhost:8008/api/collect/dels/&#123;productIds&#125;</code></p><p>controller层：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@AppLog(value = &quot;批量取消收藏&quot;, type = 1)</span></span><br><span class="line"><span class="meta">@NoRepeatSubmit</span></span><br><span class="line"><span class="meta">@AuthCheck</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/collect/dels/&#123;productIds&#125;&quot;)</span></span><br><span class="line"><span class="meta">@ApiOperation(value = &quot;批量取消收藏&quot;,notes = &quot;批量取消收藏&quot;)</span></span><br><span class="line"><span class="meta">@Transactional(rollbackFor = Exception.class)</span></span><br><span class="line"><span class="keyword">public</span> ApiResult&lt;Boolean&gt; <span class="title function_">collectDels</span><span class="params">(<span class="meta">@PathVariable</span> String productIds,<span class="meta">@RequestBody</span> StoreProductRelationQueryParam param)</span>&#123;</span><br><span class="line">    <span class="type">long</span> <span class="variable">uid</span> <span class="operator">=</span> LocalUser.getUser().getUid();</span><br><span class="line">    String[] ids = productIds.split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(ids.length &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span> (String id : ids)&#123;</span><br><span class="line">            productRelationService.delRroductRelation(Long.parseLong(id), uid, param.getCategory());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">EshopException</span>(<span class="string">&quot;参数非法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ApiResult.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-获取收藏或足迹">4. 获取收藏或足迹</h3><p>前端发过来的请求(使用的是get方式)：<code>http://localhost:8008/api/collect/user</code></p><p>controller层：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@AuthCheck</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/collect/user&quot;)</span></span><br><span class="line">    <span class="meta">@ApiImplicitParams(&#123;</span></span><br><span class="line"><span class="meta">            @ApiImplicitParam(name = &quot;page&quot;, value = &quot;页码,默认为1&quot;, paramType = &quot;query&quot;, dataType = &quot;int&quot;),</span></span><br><span class="line"><span class="meta">            @ApiImplicitParam(name = &quot;limit&quot;, value = &quot;页大小,默认为10&quot;, paramType = &quot;query&quot;, dataType = &quot;int&quot;),</span></span><br><span class="line"><span class="meta">            @ApiImplicitParam(name = &quot;type&quot;, value = &quot;foot为足迹,collect为收藏&quot;, paramType = &quot;query&quot;, dataType = &quot;String&quot;)</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;获取收藏产品,或足迹&quot;,notes = &quot;获取收藏产品,或足迹&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ApiResult&lt;List&lt;StoreProductRelationQueryVo&gt;&gt; <span class="title function_">collectUser</span><span class="params">(<span class="meta">@RequestParam(value = &quot;page&quot;,defaultValue = &quot;1&quot;)</span> <span class="type">int</span> page,</span></span><br><span class="line"><span class="params">                                                                    <span class="meta">@RequestParam(value = &quot;limit&quot;,defaultValue = &quot;500&quot;)</span> <span class="type">int</span> limit,</span></span><br><span class="line"><span class="params">                                                                    <span class="meta">@RequestParam(value = &quot;type&quot;)</span> String type)</span>&#123;</span><br><span class="line">        <span class="type">Long</span> <span class="variable">uid</span> <span class="operator">=</span> LocalUser.getUser().getUid();</span><br><span class="line">        List&lt;StoreProductRelationQueryVo&gt; storeProductRelationQueryVos = productRelationService.userCollectProduct(page, limit, uid, type);</span><br><span class="line">        <span class="keyword">return</span> ApiResult.ok(storeProductRelationQueryVos);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>此时我们现有的实体类对象返回的数据，并不能够满足我们的需求，因此需要在<code>vo</code>包下造个<code>StoreProductRelationQueryVo</code>的类，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.eshop.modules.business.vo;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.eshop.serializer.DoubleSerializer;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.annotation.JsonSerialize;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModel;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModelProperty;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ApiModel(value = &quot;StoreProductRelationQueryVo对象&quot;, description = &quot;商品点赞和收藏表查询参数&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StoreProductRelationQueryVo</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;用户ID&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Long uid;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;商品ID&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Long productId;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;类型(收藏(collect）、点赞(like))&quot;)</span></span><br><span class="line"><span class="meta">    private String type;</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">    @ApiModelProperty(value = &quot;某种类型的商品(普通商品、秒杀商品)&quot;)</span></span><br><span class="line"><span class="meta">    private String category;</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">    @ApiModelProperty(value = &quot;添加时间&quot;)</span></span><br><span class="line"><span class="meta">    private Date createTime;</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">    @ApiModelProperty(value = &quot;产品图片&quot;)</span></span><br><span class="line"><span class="meta">    private String image;</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">    @ApiModelProperty(value = &quot;是否显示&quot;)</span></span><br><span class="line"><span class="meta">    private Integer isShow;</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">    @ApiModelProperty(value = &quot;原价&quot;)</span></span><br><span class="line"><span class="meta">    @JsonSerialize(using = DoubleSerializer.class)</span></span><br><span class="line"><span class="meta">    private Double otPrice;</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">    @ApiModelProperty(value = &quot;父ID&quot;)</span></span><br><span class="line"><span class="meta">    private Integer pid;</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">    @ApiModelProperty(value = &quot;产品价格&quot;)</span></span><br><span class="line"><span class="meta">    @JsonSerialize(using = DoubleSerializer.class)</span></span><br><span class="line"><span class="meta">    private Double price;</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">    @ApiModelProperty(value = &quot;产品销量&quot;)</span></span><br><span class="line"><span class="meta">    private Integer sales;</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">    @ApiModelProperty(value = &quot;商品名称&quot;)</span></span><br><span class="line"><span class="meta">    private String storeName;</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">    @ApiModelProperty(value = &quot;是否开启积分兑换&quot;)</span></span><br><span class="line"><span class="meta">    private Integer isIntegral;</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">    @ApiModelProperty(value = &quot;积分&quot;)</span></span><br><span class="line"><span class="meta">    private Integer integral;</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">&#125;</span></span><br></pre></td></tr></table></figure><p>service层：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取用户收藏列表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> page page</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> limit limit</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uid 用户id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> list</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">List&lt;StoreProductRelationQueryVo&gt; <span class="title function_">userCollectProduct</span><span class="params">(<span class="type">int</span> page, <span class="type">int</span> limit, Long uid, String type)</span>;</span><br></pre></td></tr></table></figure><p>实现该业务功能：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取用户收藏列表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> page page</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> limit limit</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uid 用户id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> list</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> List&lt;StoreProductRelationQueryVo&gt; <span class="title function_">userCollectProduct</span><span class="params">(<span class="type">int</span> page, <span class="type">int</span> limit, Long uid, String type)</span> &#123;</span><br><span class="line">    Page&lt;StoreProductRelation&gt; pageModel = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(page, limit);</span><br><span class="line">    List&lt;StoreProductRelationQueryVo&gt; list = productRelationMapper.selectRelationList(pageModel,uid,type);</span><br><span class="line">    <span class="keyword">return</span> list;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为此操作涉及到多表查询，mybatisplus并未给我们提供相关可以调用的接口，因此我们需要自己编写接口，实现我们的需求。代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Select(&quot;select B.id pid,A.type as category,B.store_name as storeName,B.price,B.is_integral as isIntegral,&quot; +</span></span><br><span class="line"><span class="meta">            &quot;B.ot_price as otPrice,B.sales,B.image,B.is_show as isShow,B.integral as integral&quot; +</span></span><br><span class="line"><span class="meta">            &quot; from store_product_relation A left join store_product B &quot; +</span></span><br><span class="line"><span class="meta">            &quot;on A.product_id = B.id where A.type=#&#123;type&#125; and A.uid=#&#123;uid&#125; and A.is_del = 0 and B.is_del = 0 order by A.create_time desc&quot;)</span></span><br><span class="line">    List&lt;StoreProductRelationQueryVo&gt; <span class="title function_">selectRelationList</span><span class="params">(Page page, <span class="meta">@Param(&quot;uid&quot;)</span> Long uid, <span class="meta">@Param(&quot;type&quot;)</span> String type)</span>;</span><br></pre></td></tr></table></figure><p>至此接口编写完毕！！</p><h2 id="程序排错">程序排错</h2>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> eshop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用nvm管理不同版本的node与npm</title>
      <link href="/posts/8da2db9d.html"/>
      <url>/posts/8da2db9d.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>随着大前端的快速发展，node版本更新很快，我们在工作中，可以会有老版本的node的项目需要维护，也可能有新版本的node的项目需要开发，如果我们只有一个node版本的话将会很麻烦，nvm可以解决我们的难点</p><h2 id="教程">教程</h2><p>下载安装nvm之前，我先解释一下前端容易混淆的几个概念</p><ul><li><p>Node.js：基于Chrome V8引擎的JS运行环境（javascript代码运行环境）</p></li><li><p>npm：第三方js插件包管理工具，会随着node一起安装（Node package Manager）</p></li></ul><h3 id="1-下载">1. 下载</h3><p>下载地址：<a href="https://github.com/coreybutler/nvm-windows/releases">nvm github下载地址</a></p><p><img src="https://img.777nx.cn/test/image-20230324162449120.png" alt="image-20230324162449120"></p><h3 id="2-安装">2. 安装</h3><ol><li><p>首先最重要的是：一定要卸载已安装的 NodeJS，否则会发生冲突。</p></li><li><p>安装时，建议选择手动安装版，然后疯狂下一步就行，不要尝试改变安装目录<br>（我因为不想放在C盘，被折磨了好几个小时，老老实实默认下一步，省事）</p></li></ol><h3 id="3-检查安装是否成功">3. 检查安装是否成功</h3><p>在命令行输入 nvm 能出现反应就行OK了</p><p><img src="https://img.777nx.cn/test/image-20230324162653757.png" alt="image-20230324162653757"></p><h3 id="4-使用">4. 使用</h3><table><thead><tr><th style="text-align:center"><strong>命令</strong></th><th style="text-align:center"><strong>作用</strong></th></tr></thead><tbody><tr><td style="text-align:center">nvm ls</td><td style="text-align:center">列出所有已安装的 node 版本</td></tr><tr><td style="text-align:center">nvm ls-remote</td><td style="text-align:center">列出所有远程服务器的版本（官方node version list）</td></tr><tr><td style="text-align:center">nvm list</td><td style="text-align:center">列出所有已安装的 node 版本</td></tr><tr><td style="text-align:center">nvm list available</td><td style="text-align:center">显示所有可下载的版本</td></tr><tr><td style="text-align:center">nvm install stable</td><td style="text-align:center">安装最新版 node</td></tr><tr><td style="text-align:center">nvm install [node版本号]</td><td style="text-align:center">安装指定版本 node</td></tr><tr><td style="text-align:center">nvm uninstall [node版本号]</td><td style="text-align:center">删除已安装的指定版本</td></tr><tr><td style="text-align:center">nvm use [node版本号]</td><td style="text-align:center">切换到指定版本 node</td></tr><tr><td style="text-align:center">nvm current</td><td style="text-align:center">当前 node 版本</td></tr><tr><td style="text-align:center">nvm alias [别名] [node版本号]</td><td style="text-align:center">给不同的版本号添加别名</td></tr><tr><td style="text-align:center">nvm unalias [别名]</td><td style="text-align:center">删除已定义的别名</td></tr><tr><td style="text-align:center">nvm alias default [node版本号]</td><td style="text-align:center">设置默认版本</td></tr></tbody></table><h2 id="参考文档">参考文档</h2><ol><li><p><a href="https://blog.csdn.net/jj2320711457/article/details/117431854">nvm使用教程</a></p></li><li><p><a href="https://blog.csdn.net/v_vszhao/article/details/125329517">nvm常用命令</a></p></li></ol><h2 id="最后">最后</h2><p>如果我一开始就知道这工具，就不用两个版本来回装好几次，各种bug各种不兼容都是泪啊</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
            <tag> node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatisPlus笔记</title>
      <link href="/posts/b5007741.html"/>
      <url>/posts/b5007741.html</url>
      
        <content type="html"><![CDATA[<h2 id="MyBatisPlus">MyBatisPlus</h2><p><strong>今日目标</strong></p><blockquote><p>基于MyBatisPlus完成标准Dao的增删改查功能</p><p>掌握MyBatisPlus中的分页及条件查询构建</p></blockquote><h2 id="1，MyBatisPlus入门案例与简介">1，MyBatisPlus入门案例与简介</h2><p>对于MyBatisPlus的学习，我们将顺序做了调整，主要的原因MyBatisPlus主要是对MyBatis的简化，所有我们先体会下它简化在哪，然后再学习它是什么，以及它帮我们都做哪些事。</p><h3 id="1-1-入门案例">1.1 入门案例</h3><ul><li><p>MybatisPlus(简称MP)是基于MyBatis框架基础上开发的增强型工具，旨在简化开发、提供效率。</p></li><li><p>开发方式</p><ul><li>基于MyBatis使用MyBatisPlus</li><li>基于Spring使用MyBatisPlus</li><li>==基于SpringBoot使用MyBatisPlus==</li></ul></li></ul><p>SpringBoot刚刚我们学习完成，它能快速构建Spring开发环境用以整合其他技术，使用起来是非常简单，对于MP的学习，我们也基于SpringBoot来构建学习。</p><p>学习之前，我们先来回顾下，SpringBoot整合Mybatis的开发过程:</p><ul><li><p>创建SpringBoot工程</p><p><img src="https://img.777nx.cn/test/1630997819698.png" alt="1630997819698"></p></li><li><p>勾选配置使用的技术，能够实现自动添加起步依赖包</p><p><img src="https://img.777nx.cn/test/1630997860020.png" alt="1630997860020"></p></li><li><p>设置dataSource相关属性(JDBC参数)</p><p><img src="https://img.777nx.cn/test/1630997901479.png" alt="1630997901479"></p></li><li><p>定义数据层接口映射配置</p><p><img src="https://img.777nx.cn/test/1630997929891.png" alt="1630997929891"></p></li></ul><p>我们可以参考着上面的这个实现步骤把SpringBoot整合MyBatisPlus来快速实现下，具体的实现步骤为:</p><h4 id="步骤1-创建数据库及表">步骤1:创建数据库及表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database if <span class="keyword">not</span> <span class="keyword">exists</span> mybatisplus_db <span class="type">character</span> <span class="keyword">set</span> utf8;</span><br><span class="line">use mybatisplus_db;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">user</span> (</span><br><span class="line">    id <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    password  <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    age <span class="type">int</span>(<span class="number">3</span>) <span class="keyword">not</span> <span class="keyword">null</span> ,</span><br><span class="line">    tel <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">user</span> <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;Tom&#x27;</span>,<span class="string">&#x27;tom&#x27;</span>,<span class="number">3</span>,<span class="string">&#x27;18866668888&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">user</span> <span class="keyword">values</span>(<span class="number">2</span>,<span class="string">&#x27;Jerry&#x27;</span>,<span class="string">&#x27;jerry&#x27;</span>,<span class="number">4</span>,<span class="string">&#x27;16688886666&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">user</span> <span class="keyword">values</span>(<span class="number">3</span>,<span class="string">&#x27;Jock&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>,<span class="number">41</span>,<span class="string">&#x27;18812345678&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">user</span> <span class="keyword">values</span>(<span class="number">4</span>,<span class="string">&#x27;传智播客&#x27;</span>,<span class="string">&#x27;itcast&#x27;</span>,<span class="number">15</span>,<span class="string">&#x27;4006184000&#x27;</span>);</span><br></pre></td></tr></table></figure><h4 id="步骤2-创建SpringBoot工程">步骤2:创建SpringBoot工程</h4><p><img src="https://img.777nx.cn/test/1630998241426.png" alt="1630998241426"></p><h4 id="步骤3-勾选配置使用技术">步骤3:勾选配置使用技术</h4><p><img src="https://img.777nx.cn/test/1630998321660.png" alt="1630998321660"></p><p><strong>说明:</strong></p><ul><li>由于MP并未被收录到idea的系统内置配置，无法直接选择加入，需要手动在pom.xml中配置添加</li></ul><h4 id="步骤4-pom-xml补全依赖">步骤4:pom.xml补全依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.16<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>说明:</strong></p><ul><li><p>druid数据源可以加也可以不加，SpringBoot有内置的数据源，可以配置成使用Druid数据源</p></li><li><p>从MP的依赖关系可以看出，通过依赖传递已经将MyBatis与MyBatis整合Spring的jar包导入，我们不需要额外在添加MyBatis的相关jar包</p><p><img src="https://img.777nx.cn/test/1631206757758.png" alt="1631206757758"></p></li></ul><h4 id="步骤5-添加MP的相关配置信息">步骤5:添加MP的相关配置信息</h4><p>resources默认生成的是properties配置文件，可以将其替换成yml文件，并在文件中配置数据库连接的相关信息:<code>application.yml</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/mybatisplus_db?serverTimezone=UTC</span> </span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br></pre></td></tr></table></figure><p><strong>说明:</strong>==serverTimezone是用来设置时区，UTC是标准时区，和咱们的时间差8小时，所以可以将其修改为<code>Asia/Shanghai</code>==</p><h4 id="步骤6-根据数据库表创建实体类">步骤6:根据数据库表创建实体类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;   </span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String tel;</span><br><span class="line">    <span class="comment">//setter...getter...toString方法略</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="步骤7-创建Dao接口">步骤7:创建Dao接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserDao</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;User&gt;&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="步骤8-编写引导类">步骤8:编写引导类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="comment">//@MapperScan(&quot;com.itheima.dao&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Mybatisplus01QuickstartApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(Mybatisplus01QuickstartApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>**说明:**Dao接口要想被容器扫描到，有两种解决方案:</p><ul><li>方案一:在Dao接口上添加<code>@Mapper</code>注解，并且确保Dao处在引导类所在包或其子包中<ul><li>该方案的缺点是需要在每一Dao接口中添加注解</li></ul></li><li>方案二:在引导类上添加<code>@MapperScan</code>注解，其属性为所要扫描的Dao所在包<ul><li>该方案的好处是只需要写一次，则指定包下的所有Dao接口都能被扫描到，<code>@Mapper</code>就可以不写。</li></ul></li></ul><h4 id="步骤9-编写测试类">步骤9:编写测试类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MpDemoApplicationTests</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> UserDao userDao;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetAll</span><span class="params">()</span> &#123;</span><br><span class="line">List&lt;User&gt; userList = userDao.selectList(<span class="literal">null</span>);</span><br><span class="line">System.out.println(userList);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>说明:</strong></p><p>userDao注入的时候下面有红线提示的原因是什么?</p><ul><li><p>UserDao是一个接口，不能实例化对象</p></li><li><p>只有在服务器启动IOC容器初始化后，由框架创建DAO接口的代理对象来注入</p></li><li><p>现在服务器并未启动，所以代理对象也未创建，IDEA查找不到对应的对象注入，所以提示报红</p></li><li><p>一旦服务启动，就能注入其代理对象，所以该错误提示不影响正常运行。</p></li></ul><p>查看运行结果:</p><p><img src="https://img.777nx.cn/test/1630999646096.png" alt="1630999646096"></p><p>跟之前整合MyBatis相比，你会发现我们不需要在DAO接口中编写方法和SQL语句了，只需要继承<code>BaseMapper</code>接口即可。整体来说简化很多。</p><h3 id="1-2-MybatisPlus简介">1.2 MybatisPlus简介</h3><p>MyBatisPlus（简称MP）是基于MyBatis框架基础上开发的增强型工具，旨在==简化开发、提高效率==</p><p>通过刚才的案例，相信大家能够体会简化开发和提高效率这两个方面的优点。</p><p>MyBatisPlus的官网为:<code>https://mp.baomidou.com/</code></p><p><strong>说明:</strong></p><p><img src="https://img.777nx.cn/test/1631011942323.png" alt="1631011942323"></p><p>现在的页面中，这一行已经被删除，现在再去访问<code>https://mybatis.plus</code>会发现访问不到，这个就有很多可能性供我们猜想了，所以大家使用baomidou的网址进行访问即可。</p><p>官方文档中有一张很多小伙伴比较熟悉的图片:</p><p><img src="https://img.777nx.cn/test/1631012174092.png" alt="1631012174092"></p><p>从这张图中我们可以看出MP旨在成为MyBatis的最好搭档，而不是替换MyBatis,所以可以理解为MP是MyBatis的一套增强工具，它是在MyBatis的基础上进行开发的，我们虽然使用MP但是底层依然是MyBatis的东西，也就是说我们也可以在MP中写MyBatis的内容。</p><p>对于MP的学习，大家可以参考着官方文档来进行学习，里面都有详细的代码案例。</p><p>MP的特性:</p><ul><li>无侵入：只做增强不做改变，不会对现有工程产生影响</li><li>强大的 CRUD 操作：内置通用 Mapper，少量配置即可实现单表CRUD 操作</li><li>支持 Lambda：编写查询条件无需担心字段写错</li><li>支持主键自动生成</li><li>内置分页插件</li><li>……</li></ul><h2 id="2，标准数据层开发">2，标准数据层开发</h2><p>在这一节中我们重点学习的是数据层标准的CRUD(增删改查)的实现与分页功能。代码比较多，我们一个个来学习。</p><h3 id="2-1-标准CRUD使用">2.1 标准CRUD使用</h3><p>对于标准的CRUD功能都有哪些以及MP都提供了哪些方法可以使用呢?</p><p>我们先来看张图:</p><p><img src="https://img.777nx.cn/test/1631018877517.png" alt="1631018877517"></p><p>对于这张图的方法，我们挨个来演示下:</p><p>首先说下，案例中的环境就是咱们入门案例的内容，第一个先来完成<code>新增</code>功能</p><h3 id="2-2-新增">2.2 新增</h3><p>在进行新增之前，我们可以分析下新增的方法:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">insert</span> <span class="params">(T t)</span></span><br></pre></td></tr></table></figure><ul><li><p>T:泛型，新增用来保存新增数据</p></li><li><p>int:返回值，新增成功后返回1，没有新增成功返回的是0</p></li></ul><p>在测试类中进行新增操作:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Mybatisplus01QuickstartApplicationTests</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">testSave</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        user.setName(<span class="string">&quot;黑马程序员&quot;</span>);</span><br><span class="line">        user.setPassword(<span class="string">&quot;itheima&quot;</span>);</span><br><span class="line">        user.setAge(<span class="number">12</span>);</span><br><span class="line">        user.setTel(<span class="string">&quot;4006184000&quot;</span>);</span><br><span class="line">        userDao.insert(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行测试后，数据库表中就会添加一条数据。</p><p><img src="https://img.777nx.cn/test/1631013124310.png" alt="1631013124310"></p><p>但是数据中的主键ID，有点长，那这个主键ID是如何来的?我们更想要的是主键自增，应该是5才对，这个是我们后面要学习的主键ID生成策略，这块的这个问题，我们暂时先放放。</p><h3 id="2-3-删除">2.3 删除</h3><p>在进行删除之前，我们可以分析下删除的方法:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">deleteById</span> <span class="params">(Serializable id)</span></span><br></pre></td></tr></table></figure><ul><li><p>Serializable：参数类型</p><ul><li><p>思考:参数类型为什么是一个序列化类?</p><p><img src="https://img.777nx.cn/test/1631013655771.png" alt="1631013655771"></p><p>从这张图可以看出，</p><ul><li>String和Number是Serializable的子类，</li><li>Number又是Float,Double,Integer等类的父类，</li><li>能作为主键的数据类型都已经是Serializable的子类，</li><li>MP使用Serializable作为参数类型，就好比我们可以用Object接收任何数据类型一样。</li></ul></li></ul></li><li><p>int:返回值类型，数据删除成功返回1，未删除数据返回0。</p></li></ul><p>在测试类中进行新增操作:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Mybatisplus01QuickstartApplicationTests</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">testDelete</span><span class="params">()</span> &#123;</span><br><span class="line">        userDao.deleteById(<span class="number">1401856123725713409L</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-4-修改">2.4 修改</h3><p>在进行修改之前，我们可以分析下修改的方法:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">updateById</span><span class="params">(T t)</span>;</span><br></pre></td></tr></table></figure><ul><li><p>T:泛型，需要修改的数据内容，注意因为是根据ID进行修改，所以传入的对象中需要有ID属性值</p></li><li><p>int:返回值，修改成功后返回1，未修改数据返回0</p></li></ul><p>在测试类中进行新增操作:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Mybatisplus01QuickstartApplicationTests</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">testUpdate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        user.setId(<span class="number">1L</span>);</span><br><span class="line">        user.setName(<span class="string">&quot;Tom888&quot;</span>);</span><br><span class="line">        user.setPassword(<span class="string">&quot;tom888&quot;</span>);</span><br><span class="line">        userDao.updateById(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>**说明:**修改的时候，只修改实体对象中有值的字段。</p><h3 id="2-5-根据ID查询">2.5 根据ID查询</h3><p>在进行根据ID查询之前，我们可以分析下根据ID查询的方法:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">T <span class="title function_">selectById</span> <span class="params">(Serializable id)</span></span><br></pre></td></tr></table></figure><ul><li>Serializable：参数类型,主键ID的值</li><li>T:根据ID查询只会返回一条数据</li></ul><p>在测试类中进行新增操作:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Mybatisplus01QuickstartApplicationTests</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">testGetById</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userDao.selectById(<span class="number">2L</span>);</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-6-查询所有">2.6 查询所有</h3><p>在进行查询所有之前，我们可以分析下查询所有的方法:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;T&gt; <span class="title function_">selectList</span><span class="params">(Wrapper&lt;T&gt; queryWrapper)</span></span><br></pre></td></tr></table></figure><ul><li>Wrapper：用来构建条件查询的条件，目前我们没有可直接传为Null</li><li>List<T>:因为查询的是所有，所以返回的数据是一个集合</li></ul><p>在测试类中进行新增操作:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Mybatisplus01QuickstartApplicationTests</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">testGetAll</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;User&gt; userList = userDao.selectList(<span class="literal">null</span>);</span><br><span class="line">        System.out.println(userList);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们所调用的方法都是来自于DAO接口继承的BaseMapper类中。里面的方法有很多，我们后面会慢慢去学习里面的内容。</p><h3 id="2-7-Lombok">2.7 Lombok</h3><p>代码写到这，我们会发现DAO接口类的编写现在变成最简单的了，里面什么都不用写。反过来看看模型类的编写都需要哪些内容:</p><ul><li>私有属性</li><li>setter…getter…方法</li><li>toString方法</li><li>构造函数</li></ul><p>虽然这些内容不难，同时也都是通过IDEA工具生成的，但是过程还是必须得走一遍，那么对于模型类的编写有没有什么优化方法?就是我们接下来要学习的Lombok。</p><h4 id="概念">概念</h4><ul><li>Lombok，一个Java类库，提供了一组注解，简化POJO实体类开发。</li></ul><h4 id="使用步骤">使用步骤</h4><h5 id="步骤1-添加lombok依赖">步骤1:添加lombok依赖</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;version&gt;1.18.12&lt;/version&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>**注意：**版本可以不用写，因为SpringBoot中已经管理了lombok的版本。</p><h5 id="步骤2-安装Lombok的插件">步骤2:安装Lombok的插件</h5><p>==新版本IDEA已经内置了该插件，如果删除setter和getter方法程序有报红，则需要安装插件==</p><p><img src="https://img.777nx.cn/test/1631016543648.png" alt="1631016543648"></p><p>如果在IDEA中找不到lombok插件，可以访问如下网站</p><p><code>https://plugins.jetbrains.com/plugin/6317-lombok/versions</code></p><p>根据自己IDEA的版本下载对应的lombok插件，下载成功后，在IDEA中采用离线安装的方式进行安装。</p><p><img src="https://img.777nx.cn/test/1631016876641.png" alt="1631016876641"></p><h5 id="步骤3-模型类上添加注解">步骤3:模型类上添加注解</h5><p>Lombok常见的注解有:</p><ul><li>@Setter:为模型类的属性提供setter方法</li><li>@Getter:为模型类的属性提供getter方法</li><li>@ToString:为模型类的属性提供toString方法</li><li>@EqualsAndHashCode:为模型类的属性提供equals和hashcode方法</li><li>==@Data:是个组合注解，包含上面的注解的功能==</li><li>==@NoArgsConstructor:提供一个无参构造函数==</li><li>==@AllArgsConstructor:提供一个包含所有参数的构造函数==</li></ul><p>Lombok的注解还有很多，上面标红的三个是比较常用的，其他的大家后期用到了，再去补充学习。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String tel;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>说明:</strong></p><p>Lombok只是简化模型类的编写，我们之前的方法也能用，比如有人会问:我如果只想要有name和password的构造函数，该如何编写?</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String tel;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(String name, String password)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这种方式是被允许的。</p><h3 id="2-8-分页功能">2.8 分页功能</h3><p>基础的增删改查就已经学习完了，刚才我们在分析基础开发的时候，有一个分页功能还没有实现，在MP中如何实现分页功能，就是咱们接下来要学习的内容。</p><p>分页查询使用的方法是:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IPage&lt;T&gt; <span class="title function_">selectPage</span><span class="params">(IPage&lt;T&gt; page, Wrapper&lt;T&gt; queryWrapper)</span></span><br></pre></td></tr></table></figure><ul><li>IPage:用来构建分页查询条件</li><li>Wrapper：用来构建条件查询的条件，目前我们没有可直接传为Null</li><li>IPage:返回值，你会发现构建分页条件和方法的返回值都是IPage</li></ul><p>IPage是一个接口，我们需要找到它的实现类来构建它，具体的实现类，可以进入到IPage类中按ctrl+h,会找到其有一个实现类为<code>Page</code>。</p><h4 id="步骤1-调用方法传入参数获取返回值">步骤1:调用方法传入参数获取返回值</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Mybatisplus01QuickstartApplicationTests</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//分页查询</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">testSelectPage</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//1 创建IPage分页对象,设置分页参数,1为当前页码，3为每页显示的记录数</span></span><br><span class="line">        IPage&lt;User&gt; page=<span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(<span class="number">1</span>,<span class="number">3</span>);</span><br><span class="line">        <span class="comment">//2 执行分页查询</span></span><br><span class="line">        userDao.selectPage(page,<span class="literal">null</span>);</span><br><span class="line">        <span class="comment">//3 获取分页结果</span></span><br><span class="line">        System.out.println(<span class="string">&quot;当前页码值：&quot;</span>+page.getCurrent());</span><br><span class="line">        System.out.println(<span class="string">&quot;每页显示数：&quot;</span>+page.getSize());</span><br><span class="line">        System.out.println(<span class="string">&quot;一共多少页：&quot;</span>+page.getPages());</span><br><span class="line">        System.out.println(<span class="string">&quot;一共多少条数据：&quot;</span>+page.getTotal());</span><br><span class="line">        System.out.println(<span class="string">&quot;数据：&quot;</span>+page.getRecords());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="步骤2-设置分页拦截器">步骤2:设置分页拦截器</h4><p>这个拦截器MP已经为我们提供好了，我们只需要将其配置成Spring管理的bean对象即可。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisPlusConfig</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> MybatisPlusInterceptor <span class="title function_">mybatisPlusInterceptor</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//1 创建MybatisPlusInterceptor拦截器对象</span></span><br><span class="line">        MybatisPlusInterceptor mpInterceptor=<span class="keyword">new</span> <span class="title class_">MybatisPlusInterceptor</span>();</span><br><span class="line">        <span class="comment">//2 添加分页拦截器</span></span><br><span class="line">        mpInterceptor.addInnerInterceptor(<span class="keyword">new</span> <span class="title class_">PaginationInnerInterceptor</span>());</span><br><span class="line">        <span class="keyword">return</span> mpInterceptor;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>**说明:**上面的代码记不住咋办呢?</p><p>这些内容在MP的官方文档中有详细的说明，我们可以查看官方文档类配置</p><p><img src="https://img.777nx.cn/test/1631208030131.png" alt="1631208030131"></p><h4 id="步骤3-运行测试程序">步骤3:运行测试程序</h4><p><img src="https://img.777nx.cn/test/1631019660480.png" alt="1631019660480"></p><p>如果想查看MP执行的SQL语句，可以修改application.yml配置文件，</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span> <span class="comment">#打印SQL日志到控制台</span></span><br></pre></td></tr></table></figure><p>打开日志后，就可以在控制台打印出对应的SQL语句，开启日志功能性能就会受到影响，调试完后记得关闭。</p><p><img src="https://img.777nx.cn/test/1631019896688.png" alt="1631019896688"></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MyBatisPlus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql高级</title>
      <link href="/posts/ab2417d4.html"/>
      <url>/posts/ab2417d4.html</url>
      
        <content type="html"><![CDATA[<div class="note success flat"><p>笔记来自于黑马程序员课程</p></div><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.bilibili.com/video/BV1Qf4y1T7Hx/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.bilibili.com/video/BV1Qf4y1T7Hx/.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">黑马程序员JavaWeb基础教程</div>            <div class="tag-link-sitename">Java web从入门到企业实战完整版</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h2 id="mysql高级">mysql高级</h2><p><strong>今日目标</strong></p><blockquote><ul><li><p>掌握约束的使用</p></li><li><p>掌握表关系及建表原则</p></li><li><p>重点掌握多表查询操作</p></li><li><p>掌握事务操作</p></li></ul></blockquote><h2 id="1，约束">1，约束</h2><img src="https://img.777nx.cn/test/image-20210724104749122.png" alt="image-20210724104749122" style="zoom:70%;" /><p>上面表中可以看到表中数据存在一些问题：</p><ul><li><p>id 列一般是用标示数据的唯一性的，而上述表中的id为1的有三条数据，并且 <code>马花疼</code> 没有id进行标示</p></li><li><p><code>柳白</code> 这条数据的age列的数据是3000，而人也不可能活到3000岁</p></li><li><p><code>马运</code>  这条数据的math数学成绩是-5，而数学学得再不好也不可能出现负分</p></li><li><p><code>柳青</code> 这条数据的english列（英文成绩）值为null，而成绩即使没考也得是0分</p></li></ul><p>针对上述数据问题，我们就可以从数据库层面在添加数据的时候进行限制，这个就是约束。</p><h3 id="1-1-概念">1.1  概念</h3><ul><li><p>约束是作用于表中列上的规则，用于限制加入表的数据</p><p>例如：我们可以给id列加约束，让其值不能重复，不能为null值。</p></li><li><p>约束的存在保证了数据库中数据的正确性、有效性和完整性</p><p>添加约束可以在添加数据的时候就限制不正确的数据，年龄是3000，数学成绩是-5分这样无效的数据，继而保障数据的完整性。</p></li></ul><h3 id="1-2-分类">1.2  分类</h3><ul><li><strong>非空约束： 关键字是 NOT NULL</strong></li></ul><p>保证列中所有的数据不能有null值。</p><p>例如：id列在添加 <code>马花疼</code> 这条数据时就不能添加成功。</p><ul><li><p><strong>唯一约束：关键字是  UNIQUE</strong></p><p>保证列中所有数据各不相同。</p><p>例如：id列中三条数据的值都是1，这样的数据在添加时是绝对不允许的。</p></li><li><p><strong>主键约束： 关键字是  PRIMARY KEY</strong></p></li></ul><p>主键是一行数据的唯一标识，要求非空且唯一。一般我们都会给没张表添加一个主键列用来唯一标识数据。</p><p>例如：上图表中id就可以作为主键，来标识每条数据。那么这样就要求数据中id的值不能重复，不能为null值。</p><ul><li><p><strong>检查约束： 关键字是  CHECK</strong></p><p>保证列中的值满足某一条件。</p><p>例如：我们可以给age列添加一个范围，最低年龄可以设置为1，最大年龄就可以设置为300，这样的数据才更合理些。</p><blockquote><p>注意：MySQL不支持检查约束。</p><p>这样是不是就没办法保证年龄在指定的范围内了？从数据库层面不能保证，以后可以在java代码中进行限制，一样也可以实现要求。</p></blockquote></li><li><p><strong>默认约束： 关键字是   DEFAULT</strong></p><p>保存数据时，未指定值则采用默认值。</p><p>例如：我们在给english列添加该约束，指定默认值是0，这样在添加数据时没有指定具体值时就会采用默认给定的0。</p></li><li><p><strong>外键约束： 关键字是  FOREIGN KEY</strong></p><p>外键用来让两个表的数据之间建立链接，保证数据的一致性和完整性。</p><p>外键约束现在可能还不太好理解，后面我们会重点进行讲解。</p></li></ul><h3 id="1-3-非空约束">1.3  非空约束</h3><ul><li><p>概念</p><p>非空约束用于保证列中所有数据不能有NULL值</p></li><li><p>语法</p><ul><li><p>添加约束</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建表时添加非空约束</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名(</span><br><span class="line">   列名 数据类型 <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">   …</span><br><span class="line">); </span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 建完表后添加非空约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 MODIFY 字段名 数据类型 <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br></pre></td></tr></table></figure></li><li><p>删除约束</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 MODIFY 字段名 数据类型;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="1-4-唯一约束">1.4  唯一约束</h3><ul><li><p>概念</p><p>唯一约束用于保证列中所有数据各不相同</p></li><li><p>语法</p><ul><li><p>添加约束</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建表时添加唯一约束</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名(</span><br><span class="line">   列名 数据类型 <span class="keyword">UNIQUE</span> [AUTO_INCREMENT],</span><br><span class="line">   <span class="comment">-- AUTO_INCREMENT: 当不指定值时自动增长</span></span><br><span class="line">   …</span><br><span class="line">); </span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名(</span><br><span class="line">   列名 数据类型,</span><br><span class="line">   …</span><br><span class="line">   [<span class="keyword">CONSTRAINT</span>] [约束名称] <span class="keyword">UNIQUE</span>(列名)</span><br><span class="line">); </span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 建完表后添加唯一约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 MODIFY 字段名 数据类型 <span class="keyword">UNIQUE</span>;</span><br></pre></td></tr></table></figure></li><li><p>删除约束</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">DROP</span> INDEX 字段名;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="1-5-主键约束">1.5  主键约束</h3><ul><li><p>概念</p><p>主键是一行数据的唯一标识，要求非空且唯一</p><p>一张表只能有一个主键</p></li><li><p>语法</p><ul><li><p>添加约束</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建表时添加主键约束</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名(</span><br><span class="line">   列名 数据类型 <span class="keyword">PRIMARY</span> KEY [AUTO_INCREMENT],</span><br><span class="line">   …</span><br><span class="line">); </span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名(</span><br><span class="line">   列名 数据类型,</span><br><span class="line">   [<span class="keyword">CONSTRAINT</span>] [约束名称] <span class="keyword">PRIMARY</span> KEY(列名)</span><br><span class="line">); </span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 建完表后添加主键约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">ADD</span> <span class="keyword">PRIMARY</span> KEY(字段名);</span><br></pre></td></tr></table></figure></li><li><p>删除约束</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">DROP</span> <span class="keyword">PRIMARY</span> KEY;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="1-6-默认约束">1.6  默认约束</h3><ul><li><p>概念</p><p>保存数据时，未指定值则采用默认值</p></li><li><p>语法</p><ul><li><p>添加约束</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建表时添加默认约束</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名(</span><br><span class="line">   列名 数据类型 <span class="keyword">DEFAULT</span> 默认值,</span><br><span class="line">   …</span><br><span class="line">); </span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 建完表后添加默认约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">ALTER</span> 列名 <span class="keyword">SET</span> <span class="keyword">DEFAULT</span> 默认值;</span><br></pre></td></tr></table></figure></li><li><p>删除约束</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">ALTER</span> 列名 <span class="keyword">DROP</span> <span class="keyword">DEFAULT</span>;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="1-7-约束练习">1.7  约束练习</h3><p><strong>根据需求，为表添加合适的约束</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 员工表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> emp (</span><br><span class="line">id <span class="type">INT</span>,  <span class="comment">-- 员工id，主键且自增长</span></span><br><span class="line">    ename <span class="type">VARCHAR</span>(<span class="number">50</span>), <span class="comment">-- 员工姓名，非空且唯一</span></span><br><span class="line">    joindate <span class="type">DATE</span>,  <span class="comment">-- 入职日期，非空</span></span><br><span class="line">    salary <span class="keyword">DOUBLE</span>(<span class="number">7</span>,<span class="number">2</span>),  <span class="comment">-- 工资，非空</span></span><br><span class="line">    bonus <span class="keyword">DOUBLE</span>(<span class="number">7</span>,<span class="number">2</span>)  <span class="comment">-- 奖金，如果没有将近默认为0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>上面一定给出了具体的要求，我们可以根据要求创建这张表，并为每一列添加对应的约束。建表语句如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 员工表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> emp (</span><br><span class="line">  id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY, <span class="comment">-- 员工id，主键且自增长</span></span><br><span class="line">  ename <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">UNIQUE</span>, <span class="comment">-- 员工姓名，非空并且唯一</span></span><br><span class="line">  joindate <span class="type">DATE</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> , <span class="comment">-- 入职日期，非空</span></span><br><span class="line">  salary <span class="keyword">DOUBLE</span>(<span class="number">7</span>,<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> , <span class="comment">-- 工资，非空</span></span><br><span class="line">  bonus <span class="keyword">DOUBLE</span>(<span class="number">7</span>,<span class="number">2</span>) <span class="keyword">DEFAULT</span> <span class="number">0</span> <span class="comment">-- 奖金，如果没有奖金默认为0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>通过上面语句可以创建带有约束的 <code>emp</code> 表，约束能不能发挥作用呢。接下来我们一一进行验证，先添加一条没有问题的数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(id,ename,joindate,salary,bonus) <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;1999-11-11&#x27;</span>,<span class="number">8800</span>,<span class="number">5000</span>);</span><br></pre></td></tr></table></figure><ul><li><strong>验证主键约束，非空且唯一</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(id,ename,joindate,salary,bonus) <span class="keyword">values</span>(<span class="keyword">null</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;1999-11-11&#x27;</span>,<span class="number">8800</span>,<span class="number">5000</span>);</span><br></pre></td></tr></table></figure><p>执行结果如下：</p><img src="https://img.777nx.cn/test/image-20210724114548170.png" alt="image-20210724114548170" style="zoom:80%;" /><p>从上面的结果可以看到，字段 <code>id</code> 不能为null。那我们重新添加一条数据，如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(id,ename,joindate,salary,bonus) <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;1999-11-11&#x27;</span>,<span class="number">8800</span>,<span class="number">5000</span>);</span><br></pre></td></tr></table></figure><p>执行结果如下：</p><img src="https://img.777nx.cn/test/image-20210724114805350.png" alt="image-20210724114805350" style="zoom:80%;" /><p>从上面结果可以看到，1这个值重复了。所以主键约束是用来限制数据非空且唯一的。那我们再添加一条符合要求的数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(id,ename,joindate,salary,bonus) <span class="keyword">values</span>(<span class="number">2</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;1999-11-11&#x27;</span>,<span class="number">8800</span>,<span class="number">5000</span>);</span><br></pre></td></tr></table></figure><p>执行结果如下：</p><img src="https://img.777nx.cn/test/image-20210724115024106.png" alt="image-20210724115024106" style="zoom:80%;" /><ul><li><strong>验证非空约束</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(id,ename,joindate,salary,bonus) <span class="keyword">values</span>(<span class="number">3</span>,<span class="keyword">null</span>,<span class="string">&#x27;1999-11-11&#x27;</span>,<span class="number">8800</span>,<span class="number">5000</span>);</span><br></pre></td></tr></table></figure><p>执行结果如下：</p><img src="https://img.777nx.cn/test/image-20210724115149415.png" alt="image-20210724115149415" style="zoom:80%;" /><p>从上面结果可以看到，<code>ename</code> 字段的非空约束生效了。</p><ul><li><strong>验证唯一约束</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(id,ename,joindate,salary,bonus) <span class="keyword">values</span>(<span class="number">3</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;1999-11-11&#x27;</span>,<span class="number">8800</span>,<span class="number">5000</span>);</span><br></pre></td></tr></table></figure><p>执行结果如下：</p><img src="https://img.777nx.cn/test/image-20210724115336916.png" alt="image-20210724115336916" style="zoom:80%;" /><p>从上面结果可以看到，<code>ename</code> 字段的唯一约束生效了。</p><ul><li><strong>验证默认约束</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(id,ename,joindate,salary) <span class="keyword">values</span>(<span class="number">3</span>,<span class="string">&#x27;王五&#x27;</span>,<span class="string">&#x27;1999-11-11&#x27;</span>,<span class="number">8800</span>);</span><br></pre></td></tr></table></figure><p>执行完上面语句后查询表中数据，如下图可以看到王五这条数据的bonus列就有了默认值0。</p><img src="https://img.777nx.cn/test/image-20210724115547951.png" alt="image-20210724115547951" style="zoom:80%;" /><p>==注意：默认约束只有在不给值时才会采用默认值。如果给了null，那值就是null值。==</p><p>如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(id,ename,joindate,salary,bonus) <span class="keyword">values</span>(<span class="number">4</span>,<span class="string">&#x27;赵六&#x27;</span>,<span class="string">&#x27;1999-11-11&#x27;</span>,<span class="number">8800</span>,<span class="keyword">null</span>);</span><br></pre></td></tr></table></figure><p>执行完上面语句后查询表中数据，如下图可以看到赵六这条数据的bonus列的值是null。</p><img src="https://img.777nx.cn/test/image-20210724115826516.png" alt="image-20210724115826516" style="zoom:80%;" /><ul><li><strong>验证自动增长： auto_increment  当列是数字类型 并且唯一约束</strong></li></ul><p>重新创建 <code>emp</code> 表，并给id列添加自动增长</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 员工表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> emp (</span><br><span class="line">  id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY auto_increment, <span class="comment">-- 员工id，主键且自增长</span></span><br><span class="line">  ename <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">UNIQUE</span>, <span class="comment">-- 员工姓名，非空并且唯一</span></span><br><span class="line">  joindate <span class="type">DATE</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> , <span class="comment">-- 入职日期，非空</span></span><br><span class="line">  salary <span class="keyword">DOUBLE</span>(<span class="number">7</span>,<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> , <span class="comment">-- 工资，非空</span></span><br><span class="line">  bonus <span class="keyword">DOUBLE</span>(<span class="number">7</span>,<span class="number">2</span>) <span class="keyword">DEFAULT</span> <span class="number">0</span> <span class="comment">-- 奖金，如果没有奖金默认为0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>接下来给emp添加数据，分别验证不给id列添加值以及给id列添加null值，id列的值会不会自动增长：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(ename,joindate,salary,bonus) <span class="keyword">values</span>(<span class="string">&#x27;赵六&#x27;</span>,<span class="string">&#x27;1999-11-11&#x27;</span>,<span class="number">8800</span>,<span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(id,ename,joindate,salary,bonus) <span class="keyword">values</span>(<span class="keyword">null</span>,<span class="string">&#x27;赵六2&#x27;</span>,<span class="string">&#x27;1999-11-11&#x27;</span>,<span class="number">8800</span>,<span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(id,ename,joindate,salary,bonus) <span class="keyword">values</span>(<span class="keyword">null</span>,<span class="string">&#x27;赵六3&#x27;</span>,<span class="string">&#x27;1999-11-11&#x27;</span>,<span class="number">8800</span>,<span class="keyword">null</span>);</span><br></pre></td></tr></table></figure><h3 id="1-8-外键约束">1.8  外键约束</h3><h4 id="1-8-1-概述">1.8.1  概述</h4><p>外键用来让两个表的数据之间建立链接，保证数据的一致性和完整性。</p><p>如何理解上面的概念呢？如下图有两张表，员工表和部门表：</p><img src="https://img.777nx.cn/test/image-20210724120904180.png" alt="image-20210724120904180" style="zoom:80%;" /><p>员工表中的dep_id字段是部门表的id字段关联，也就是说1号学生张三属于1号部门研发部的员工。现在我要删除1号部门，就会出现错误的数据（员工表中属于1号部门的数据）。而我们上面说的两张表的关系只是我们认为它们有关系，此时需要通过外键让这两张表产生数据库层面的关系，这样你要删除部门表中的1号部门的数据将无法删除。</p><h4 id="1-8-2-语法">1.8.2  语法</h4><ul><li>添加外键约束</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建表时添加外键约束</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名(</span><br><span class="line">   列名 数据类型,</span><br><span class="line">   …</span><br><span class="line">   [<span class="keyword">CONSTRAINT</span>] [外键名称] <span class="keyword">FOREIGN</span> KEY(外键列名) <span class="keyword">REFERENCES</span> 主表(主表列名) </span><br><span class="line">); </span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 建完表后添加外键约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> 外键名称 <span class="keyword">FOREIGN</span> KEY (外键字段名称) <span class="keyword">REFERENCES</span> 主表名称(主表列名称);</span><br></pre></td></tr></table></figure><ul><li>删除外键约束</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">DROP</span> <span class="keyword">FOREIGN</span> KEY 外键名称;</span><br></pre></td></tr></table></figure><h4 id="1-8-3-练习">1.8.3  练习</h4><p>根据上述语法创建员工表和部门表，并添加上外键约束：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除表</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> emp;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> dept;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 部门表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> dept(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">dep_name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">addr <span class="type">varchar</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 员工表 </span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> emp(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">age <span class="type">int</span>,</span><br><span class="line">dep_id <span class="type">int</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加外键 dep_id,关联 dept 表的id主键</span></span><br><span class="line"><span class="keyword">CONSTRAINT</span> fk_emp_dept <span class="keyword">FOREIGN</span> KEY(dep_id) <span class="keyword">REFERENCES</span> dept(id)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>添加数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 添加 2 个部门</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> dept(dep_name,addr) <span class="keyword">values</span></span><br><span class="line">(<span class="string">&#x27;研发部&#x27;</span>,<span class="string">&#x27;广州&#x27;</span>),(<span class="string">&#x27;销售部&#x27;</span>, <span class="string">&#x27;深圳&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加员工,dep_id 表示员工所在的部门</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp (NAME, age, dep_id) <span class="keyword">VALUES</span> </span><br><span class="line">(<span class="string">&#x27;张三&#x27;</span>, <span class="number">20</span>, <span class="number">1</span>),</span><br><span class="line">(<span class="string">&#x27;李四&#x27;</span>, <span class="number">20</span>, <span class="number">1</span>),</span><br><span class="line">(<span class="string">&#x27;王五&#x27;</span>, <span class="number">20</span>, <span class="number">1</span>),</span><br><span class="line">(<span class="string">&#x27;赵六&#x27;</span>, <span class="number">20</span>, <span class="number">2</span>),</span><br><span class="line">(<span class="string">&#x27;孙七&#x27;</span>, <span class="number">22</span>, <span class="number">2</span>),</span><br><span class="line">(<span class="string">&#x27;周八&#x27;</span>, <span class="number">18</span>, <span class="number">2</span>);</span><br></pre></td></tr></table></figure><p>此时删除 <code>研发部</code> 这条数据，会发现无法删除。</p><p>删除外键</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">drop</span> <span class="keyword">FOREIGN</span> key fk_emp_dept;</span><br></pre></td></tr></table></figure><p>重新添加外键</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">add</span> <span class="keyword">CONSTRAINT</span> fk_emp_dept <span class="keyword">FOREIGN</span> key(dep_id) <span class="keyword">REFERENCES</span> dept(id);</span><br></pre></td></tr></table></figure><h2 id="2，数据库设计">2，数据库设计</h2><h3 id="2-1-数据库设计简介">2.1  数据库设计简介</h3><ul><li><p>软件的研发步骤</p><img src="https://img.777nx.cn/test/image-20210724130925801.png" alt="image-20210724130925801" style="zoom:80%;" /></li><li><p>数据库设计概念</p><ul><li>数据库设计就是根据业务系统的具体需求，结合我们所选用的DBMS，为这个业务系统构造出最优的数据存储模型。</li><li>建立数据库中的==表结构==以及==表与表之间的关联关系==的过程。</li><li>有哪些表？表里有哪些字段？表和表之间有什么关系？</li></ul></li><li><p>数据库设计的步骤</p><ul><li><p>需求分析（数据是什么? 数据具有哪些属性? 数据与属性的特点是什么）</p></li><li><p>逻辑分析（通过ER图对数据库进行逻辑建模，不需要考虑我们所选用的数据库管理系统）</p><p>如下图就是ER(Entity/Relation)图：</p><img src="https://img.777nx.cn/test/image-20210724131210759.png" alt="image-20210724131210759" style="zoom:80%;" /></li><li><p>物理设计（根据数据库自身的特点把逻辑设计转换为物理设计）</p></li><li><p>维护设计（1.对新的需求进行建表；2.表优化）</p></li></ul></li><li><p>表关系</p><ul><li><p>一对一</p><ul><li>如：用户 和 用户详情</li><li>一对一关系多用于表拆分，将一个实体中经常使用的字段放一张表，不经常使用的字段放另一张表，用于提升查询性能</li></ul><img src="https://img.777nx.cn/test/image-20210724133015129.png" alt="image-20210724133015129" style="zoom:80%;" /><p>上图左边是用户的详细信息，而我们真正在展示用户信息时最长用的则是上图右边红框所示，所以我们会将详细信息查分成两周那个表。</p></li><li><p>一对多</p><ul><li><p>如：部门 和 员工</p></li><li><p>一个部门对应多个员工，一个员工对应一个部门。如下图：</p><img src="https://img.777nx.cn/test/image-20210724133443094.png" alt="image-20210724133443094" style="zoom:90%;" /></li></ul></li><li><p>多对多</p><ul><li><p>如：商品 和 订单</p></li><li><p>一个商品对应多个订单，一个订单包含多个商品。如下图：</p><img src="https://img.777nx.cn/test/image-20210724133704682.png" alt="image-20210724133704682" style="zoom:80%;" /></li></ul></li></ul></li></ul><h3 id="2-2-表关系-一对多">2.2  表关系(一对多)</h3><ul><li><p>一对多</p><ul><li>如：部门 和 员工</li><li>一个部门对应多个员工，一个员工对应一个部门。</li></ul></li><li><p>实现方式</p><p>==在多的一方建立外键，指向一的一方的主键==</p></li><li><p>案例</p><p>我们还是以 <code>员工表</code> 和 <code>部门表</code> 举例:</p><img src="https://img.777nx.cn/test/image-20210724134145803.png" alt="image-20210724134145803" style="zoom:70%;" /><p>经过分析发现，员工表属于多的一方，而部门表属于一的一方，此时我们会在员工表中添加一列（dep_id），指向于部门表的主键（id）：</p><img src="https://img.777nx.cn/test/image-20210724134318685.png" alt="image-20210724134318685" style="zoom:70%;" /><p>建表语句如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除表</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> tb_emp;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> tb_dept;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 部门表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tb_dept(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">dep_name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">addr <span class="type">varchar</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 员工表 </span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tb_emp(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">age <span class="type">int</span>,</span><br><span class="line">dep_id <span class="type">int</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加外键 dep_id,关联 dept 表的id主键</span></span><br><span class="line"><span class="keyword">CONSTRAINT</span> fk_emp_dept <span class="keyword">FOREIGN</span> KEY(dep_id) <span class="keyword">REFERENCES</span> tb_dept(id)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>查看表结构模型图：</p><img src="https://img.777nx.cn/test/image-20210724140456921.png" alt="image-20210724140456921" style="zoom:80%;" /></li></ul><h3 id="2-3-表关系-多对多">2.3  表关系(多对多)</h3><ul><li><p>多对多</p><ul><li>如：商品 和 订单</li><li>一个商品对应多个订单，一个订单包含多个商品</li></ul></li><li><p>实现方式</p><p>==建立第三张中间表，中间表至少包含两个外键，分别关联两方主键==</p></li><li><p>案例</p><p>我们以 <code>订单表</code> 和 <code>商品表</code> 举例：</p><img src="https://img.777nx.cn/test/image-20210724134735939.png" alt="image-20210724134735939" style="zoom:70%;" /><p>经过分析发现，订单表和商品表都属于多的一方，此时需要创建一个中间表，在中间表中添加订单表的外键和商品表的外键指向两张表的主键：</p><img src="https://img.777nx.cn/test/image-20210724135054834.png" alt="image-20210724135054834" style="zoom:70%;" /><p>建表语句如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除表</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> tb_order_goods;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> tb_order;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> tb_goods;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 订单表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tb_order(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">payment <span class="keyword">double</span>(<span class="number">10</span>,<span class="number">2</span>),</span><br><span class="line">payment_type TINYINT,</span><br><span class="line">status TINYINT</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 商品表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tb_goods(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">title <span class="type">varchar</span>(<span class="number">100</span>),</span><br><span class="line">price <span class="keyword">double</span>(<span class="number">10</span>,<span class="number">2</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 订单商品中间表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tb_order_goods(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">order_id <span class="type">int</span>,</span><br><span class="line">goods_id <span class="type">int</span>,</span><br><span class="line">count <span class="type">int</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 建完表后，添加外键</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tb_order_goods <span class="keyword">add</span> <span class="keyword">CONSTRAINT</span> fk_order_id <span class="keyword">FOREIGN</span> key(order_id) <span class="keyword">REFERENCES</span> tb_order(id);</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tb_order_goods <span class="keyword">add</span> <span class="keyword">CONSTRAINT</span> fk_goods_id <span class="keyword">FOREIGN</span> key(goods_id) <span class="keyword">REFERENCES</span> tb_goods(id);</span><br></pre></td></tr></table></figure><p>查看表结构模型图：</p><img src="https://img.777nx.cn/test/image-20210724140307910.png" alt="image-20210724140307910" style="zoom:80%;" /></li></ul><h3 id="2-4-表关系-一对一">2.4  表关系(一对一)</h3><ul><li><p>一对一</p><ul><li>如：用户 和 用户详情</li><li>一对一关系多用于表拆分，将一个实体中经常使用的字段放一张表，不经常使用的字段放另一张表，用于提升查询性能</li></ul></li><li><p>实现方式</p><p>==在任意一方加入外键，关联另一方主键，并且设置外键为唯一(UNIQUE)==</p></li><li><p>案例</p><p>我们以 <code>用户表</code> 举例：</p><img src="https://img.777nx.cn/test/image-20210724135346913.png" alt="image-20210724135346913" style="zoom:70%;" /><p>而在真正使用过程中发现 id、photo、nickname、age、gender 字段比较常用，此时就可以将这张表查分成两张表。</p></li></ul><p>​<img src="https://img.777nx.cn/test/image-20210724135649341.png" alt="image-20210724135649341" style="zoom:70%;" /></p><p>​</p><p>​建表语句如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tb_user_desc (</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">city <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">edu <span class="type">varchar</span>(<span class="number">10</span>),</span><br><span class="line">income <span class="type">int</span>,</span><br><span class="line">status <span class="type">char</span>(<span class="number">2</span>),</span><br><span class="line">des <span class="type">varchar</span>(<span class="number">100</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tb_user (</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">photo <span class="type">varchar</span>(<span class="number">100</span>),</span><br><span class="line">nickname <span class="type">varchar</span>(<span class="number">50</span>),</span><br><span class="line">age <span class="type">int</span>,</span><br><span class="line">gender <span class="type">char</span>(<span class="number">1</span>),</span><br><span class="line">desc_id <span class="type">int</span> <span class="keyword">unique</span>,</span><br><span class="line"><span class="comment">-- 添加外键</span></span><br><span class="line"><span class="keyword">CONSTRAINT</span> fk_user_desc <span class="keyword">FOREIGN</span> KEY(desc_id) <span class="keyword">REFERENCES</span> tb_user_desc(id)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>​查看表结构模型图：</p><img src="https://img.777nx.cn/test/image-20210724141445785.png" alt="image-20210724141445785" style="zoom:80%;" /><h3 id="2-5-数据库设计案例">2.5  数据库设计案例</h3><p>根据下图设计表及表和表之间的关系：</p><img src="https://img.777nx.cn/test/image-20210724141822204.png" alt="image-20210724141822204" style="zoom:80%;" /><p>经过分析，我们分为 <code>专辑表</code>  <code>曲目表</code>  <code>短评表</code>  <code>用户表</code>   4张表。</p><img src="https://img.777nx.cn/test/image-20210724141550446.png" alt="image-20210724141550446" style="zoom:80%;" /><p>一个专辑可以有多个曲目，一个曲目只能属于某一张专辑，所以专辑表和曲目表的关系是==一对多==。</p><p>一个专辑可以被多个用户进行评论，一个用户可以对多个专辑进行评论，所以专辑表和用户表的关系是 ==多对多==。</p><p>一个用户可以发多个短评，一个短评只能是某一个人发的，所以用户表和短评表的关系是 ==一对多==。</p><img src="https://img.777nx.cn/test/image-20210724142550839.png" alt="image-20210724142550839" style="zoom:80%;" /><h2 id="3，多表查询">3，多表查询</h2><p>多表查询顾名思义就是从多张表中一次性的查询出我们想要的数据。我们通过具体的sql给他们演示，先准备环境</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> emp;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> dept;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 创建部门表</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> dept(</span><br><span class="line">        did <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line">        dname <span class="type">VARCHAR</span>(<span class="number">20</span>)</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line"># 创建员工表</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> emp (</span><br><span class="line">        id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line">        NAME <span class="type">VARCHAR</span>(<span class="number">10</span>),</span><br><span class="line">        gender <span class="type">CHAR</span>(<span class="number">1</span>), <span class="comment">-- 性别</span></span><br><span class="line">        salary <span class="keyword">DOUBLE</span>, <span class="comment">-- 工资</span></span><br><span class="line">        join_date <span class="type">DATE</span>, <span class="comment">-- 入职日期</span></span><br><span class="line">        dep_id <span class="type">INT</span>,</span><br><span class="line">        <span class="keyword">FOREIGN</span> KEY (dep_id) <span class="keyword">REFERENCES</span> dept(did) <span class="comment">-- 外键，关联部门表(部门表的主键)</span></span><br><span class="line">    );</span><br><span class="line"><span class="comment">-- 添加部门数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept (dNAME) <span class="keyword">VALUES</span> (<span class="string">&#x27;研发部&#x27;</span>),(<span class="string">&#x27;市场部&#x27;</span>),(<span class="string">&#x27;财务部&#x27;</span>),(<span class="string">&#x27;销售部&#x27;</span>);</span><br><span class="line"><span class="comment">-- 添加员工数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(NAME,gender,salary,join_date,dep_id) <span class="keyword">VALUES</span></span><br><span class="line">(<span class="string">&#x27;孙悟空&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">7200</span>,<span class="string">&#x27;2013-02-24&#x27;</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="string">&#x27;猪八戒&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">3600</span>,<span class="string">&#x27;2010-12-02&#x27;</span>,<span class="number">2</span>),</span><br><span class="line">(<span class="string">&#x27;唐僧&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">9000</span>,<span class="string">&#x27;2008-08-08&#x27;</span>,<span class="number">2</span>),</span><br><span class="line">(<span class="string">&#x27;白骨精&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="number">5000</span>,<span class="string">&#x27;2015-10-07&#x27;</span>,<span class="number">3</span>),</span><br><span class="line">(<span class="string">&#x27;蜘蛛精&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="number">4500</span>,<span class="string">&#x27;2011-03-14&#x27;</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="string">&#x27;小白龙&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">2500</span>,<span class="string">&#x27;2011-02-14&#x27;</span>,<span class="keyword">null</span>);</span><br></pre></td></tr></table></figure><p>执行下面的多表查询语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp , dept;  <span class="comment">-- 从emp和dept表中查询所有的字段数据</span></span><br></pre></td></tr></table></figure><p>结果如下：</p><img src="https://img.777nx.cn/test/image-20210724173630506.png" alt="image-20210724173630506" style="zoom:90%;" /><p>从上面的结果我们看到有一些无效的数据，如 <code>孙悟空</code> 这个员工属于1号部门，但也同时关联的2、3、4号部门。所以我们要通过限制员工表中的 <code>dep_id</code> 字段的值和部门表 <code>did</code> 字段的值相等来消除这些无效的数据，</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp , dept <span class="keyword">where</span> emp.dep_id <span class="operator">=</span> dept.did;</span><br></pre></td></tr></table></figure><p>执行后结果如下：</p><img src="https://img.777nx.cn/test/image-20210724174212443.png" alt="image-20210724174212443" style="zoom:90%;" /><p>上面语句就是连接查询，那么多表查询都有哪些呢？</p><ul><li><p>连接查询</p><img src="https://img.777nx.cn/test/image-20210724174717647.png" alt="image-20210724174717647" style="zoom:80%;" /> <ul><li>内连接查询 ：相当于查询AB交集数据</li><li>外连接查询<ul><li>左外连接查询 ：相当于查询A表所有数据和交集部门数据</li><li>右外连接查询 ： 相当于查询B表所有数据和交集部分数据</li></ul></li></ul></li><li><p>子查询</p></li></ul><h3 id="3-1-内连接查询">3.1  内连接查询</h3><ul><li>语法</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 隐式内连接</span></span><br><span class="line"><span class="keyword">SELECT</span> 字段列表 <span class="keyword">FROM</span> 表<span class="number">1</span>,表<span class="number">2</span>… <span class="keyword">WHERE</span> 条件;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 显示内连接</span></span><br><span class="line"><span class="keyword">SELECT</span> 字段列表 <span class="keyword">FROM</span> 表<span class="number">1</span> [<span class="keyword">INNER</span>] <span class="keyword">JOIN</span> 表<span class="number">2</span> <span class="keyword">ON</span> 条件;</span><br></pre></td></tr></table></figure><blockquote><p>内连接相当于查询 A B 交集数据</p></blockquote><img src="https://img.777nx.cn/test/image-20210724174717647.png" alt="image-20210724174717647" style="zoom:80%;" /><ul><li><p>案例</p><ul><li><p>隐式内连接</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">emp,</span><br><span class="line">dept</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">emp.dep_id <span class="operator">=</span> dept.did;</span><br></pre></td></tr></table></figure><p>执行上述语句结果如下：</p><img src="https://img.777nx.cn/test/image-20210724175344508.png" alt="image-20210724175344508" style="zoom:80%;" /></li><li><p>查询 emp的 name， gender，dept表的dname</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">emp. NAME,</span><br><span class="line">emp.gender,</span><br><span class="line">dept.dname</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">emp,</span><br><span class="line">dept</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">emp.dep_id <span class="operator">=</span> dept.did;</span><br></pre></td></tr></table></figure><p>执行语句结果如下：</p><img src="https://img.777nx.cn/test/image-20210724175518159.png" alt="image-20210724175518159" style="zoom:80%;" /><p>上面语句中使用表名指定字段所属有点麻烦，sql也支持给表指别名，上述语句可以改进为</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">t1. NAME,</span><br><span class="line">t1.gender,</span><br><span class="line">t2.dname</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">emp t1,</span><br><span class="line">dept t2</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">t1.dep_id <span class="operator">=</span> t2.did;</span><br></pre></td></tr></table></figure></li><li><p>显式内连接</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">inner</span> <span class="keyword">join</span> dept <span class="keyword">on</span> emp.dep_id <span class="operator">=</span> dept.did;</span><br><span class="line"><span class="comment">-- 上面语句中的inner可以省略，可以书写为如下语句</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp  <span class="keyword">join</span> dept <span class="keyword">on</span> emp.dep_id <span class="operator">=</span> dept.did;</span><br></pre></td></tr></table></figure><p>执行结果如下：</p><img src="https://img.777nx.cn/test/image-20210724180103531.png" alt="image-20210724180103531" style="zoom:80%;" /></li></ul></li></ul><h3 id="3-2-外连接查询">3.2  外连接查询</h3><ul><li><p>语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 左外连接</span></span><br><span class="line"><span class="keyword">SELECT</span> 字段列表 <span class="keyword">FROM</span> 表<span class="number">1</span> <span class="keyword">LEFT</span> [<span class="keyword">OUTER</span>] <span class="keyword">JOIN</span> 表<span class="number">2</span> <span class="keyword">ON</span> 条件;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 右外连接</span></span><br><span class="line"><span class="keyword">SELECT</span> 字段列表 <span class="keyword">FROM</span> 表<span class="number">1</span> <span class="keyword">RIGHT</span> [<span class="keyword">OUTER</span>] <span class="keyword">JOIN</span> 表<span class="number">2</span> <span class="keyword">ON</span> 条件;</span><br></pre></td></tr></table></figure><blockquote><p>左外连接：相当于查询A表所有数据和交集部分数据</p><p>右外连接：相当于查询B表所有数据和交集部分数据</p></blockquote><img src="https://img.777nx.cn/test/image-20210724174717647.png" alt="image-20210724174717647" style="zoom:80%;" /></li><li><p>案例</p><ul><li><p>查询emp表所有数据和对应的部门信息（左外连接）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">left</span> <span class="keyword">join</span> dept <span class="keyword">on</span> emp.dep_id <span class="operator">=</span> dept.did;</span><br></pre></td></tr></table></figure><p>执行语句结果如下：</p><img src="https://img.777nx.cn/test/image-20210724180542757.png" alt="image-20210724180542757" style="zoom:80%;" /><p>结果显示查询到了左表（emp）中所有的数据及两张表能关联的数据。</p></li><li><p>查询dept表所有数据和对应的员工信息（右外连接）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">right</span> <span class="keyword">join</span> dept <span class="keyword">on</span> emp.dep_id <span class="operator">=</span> dept.did;</span><br></pre></td></tr></table></figure><p>执行语句结果如下：</p><img src="https://img.777nx.cn/test/image-20210724180613494.png" alt="image-20210724180613494" style="zoom:80%;" /><p>结果显示查询到了右表（dept）中所有的数据及两张表能关联的数据。</p><p>要查询出部门表中所有的数据，也可以通过左外连接实现，只需要将两个表的位置进行互换：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept <span class="keyword">left</span> <span class="keyword">join</span> emp <span class="keyword">on</span> emp.dep_id <span class="operator">=</span> dept.did;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="3-3-子查询">3.3  子查询</h3><ul><li><p>概念</p><p>==查询中嵌套查询，称嵌套查询为子查询。==</p><p>什么是查询中嵌套查询呢？我们通过一个例子来看：</p><p><strong>需求：查询工资高于猪八戒的员工信息。</strong></p><p>来实现这个需求，我们就可以通过二步实现，第一步：先查询出来 猪八戒的工资</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> salary <span class="keyword">from</span> emp <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;猪八戒&#x27;</span></span><br></pre></td></tr></table></figure><p>第二步：查询工资高于猪八戒的员工信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> salary <span class="operator">&gt;</span> <span class="number">3600</span>;</span><br></pre></td></tr></table></figure><p>第二步中的3600可以通过第一步的sql查询出来，所以将3600用第一步的sql语句进行替换</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> salary <span class="operator">&gt;</span> (<span class="keyword">select</span> salary <span class="keyword">from</span> emp <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;猪八戒&#x27;</span>);</span><br></pre></td></tr></table></figure><p>这就是查询语句中嵌套查询语句。</p></li><li><p>子查询根据查询结果不同，作用不同</p><ul><li>子查询语句结果是单行单列，子查询语句作为条件值，使用 =  !=  &gt;  &lt;  等进行条件判断</li><li>子查询语句结果是多行单列，子查询语句作为条件值，使用 in 等关键字进行条件判断</li><li>子查询语句结果是多行多列，子查询语句作为虚拟表</li></ul></li><li><p>案例</p><ul><li><p>查询 ‘财务部’ 和 ‘市场部’ 所有的员工信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询 &#x27;财务部&#x27; 或者 &#x27;市场部&#x27; 所有的员工的部门did</span></span><br><span class="line"><span class="keyword">select</span> did <span class="keyword">from</span> dept <span class="keyword">where</span> dname <span class="operator">=</span> <span class="string">&#x27;财务部&#x27;</span> <span class="keyword">or</span> dname <span class="operator">=</span> <span class="string">&#x27;市场部&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> dep_id <span class="keyword">in</span> (<span class="keyword">select</span> did <span class="keyword">from</span> dept <span class="keyword">where</span> dname <span class="operator">=</span> <span class="string">&#x27;财务部&#x27;</span> <span class="keyword">or</span> dname <span class="operator">=</span> <span class="string">&#x27;市场部&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p>查询入职日期是 ‘2011-11-11’ 之后的员工信息和部门信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询入职日期是 &#x27;2011-11-11&#x27; 之后的员工信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> join_date <span class="operator">&gt;</span> <span class="string">&#x27;2011-11-11&#x27;</span> ;</span><br><span class="line"><span class="comment">-- 将上面语句的结果作为虚拟表和dept表进行内连接查询</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> join_date <span class="operator">&gt;</span> <span class="string">&#x27;2011-11-11&#x27;</span> ) t1, dept <span class="keyword">where</span> t1.dep_id <span class="operator">=</span> dept.did;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="3-4-案例">3.4  案例</h3><ul><li>环境准备：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> emp;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> dept;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> job;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> salarygrade;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 部门表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> dept (</span><br><span class="line">  did <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY <span class="keyword">PRIMARY</span> KEY, <span class="comment">-- 部门id</span></span><br><span class="line">  dname <span class="type">VARCHAR</span>(<span class="number">50</span>), <span class="comment">-- 部门名称</span></span><br><span class="line">  loc <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="comment">-- 部门所在地</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 职务表，职务名称，职务描述</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> job (</span><br><span class="line">  id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">  jname <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">  description <span class="type">VARCHAR</span>(<span class="number">50</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 员工表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> emp (</span><br><span class="line">  id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY, <span class="comment">-- 员工id</span></span><br><span class="line">  ename <span class="type">VARCHAR</span>(<span class="number">50</span>), <span class="comment">-- 员工姓名</span></span><br><span class="line">  job_id <span class="type">INT</span>, <span class="comment">-- 职务id</span></span><br><span class="line">  mgr <span class="type">INT</span> , <span class="comment">-- 上级领导</span></span><br><span class="line">  joindate <span class="type">DATE</span>, <span class="comment">-- 入职日期</span></span><br><span class="line">  salary <span class="type">DECIMAL</span>(<span class="number">7</span>,<span class="number">2</span>), <span class="comment">-- 工资</span></span><br><span class="line">  bonus <span class="type">DECIMAL</span>(<span class="number">7</span>,<span class="number">2</span>), <span class="comment">-- 奖金</span></span><br><span class="line">  dept_id <span class="type">INT</span>, <span class="comment">-- 所在部门编号</span></span><br><span class="line">  <span class="keyword">CONSTRAINT</span> emp_jobid_ref_job_id_fk <span class="keyword">FOREIGN</span> KEY (job_id) <span class="keyword">REFERENCES</span> job (id),</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> emp_deptid_ref_dept_id_fk <span class="keyword">FOREIGN</span> KEY (dept_id) <span class="keyword">REFERENCES</span> dept (id)</span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 工资等级表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> salarygrade (</span><br><span class="line">  grade <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,   <span class="comment">-- 级别</span></span><br><span class="line">  losalary <span class="type">INT</span>,  <span class="comment">-- 最低工资</span></span><br><span class="line">  hisalary <span class="type">INT</span> <span class="comment">-- 最高工资</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加4个部门</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept(did,dname,loc) <span class="keyword">VALUES</span> </span><br><span class="line">(<span class="number">10</span>,<span class="string">&#x27;教研部&#x27;</span>,<span class="string">&#x27;北京&#x27;</span>),</span><br><span class="line">(<span class="number">20</span>,<span class="string">&#x27;学工部&#x27;</span>,<span class="string">&#x27;上海&#x27;</span>),</span><br><span class="line">(<span class="number">30</span>,<span class="string">&#x27;销售部&#x27;</span>,<span class="string">&#x27;广州&#x27;</span>),</span><br><span class="line">(<span class="number">40</span>,<span class="string">&#x27;财务部&#x27;</span>,<span class="string">&#x27;深圳&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加4个职务</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> job (id, jname, description) <span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>, <span class="string">&#x27;董事长&#x27;</span>, <span class="string">&#x27;管理整个公司，接单&#x27;</span>),</span><br><span class="line">(<span class="number">2</span>, <span class="string">&#x27;经理&#x27;</span>, <span class="string">&#x27;管理部门员工&#x27;</span>),</span><br><span class="line">(<span class="number">3</span>, <span class="string">&#x27;销售员&#x27;</span>, <span class="string">&#x27;向客人推销产品&#x27;</span>),</span><br><span class="line">(<span class="number">4</span>, <span class="string">&#x27;文员&#x27;</span>, <span class="string">&#x27;使用办公软件&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加员工</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(id,ename,job_id,mgr,joindate,salary,bonus,dept_id) <span class="keyword">VALUES</span> </span><br><span class="line">(<span class="number">1001</span>,<span class="string">&#x27;孙悟空&#x27;</span>,<span class="number">4</span>,<span class="number">1004</span>,<span class="string">&#x27;2000-12-17&#x27;</span>,<span class="string">&#x27;8000.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">20</span>),</span><br><span class="line">(<span class="number">1002</span>,<span class="string">&#x27;卢俊义&#x27;</span>,<span class="number">3</span>,<span class="number">1006</span>,<span class="string">&#x27;2001-02-20&#x27;</span>,<span class="string">&#x27;16000.00&#x27;</span>,<span class="string">&#x27;3000.00&#x27;</span>,<span class="number">30</span>),</span><br><span class="line">(<span class="number">1003</span>,<span class="string">&#x27;林冲&#x27;</span>,<span class="number">3</span>,<span class="number">1006</span>,<span class="string">&#x27;2001-02-22&#x27;</span>,<span class="string">&#x27;12500.00&#x27;</span>,<span class="string">&#x27;5000.00&#x27;</span>,<span class="number">30</span>),</span><br><span class="line">(<span class="number">1004</span>,<span class="string">&#x27;唐僧&#x27;</span>,<span class="number">2</span>,<span class="number">1009</span>,<span class="string">&#x27;2001-04-02&#x27;</span>,<span class="string">&#x27;29750.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">20</span>),</span><br><span class="line">(<span class="number">1005</span>,<span class="string">&#x27;李逵&#x27;</span>,<span class="number">4</span>,<span class="number">1006</span>,<span class="string">&#x27;2001-09-28&#x27;</span>,<span class="string">&#x27;12500.00&#x27;</span>,<span class="string">&#x27;14000.00&#x27;</span>,<span class="number">30</span>),</span><br><span class="line">(<span class="number">1006</span>,<span class="string">&#x27;宋江&#x27;</span>,<span class="number">2</span>,<span class="number">1009</span>,<span class="string">&#x27;2001-05-01&#x27;</span>,<span class="string">&#x27;28500.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">30</span>),</span><br><span class="line">(<span class="number">1007</span>,<span class="string">&#x27;刘备&#x27;</span>,<span class="number">2</span>,<span class="number">1009</span>,<span class="string">&#x27;2001-09-01&#x27;</span>,<span class="string">&#x27;24500.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">10</span>),</span><br><span class="line">(<span class="number">1008</span>,<span class="string">&#x27;猪八戒&#x27;</span>,<span class="number">4</span>,<span class="number">1004</span>,<span class="string">&#x27;2007-04-19&#x27;</span>,<span class="string">&#x27;30000.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">20</span>),</span><br><span class="line">(<span class="number">1009</span>,<span class="string">&#x27;罗贯中&#x27;</span>,<span class="number">1</span>,<span class="keyword">NULL</span>,<span class="string">&#x27;2001-11-17&#x27;</span>,<span class="string">&#x27;50000.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">10</span>),</span><br><span class="line">(<span class="number">1010</span>,<span class="string">&#x27;吴用&#x27;</span>,<span class="number">3</span>,<span class="number">1006</span>,<span class="string">&#x27;2001-09-08&#x27;</span>,<span class="string">&#x27;15000.00&#x27;</span>,<span class="string">&#x27;0.00&#x27;</span>,<span class="number">30</span>),</span><br><span class="line">(<span class="number">1011</span>,<span class="string">&#x27;沙僧&#x27;</span>,<span class="number">4</span>,<span class="number">1004</span>,<span class="string">&#x27;2007-05-23&#x27;</span>,<span class="string">&#x27;11000.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">20</span>),</span><br><span class="line">(<span class="number">1012</span>,<span class="string">&#x27;李逵&#x27;</span>,<span class="number">4</span>,<span class="number">1006</span>,<span class="string">&#x27;2001-12-03&#x27;</span>,<span class="string">&#x27;9500.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">30</span>),</span><br><span class="line">(<span class="number">1013</span>,<span class="string">&#x27;小白龙&#x27;</span>,<span class="number">4</span>,<span class="number">1004</span>,<span class="string">&#x27;2001-12-03&#x27;</span>,<span class="string">&#x27;30000.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">20</span>),</span><br><span class="line">(<span class="number">1014</span>,<span class="string">&#x27;关羽&#x27;</span>,<span class="number">4</span>,<span class="number">1007</span>,<span class="string">&#x27;2002-01-23&#x27;</span>,<span class="string">&#x27;13000.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加5个工资等级</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> salarygrade(grade,losalary,hisalary) <span class="keyword">VALUES</span> </span><br><span class="line">(<span class="number">1</span>,<span class="number">7000</span>,<span class="number">12000</span>),</span><br><span class="line">(<span class="number">2</span>,<span class="number">12010</span>,<span class="number">14000</span>),</span><br><span class="line">(<span class="number">3</span>,<span class="number">14010</span>,<span class="number">20000</span>),</span><br><span class="line">(<span class="number">4</span>,<span class="number">20010</span>,<span class="number">30000</span>),</span><br><span class="line">(<span class="number">5</span>,<span class="number">30010</span>,<span class="number">99990</span>);</span><br></pre></td></tr></table></figure><ul><li><p>需求</p><ol><li><p>查询所有员工信息。查询员工编号，员工姓名，工资，职务名称，职务描述</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">分析：</span></span><br><span class="line"><span class="comment">1. 员工编号，员工姓名，工资 信息在emp 员工表中</span></span><br><span class="line"><span class="comment">2. 职务名称，职务描述 信息在 job 职务表中</span></span><br><span class="line"><span class="comment">3. job 职务表 和 emp 员工表 是 一对多的关系 emp.job_id = job.id</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">-- 方式一 ：隐式内连接</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">emp.id,</span><br><span class="line">emp.ename,</span><br><span class="line">emp.salary,</span><br><span class="line">job.jname,</span><br><span class="line">job.description</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">emp,</span><br><span class="line">job</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">emp.job_id <span class="operator">=</span> job.id;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 方式二 ：显式内连接</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">emp.id,</span><br><span class="line">emp.ename,</span><br><span class="line">emp.salary,</span><br><span class="line">job.jname,</span><br><span class="line">job.description</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">emp</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> job <span class="keyword">ON</span> emp.job_id <span class="operator">=</span> job.id;</span><br></pre></td></tr></table></figure></li><li><p>查询员工编号，员工姓名，工资，职务名称，职务描述，部门名称，部门位置</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">分析：</span></span><br><span class="line"><span class="comment">1. 员工编号，员工姓名，工资 信息在emp 员工表中</span></span><br><span class="line"><span class="comment">2. 职务名称，职务描述 信息在 job 职务表中</span></span><br><span class="line"><span class="comment">3. job 职务表 和 emp 员工表 是 一对多的关系 emp.job_id = job.id</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">4. 部门名称，部门位置 来自于 部门表 dept</span></span><br><span class="line"><span class="comment">5. dept 和 emp 一对多关系 dept.id = emp.dept_id</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 方式一 ：隐式内连接</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">emp.id,</span><br><span class="line">emp.ename,</span><br><span class="line">emp.salary,</span><br><span class="line">job.jname,</span><br><span class="line">job.description,</span><br><span class="line">dept.dname,</span><br><span class="line">dept.loc</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">emp,</span><br><span class="line">job,</span><br><span class="line">dept</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">emp.job_id <span class="operator">=</span> job.id</span><br><span class="line"><span class="keyword">and</span> dept.id <span class="operator">=</span> emp.dept_id</span><br><span class="line">;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 方式二 ：显式内连接</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">emp.id,</span><br><span class="line">emp.ename,</span><br><span class="line">emp.salary,</span><br><span class="line">job.jname,</span><br><span class="line">job.description,</span><br><span class="line">dept.dname,</span><br><span class="line">dept.loc</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">emp</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> job <span class="keyword">ON</span> emp.job_id <span class="operator">=</span> job.id</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept <span class="keyword">ON</span> dept.id <span class="operator">=</span> emp.dept_id</span><br></pre></td></tr></table></figure></li><li><p>查询员工姓名，工资，工资等级</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">分析：</span></span><br><span class="line"><span class="comment">1. 员工姓名，工资 信息在emp 员工表中</span></span><br><span class="line"><span class="comment">2. 工资等级 信息在 salarygrade 工资等级表中</span></span><br><span class="line"><span class="comment">3. emp.salary &gt;= salarygrade.losalary  and emp.salary &lt;= salarygrade.hisalary</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">emp.ename,</span><br><span class="line">emp.salary,</span><br><span class="line">t2.<span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">emp,</span><br><span class="line">salarygrade t2</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">emp.salary <span class="operator">&gt;=</span> t2.losalary</span><br><span class="line"><span class="keyword">AND</span> emp.salary <span class="operator">&lt;=</span> t2.hisalary</span><br></pre></td></tr></table></figure></li><li><p>查询员工姓名，工资，职务名称，职务描述，部门名称，部门位置，工资等级</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">分析：</span></span><br><span class="line"><span class="comment">1. 员工编号，员工姓名，工资 信息在emp 员工表中</span></span><br><span class="line"><span class="comment">2. 职务名称，职务描述 信息在 job 职务表中</span></span><br><span class="line"><span class="comment">3. job 职务表 和 emp 员工表 是 一对多的关系 emp.job_id = job.id</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">4. 部门名称，部门位置 来自于 部门表 dept</span></span><br><span class="line"><span class="comment">5. dept 和 emp 一对多关系 dept.id = emp.dept_id</span></span><br><span class="line"><span class="comment">6. 工资等级 信息在 salarygrade 工资等级表中</span></span><br><span class="line"><span class="comment">7. emp.salary &gt;= salarygrade.losalary  and emp.salary &lt;= salarygrade.hisalary</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">emp.id,</span><br><span class="line">emp.ename,</span><br><span class="line">emp.salary,</span><br><span class="line">job.jname,</span><br><span class="line">job.description,</span><br><span class="line">dept.dname,</span><br><span class="line">dept.loc,</span><br><span class="line">t2.grade</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">emp</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> job <span class="keyword">ON</span> emp.job_id <span class="operator">=</span> job.id</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept <span class="keyword">ON</span> dept.id <span class="operator">=</span> emp.dept_id</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> salarygrade t2 <span class="keyword">ON</span> emp.salary <span class="keyword">BETWEEN</span> t2.losalary <span class="keyword">and</span> t2.hisalary;</span><br></pre></td></tr></table></figure></li><li><p>查询出部门编号、部门名称、部门位置、部门人数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">分析：</span></span><br><span class="line"><span class="comment">1. 部门编号、部门名称、部门位置 来自于部门 dept 表</span></span><br><span class="line"><span class="comment">2. 部门人数: 在emp表中 按照dept_id 进行分组，然后count(*)统计数量</span></span><br><span class="line"><span class="comment">3. 使用子查询，让部门表和分组后的表进行内连接</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">-- 根据部门id分组查询每一个部门id和员工数</span></span><br><span class="line"><span class="keyword">select</span> dept_id, <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> dept_id;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">dept.id,</span><br><span class="line">dept.dname,</span><br><span class="line">dept.loc,</span><br><span class="line">t1.count</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">dept,</span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">dept_id,</span><br><span class="line"><span class="built_in">count</span>(<span class="operator">*</span>) count</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">emp</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">dept_id</span><br><span class="line">) t1</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">dept.id <span class="operator">=</span> t1.dept_id</span><br></pre></td></tr></table></figure></li></ol></li></ul><h2 id="4，事务">4，事务</h2><h3 id="4-1-概述">4.1  概述</h3><blockquote><p>数据库的事务（Transaction）是一种机制、一个操作序列，包含了==一组数据库操作命令==。</p><p>事务把所有的命令作为一个整体一起向系统提交或撤销操作请求，即这一组数据库命令==要么同时成功，要么同时失败==。</p><p>事务是一个不可分割的工作逻辑单元。</p></blockquote><p>这些概念不好理解，接下来举例说明，如下图有一张表</p><img src="https://img.777nx.cn/test/image-20210724224955876.png" alt="image-20210724224955876" style="zoom:80%;" /><p>张三和李四账户中各有100块钱，现李四需要转换500块钱给张三，具体的转账操作为</p><ul><li>第一步：查询李四账户余额</li><li>第二步：从李四账户金额 -500</li><li>第三步：给张三账户金额 +500</li></ul><p>现在假设在转账过程中第二步完成后出现了异常第三步没有执行，就会造成李四账户金额少了500，而张三金额并没有多500；这样的系统是有问题的。如果解决呢？使用事务可以解决上述问题</p><img src="https://img.777nx.cn/test/image-20210724225537533.png" alt="image-20210724225537533" style="zoom:70%;" /><p>从上图可以看到在转账前开启事务，如果出现了异常回滚事务，三步正常执行就提交事务，这样就可以完美解决问题。</p><h3 id="4-2-语法">4.2  语法</h3><ul><li><p>开启事务</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">START</span> TRANSACTION;</span><br><span class="line">或者  </span><br><span class="line"><span class="keyword">BEGIN</span>;</span><br></pre></td></tr></table></figure></li><li><p>提交事务</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">commit</span>;</span><br></pre></td></tr></table></figure></li><li><p>回滚事务</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">rollback</span>;</span><br></pre></td></tr></table></figure></li></ul><h3 id="4-3-代码验证">4.3  代码验证</h3><ul><li><p>环境准备</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> account;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建账户表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> account(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">PRIMARY</span> KEY auto_increment,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">10</span>),</span><br><span class="line">money <span class="keyword">double</span>(<span class="number">10</span>,<span class="number">2</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> account(name,money) <span class="keyword">values</span>(<span class="string">&#x27;张三&#x27;</span>,<span class="number">1000</span>),(<span class="string">&#x27;李四&#x27;</span>,<span class="number">1000</span>);</span><br></pre></td></tr></table></figure></li><li><p>不加事务演示问题</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 转账操作</span></span><br><span class="line"><span class="comment">-- 1. 查询李四账户金额是否大于500</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. 李四账户 -500</span></span><br><span class="line"><span class="keyword">UPDATE</span> account <span class="keyword">set</span> money <span class="operator">=</span> money <span class="operator">-</span> <span class="number">500</span> <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;李四&#x27;</span>;</span><br><span class="line"></span><br><span class="line">出现异常了...  <span class="comment">-- 此处不是注释，在整体执行时会出问题，后面的sql则不执行</span></span><br><span class="line"><span class="comment">-- 3. 张三账户 +500</span></span><br><span class="line"><span class="keyword">UPDATE</span> account <span class="keyword">set</span> money <span class="operator">=</span> money <span class="operator">+</span> <span class="number">500</span> <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;张三&#x27;</span>;</span><br></pre></td></tr></table></figure><p>整体执行结果肯定会出问题，我们查询账户表中数据，发现李四账户少了500。</p><img src="https://img.777nx.cn/test/image-20210724230250263.png" alt="image-20210724230250263" style="zoom:90%;" /></li><li><p>添加事务sql如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 开启事务</span></span><br><span class="line"><span class="keyword">BEGIN</span>;</span><br><span class="line"><span class="comment">-- 转账操作</span></span><br><span class="line"><span class="comment">-- 1. 查询李四账户金额是否大于500</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. 李四账户 -500</span></span><br><span class="line"><span class="keyword">UPDATE</span> account <span class="keyword">set</span> money <span class="operator">=</span> money <span class="operator">-</span> <span class="number">500</span> <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;李四&#x27;</span>;</span><br><span class="line"></span><br><span class="line">出现异常了...  <span class="comment">-- 此处不是注释，在整体执行时会出问题，后面的sql则不执行</span></span><br><span class="line"><span class="comment">-- 3. 张三账户 +500</span></span><br><span class="line"><span class="keyword">UPDATE</span> account <span class="keyword">set</span> money <span class="operator">=</span> money <span class="operator">+</span> <span class="number">500</span> <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;张三&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 提交事务</span></span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 回滚事务</span></span><br><span class="line"><span class="keyword">ROLLBACK</span>;</span><br></pre></td></tr></table></figure><p>上面sql中的执行成功进选择执行提交事务，而出现问题则执行回滚事务的语句。以后我们肯定不可能这样操作，而是在java中进行操作，在java中可以抓取异常，没出现异常提交事务，出现异常回滚事务。</p></li></ul><h3 id="4-4-事务的四大特征">4.4  事务的四大特征</h3><ul><li><p>原子性（Atomicity）: 事务是不可分割的最小操作单位，要么同时成功，要么同时失败</p></li><li><p>一致性（Consistency） :事务完成时，必须使所有的数据都保持一致状态</p></li><li><p>隔离性（Isolation） :多个事务之间，操作的可见性</p></li><li><p>持久性（Durability） :事务一旦提交或回滚，它对数据库中的数据的改变就是永久的</p></li></ul><blockquote><p>==说明：==</p><p>mysql中事务是自动提交的。</p><p>也就是说我们不添加事务执行sql语句，语句执行完毕会自动的提交事务。</p><p>可以通过下面语句查询默认提交方式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT @<span class="meta">@autocommit</span>;</span><br></pre></td></tr></table></figure><p>查询到的结果是1 则表示自动提交，结果是0表示手动提交。当然也可以通过下面语句修改提交方式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> @<span class="variable">@autocommit</span> <span class="operator">=</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure></blockquote>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客添加待办清单页</title>
      <link href="/posts/9875347c.html"/>
      <url>/posts/9875347c.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p>参考：<a href="https://www.chuckle.top/article/9875347c.html">博客添加待办清单页</a></p></div><h2 id="1-前言">1. 前言</h2><p>要做的事还有很多，想做的事源源不断，那就都记录在博客里吧，<a href="https://www.777nx.cn/personal/todolist/">ToDoList</a>。</p><h2 id="2-实现">2. 实现</h2><ol><li>新建 <code>[blogroot]\themes\butterfly\layout\includes\page\todolist.pug</code> 添加以下代码</li></ol><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#todolist-box</span></span><br><span class="line">    <span class="selector-class">.page-top-card</span>(style=<span class="string">&#x27;background-image: url(/img/todo.webp);&#x27;</span>)</span><br><span class="line">        <span class="selector-class">.content-item-tips</span> 想做清单</span><br><span class="line">        <span class="selector-tag">span</span><span class="selector-class">.content-item-title</span> ToDoList</span><br><span class="line">        <span class="selector-class">.content-bottom</span></span><br><span class="line">            <span class="selector-class">.tips</span> 要做的事还有很多，想做的事源源不断</span><br><span class="line">    <span class="selector-id">#todolist-main</span></span><br><span class="line">        <span class="selector-id">#todolist-left</span></span><br><span class="line">            each <span class="selector-tag">i</span> <span class="keyword">in</span> site<span class="selector-class">.data</span><span class="selector-class">.todolist</span></span><br><span class="line">                <span class="keyword">if</span> <span class="selector-tag">i</span><span class="selector-class">.seat</span> == <span class="string">&#x27;left&#x27;</span></span><br><span class="line">                    <span class="selector-class">.todolist-item</span></span><br><span class="line">                        <span class="selector-tag">h3</span>.todolist-title=<span class="selector-tag">i</span><span class="selector-class">.class_name</span></span><br><span class="line">                        <span class="selector-tag">ul</span><span class="selector-class">.todolist-ul</span></span><br><span class="line">                            each item <span class="keyword">in</span> <span class="selector-tag">i</span><span class="selector-class">.todo_list</span></span><br><span class="line">                                <span class="selector-tag">li</span><span class="selector-class">.todolist-li</span></span><br><span class="line">                                    <span class="keyword">if</span> item<span class="selector-class">.completed</span></span><br><span class="line">                                        <span class="selector-tag">i</span><span class="selector-class">.fa-regular</span><span class="selector-class">.fa-circle-check</span></span><br><span class="line">                                    <span class="keyword">else</span> </span><br><span class="line">                                        <span class="selector-tag">i</span><span class="selector-class">.fa-regular</span><span class="selector-class">.fa-circle</span></span><br><span class="line">                                    span=item<span class="selector-class">.content</span></span><br><span class="line">        <span class="selector-id">#todolist-right</span></span><br><span class="line">            each <span class="selector-tag">i</span> <span class="keyword">in</span> site<span class="selector-class">.data</span><span class="selector-class">.todolist</span></span><br><span class="line">                <span class="keyword">if</span> <span class="selector-tag">i</span><span class="selector-class">.seat</span> == <span class="string">&#x27;right&#x27;</span></span><br><span class="line">                    <span class="selector-class">.todolist-item</span></span><br><span class="line">                        <span class="selector-tag">h3</span>.todolist-title=<span class="selector-tag">i</span><span class="selector-class">.class_name</span></span><br><span class="line">                        <span class="selector-tag">ul</span><span class="selector-class">.todolist-ul</span></span><br><span class="line">                            each item <span class="keyword">in</span> <span class="selector-tag">i</span><span class="selector-class">.todo_list</span></span><br><span class="line">                                <span class="selector-tag">li</span><span class="selector-class">.todolist-li</span></span><br><span class="line">                                    <span class="keyword">if</span> item<span class="selector-class">.completed</span></span><br><span class="line">                                        <span class="selector-tag">i</span><span class="selector-class">.fa-regular</span><span class="selector-class">.fa-circle-check</span></span><br><span class="line">                                    <span class="keyword">else</span> </span><br><span class="line">                                        <span class="selector-tag">i</span><span class="selector-class">.fa-regular</span><span class="selector-class">.fa-circle</span></span><br><span class="line">                                    span=item.<span class="attribute">content</span></span><br></pre></td></tr></table></figure><ol start="2"><li>修改 <code>[blogroot]\themes\butterfly\layout\page.pug</code></li></ol><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> page.type</span><br><span class="line">    when <span class="string">&#x27;tags&#x27;</span></span><br><span class="line">        <span class="keyword">include</span> <span class="keyword">includes</span><span class="regexp">/page/</span>tags.pug</span><br><span class="line">        <span class="keyword">include</span> <span class="keyword">includes</span><span class="regexp">/page/</span><span class="keyword">default</span>-page.pug</span><br><span class="line">    when <span class="string">&#x27;link&#x27;</span></span><br><span class="line">        <span class="keyword">include</span> <span class="keyword">includes</span><span class="regexp">/page/</span>flink.pug</span><br><span class="line">    when <span class="string">&#x27;categories&#x27;</span></span><br><span class="line">        <span class="keyword">include</span> <span class="keyword">includes</span><span class="regexp">/page/</span>categories.pug</span><br><span class="line">        <span class="keyword">include</span> <span class="keyword">includes</span><span class="regexp">/page/</span><span class="keyword">default</span>-page.pug</span><br><span class="line">    when <span class="string">&#x27;essay&#x27;</span></span><br><span class="line">        <span class="keyword">include</span> <span class="keyword">includes</span><span class="regexp">/page/</span>essay.pug</span><br><span class="line">+    when <span class="string">&#x27;todolist&#x27;</span></span><br><span class="line">+        <span class="keyword">include</span> <span class="keyword">includes</span><span class="regexp">/page/</span>todolist.pug</span><br><span class="line">    <span class="keyword">default</span></span><br><span class="line">        <span class="keyword">include</span> <span class="keyword">includes</span><span class="regexp">/page/</span><span class="keyword">default</span>-page.pug</span><br></pre></td></tr></table></figure><ol start="3"><li>新建 <code>[blogroot]\source\_data\todolist.yml</code> 添加以下代码</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">class_name:</span> <span class="string">想做的项目</span></span><br><span class="line">  <span class="attr">seat:</span> <span class="string">left</span></span><br><span class="line">  <span class="attr">todo_list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">content:</span> <span class="string">个人主页</span></span><br><span class="line">      <span class="attr">completed:</span> <span class="literal">false</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">content:</span> <span class="string">公众号</span></span><br><span class="line">      <span class="attr">completed:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">class_name:</span> <span class="string">想看的书</span></span><br><span class="line">  <span class="attr">seat:</span> <span class="string">left</span></span><br><span class="line">  <span class="attr">todo_list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">content:</span> <span class="string">《毛泽东选集》</span></span><br><span class="line">      <span class="attr">completed:</span> <span class="literal">false</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">content:</span> <span class="string">《86不存在的战区》</span></span><br><span class="line">      <span class="attr">completed:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">class_name:</span> <span class="string">想买的东西</span></span><br><span class="line">  <span class="attr">seat:</span> <span class="string">left</span></span><br><span class="line">  <span class="attr">todo_list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">content:</span> <span class="string">小米平板5pro</span></span><br><span class="line">      <span class="attr">completed:</span> <span class="literal">true</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">content:</span> <span class="string">致态固态硬盘</span></span><br><span class="line">      <span class="attr">completed:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">class_name:</span> <span class="string">想学的技术</span></span><br><span class="line">  <span class="attr">seat:</span> <span class="string">right</span></span><br><span class="line">  <span class="attr">todo_list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">content:</span> <span class="string">Vue2/Vue3</span></span><br><span class="line">      <span class="attr">completed:</span> <span class="literal">false</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">content:</span> <span class="string">Electron</span></span><br><span class="line">      <span class="attr">completed:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">class_name:</span> <span class="string">想去的地方</span></span><br><span class="line">  <span class="attr">seat:</span> <span class="string">right</span></span><br><span class="line">  <span class="attr">todo_list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">content:</span> <span class="string">桂林</span></span><br><span class="line">      <span class="attr">completed:</span> <span class="literal">true</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">content:</span> <span class="string">杭州</span></span><br><span class="line">      <span class="attr">completed:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><ol start="4"><li>添加CSS样式：</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#todolist-box</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#todolist-main</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: row;</span><br><span class="line">    <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">16px</span> <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#todolist-main</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line">    <span class="attribute">list-style</span>:none;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">17px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#todolist-main</span> <span class="selector-tag">ul</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#todolist-left</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">8px</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#todolist-right</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">8px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.todolist-item</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fae4df</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">1rem</span> <span class="number">1.2rem</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> dashed <span class="number">#f7a796</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">1rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span></span><br><span class="line"><span class="selector-class">.todolist-item</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#242424</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> dashed <span class="number">#51908b</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">li</span><span class="selector-class">.todolist-li</span> <span class="selector-tag">i</span>&#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">h3</span><span class="selector-class">.todolist-title</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span><span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="built_in">var</span>(--todo-border);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">li</span><span class="selector-class">.todolist-li</span>&#123;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="built_in">var</span>(--todo-border);</span><br><span class="line">    <span class="attribute">font-weight</span>: normal;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.todolist-li</span> <span class="selector-tag">span</span>&#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>:<span class="number">700px</span>)&#123;</span><br><span class="line">    <span class="selector-id">#todolist-left</span>,<span class="selector-id">#todolist-right</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="selector-class">.page-top-card</span>&#123;</span><br><span class="line">  <span class="attribute">background-size</span>: cover;</span><br><span class="line">  <span class="attribute">background-position</span>: center;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">20.5rem</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">2.7rem</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">color</span>: white;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.page-top-card</span> <span class="selector-tag">span</span><span class="selector-class">.content-item-title</span>&#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">2.3em</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.2</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: STZhongsong,<span class="string">&#x27;Microsoft YaHei&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.page-top-card</span> <span class="selector-class">.content-bottom</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">width</span>: <span class="built_in">calc</span>(<span class="number">100%</span> - <span class="number">5.4rem</span>);</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">1rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&#x27;dark&#x27;</span>]</span> <span class="selector-class">.page-top-card</span>&#123;</span><br><span class="line">  <span class="attribute">opacity</span>: .<span class="number">92</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>新建页面，通过<code>hexo n page todolist</code>创建页面，相信都很熟悉了</li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: ToDoList</span><br><span class="line">date: 2023-03-18 14:07:13</span><br><span class="line">comments: false</span><br><span class="line">aside: false</span><br><span class="line"><span class="section">type: todolist</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><h2 id="3-后记">3. 后记</h2><p>后来我有这么多想要做的事情。</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> butterfly </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>免费的图床</title>
      <link href="/posts/d7fb1ba1.html"/>
      <url>/posts/d7fb1ba1.html</url>
      
        <content type="html"><![CDATA[<div class="note info modern"><ol><li>这部分免费图床就太多了，我会把我目前发现的可以免费白嫖一定额度的图床做一个总结列在下面</li><li>这部分图床的搭建门槛较低，所以速度和稳定性良莠不齐，大家自行选择使用哪个</li><li>我这里只给大家演示一种的使用方法，其他图床使用方法也类似</li><li>大家可以看看哪个比较好用的或者自己知道的好用的这里没有，可以留言我会进行补充</li></ol></div><h2 id="1-免费图床推荐">1. 免费图床推荐</h2><table><thead><tr><th style="text-align:center">🍕</th><th style="text-align:center">🥗</th><th style="text-align:center">🍤</th></tr></thead><tbody><tr><td style="text-align:center"><a href="https://smms.app/">SMMS</a></td><td style="text-align:center"><a href="https://www.superbed.cn/">聚合图床</a></td><td style="text-align:center"><a href="https://www.hualigs.cn/">遇见图床</a></td></tr><tr><td style="text-align:center"><a href="https://postimages.org/">PostImage</a></td><td style="text-align:center"><a href="https://imgse.com/">路过图床</a></td><td style="text-align:center"><a href="https://www.imgurl.org/">imgURL</a></td></tr><tr><td style="text-align:center"><a href="https://imgbox.com/">imgbox</a></td><td style="text-align:center"><a href="https://pic.iqy.ink/upload">Lsky Pro</a></td><td style="text-align:center"><a href="https://upload.cc/">Upload.cc</a></td></tr><tr><td style="text-align:center"><a href="https://imagelol.com/">imagelol</a></td><td style="text-align:center"><a href="https://imgtp.com/">imgtp</a></td><td style="text-align:center"><a href="https://cloudimge.com/">云图床</a></td></tr><tr><td style="text-align:center"><a href="https://mcecy.com/">载涂图床</a></td><td style="text-align:center"><a href="https://tuchuang.voooe.cn/">Sky Chart Bed</a></td><td style="text-align:center"><a href="https://www.imgbed.link/">风筝图床</a></td></tr><tr><td style="text-align:center"><a href="https://pz.al/">喷子图床</a></td><td style="text-align:center"><a href="https://imgkb.com/">imgkb</a></td><td style="text-align:center"></td></tr></tbody></table><ul><li>使用方法：直接进入官网，上传图片然后粘贴地址即可，地址的样式有多样，自行选择。</li><li>选择要点：<ol><li>速度：大家可以到<a href="https://ping.cn/">Ping.cn</a>进行测试</li><li>稳定性与安全性：看看图床创建时间，网上评价等</li><li>可适用性：支持的格式越多肯定是越好的，有部分支持<code>webp</code>和其他格式的，可以当资源床</li></ol></li></ul><h2 id="2-PicGo结合Markdown实时上传图片">2. PicGo结合Markdown实时上传图片</h2><ul><li><p>Picgo究竟是什么？这是一个开源软件，开源地址：<a href="https://github.com/Molunerfinn/PicGo">Molunerfinn/PicGo</a></p></li><li><p>引用项目的介绍：这是一个用于快速上传图片并获取图片 URL 链接的工具，关键是他可以与Typora配套一起使用，在粘贴图片的同时上传图片，十分方便！</p></li><li><p>最新版我这里实测没办法安装一些插件，因此推荐大家安装<a href="https://github.com/Molunerfinn/PicGo/releases/tag/v2.3.1-beta.5">v2.3.1-beta.5</a>这个版本</p><p><img src="https://img.777nx.cn/test/image-20230313200455541.png" alt="image-20230313200455541"></p></li><li><p>下载软件后直接一路安装下去就行，建议装在非C盘的任意一个盘。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npm常用指令</title>
      <link href="/posts/4e4cffb7.html"/>
      <url>/posts/4e4cffb7.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-安装模块">1. 安装模块</h2><table><thead><tr><th style="text-align:center"><strong>命令</strong></th><th style="text-align:center"><strong>作用</strong></th></tr></thead><tbody><tr><td style="text-align:center">npm init</td><td style="text-align:center">初始化 package.json，它是 NodeJS 约定的用来存放项目的信息和配置等信息的文件</td></tr><tr><td style="text-align:center">npm i</td><td style="text-align:center">安装所有依赖，从github上拉取项目后，常执行此命令用于初始化</td></tr><tr><td style="text-align:center">npm i 包名</td><td style="text-align:center">安装模块到默认dependencies</td></tr><tr><td style="text-align:center">npm i 包名 -g</td><td style="text-align:center">会安装到配置的全局目录下</td></tr><tr><td style="text-align:center">npm i 包名 -S</td><td style="text-align:center">安装包信息将加入到dependencies生产依赖</td></tr><tr><td style="text-align:center">npm i 包名 -D</td><td style="text-align:center">安装包信息将加入到devDependencies开发依赖</td></tr><tr><td style="text-align:center">npm i 包名@1.8.3</td><td style="text-align:center">安装模块指定为1.8.3版本</td></tr></tbody></table><h3 id="缩写解释">缩写解释</h3><ul><li>-g： 为 --global 的缩写，表示安装到全局目录里</li><li>-S： 为 --save 的缩写，表示安装的包将写入package.json里面的dependencies</li><li>-D： 为 --save-dev 的缩写，表示将安装的包将写入packege.json里面的devDependencies</li><li>i： 为install的缩写，表示安装</li></ul><h3 id="常见问题">常见问题</h3><ul><li>全局安装与本地安装的区别：本地安装是指安装到项目中指定的node-moudel中，全局安装是到node安装目录下的node-mouduels中，全局安装你可以用cmd命令行去操作，本地则通过require语法获取安装引入安装模块</li><li>生产依赖和开发依赖的区别：生产依赖里面的包只用于开发环境，不用于生产环境，这些包通常是单元测试或者打包工具等，例如webpack等。开发依赖，或者叫做业务依赖，这是我们最常用的依赖包管理对象，它用于指定应用依赖的外部包，这些依赖是应用发布后正常执行时所需要的，但不包含测试时或者本地打包时所使用的包</li></ul><h2 id="2-卸载模块">2. 卸载模块</h2><ul><li>npm uninstall 包名</li><li>un为uninstall的缩写</li></ul><h2 id="3-更新模块">3. 更新模块</h2><table><thead><tr><th style="text-align:center"><strong>命令</strong></th><th style="text-align:center"><strong>作用</strong></th></tr></thead><tbody><tr><td style="text-align:center">npm update 包名</td><td style="text-align:center">更新最新版本的模块</td></tr><tr><td style="text-align:center">npm update 包名@2.1.0</td><td style="text-align:center">更新到指定版本号的模块</td></tr><tr><td style="text-align:center">npm install 包名@latest</td><td style="text-align:center">更新到最新版本</td></tr></tbody></table><h2 id="4-查看命令">4. 查看命令</h2><table><thead><tr><th style="text-align:center"><strong>命令</strong></th><th style="text-align:center"><strong>作用</strong></th></tr></thead><tbody><tr><td style="text-align:center">npm list / npm ls</td><td style="text-align:center">查看本地已安装包的清单列表</td></tr><tr><td style="text-align:center">npm view 包名 dependencies</td><td style="text-align:center">查看某个包对于各种包的依赖关系</td></tr><tr><td style="text-align:center">npm view 包名 version</td><td style="text-align:center">查看包的最新的版本号</td></tr><tr><td style="text-align:center">npm view 包名 versions</td><td style="text-align:center">查看包的历史版本号</td></tr><tr><td style="text-align:center">npm view 包名</td><td style="text-align:center">查看最新的jquery版本的信息</td></tr></tbody></table><h2 id="5-设置镜像">5. 设置镜像</h2><ul><li><p>全局淘宝镜像：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></li><li><p>默认全局镜像：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npmjs.org</span><br></pre></td></tr></table></figure></li></ul><h2 id="6-其他命令">6. 其他命令</h2><table><thead><tr><th style="text-align:center"><strong>命令</strong></th><th style="text-align:center"><strong>作用</strong></th></tr></thead><tbody><tr><td style="text-align:center">npm cache clean</td><td style="text-align:center">清除npm的缓存</td></tr><tr><td style="text-align:center">npm prune</td><td style="text-align:center">清除项目中没有被使用的包</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Axure的安装教程</title>
      <link href="/posts/8f3f2e3b.html"/>
      <url>/posts/8f3f2e3b.html</url>
      
        <content type="html"><![CDATA[<div class="tip cogs"><p>本站资源均来源于网络，只作学习交流使用，版权归原作者所有，请于下载后24小时内删除，若作商业用途，请联系原作者授权，由于未授权发生的侵权行为与本站无关，若本站侵犯了您的权益，请联系本站删除，邮箱：fantasy@777nx.cn</p></div><h2 id="Axure简单介绍">Axure简单介绍</h2><p>Axure即为原型（prototype），这个词来自拉丁文的词proto，意谓“最初的”，意义是形式或模型。那么Axure有什么用呢？</p><p>Axure RP是一款专业的快速原型设计工具。通俗易解地讲就是帮助使用者可以快速的构造出我们需要的网页示意图、流程图、演示的网页文件等，可以在我们做项目前为我们大概地演示大体的框架页面，方便我们后面有序的设计出项目。</p><p>Axure这个软件功能强大，可以做出很多交互功能，得到我们需要的交互效果，可以直接通过拖拽画出原型、生成网页； Axure这个软件效果高，可以用快捷方便的方式，很快模拟出高保真页面原型。</p><h2 id="Axure的安装与汉化">Axure的安装与汉化</h2><h3 id="安装">安装</h3><p>Axure安装可以在以下网址下载，或者自行百度下载。</p><ol><li><p><a href="https://www.123pan.com/s/jLeA-gWyoA.html">https://www.123pan.com/s/jLeA-gWyoA.html</a></p></li><li><p><a href="https://www.axure.com.cn/">Axure中文学习网 – 交互原型设计软件Axure RP 10中文正版支持 – 北京口耳相传科技有限公司</a></p></li></ol><p>选择适合自己的版本，目前已经更新到了第十版本，推荐使用本人正在使用的第九版本，因为比较稳定。直接跟着next走安装完成即可。</p><h3 id="汉化">汉化</h3><p>汉化包可以在以下网址下载，，或者自行百度下载。</p><p><a href="https://www.123pan.com/s/jLeA-FWyoA.html">https://www.123pan.com/s/jLeA-FWyoA.html</a></p><p>下载好之后呢会得到如下图所示的汉化包：</p><p><img src="https://img.777nx.cn/test/image-20230313012512724.png" alt="image-20230313012512724"></p><p>之后只需要把lang整个文件夹复制到你下载好的Axure的文件夹里面就可以了。这时候打开你的Axure就可以得到中文版的Axure了。</p><p><img src="https://img.777nx.cn/test/image-20230313120859916.png" alt="image-20230313120859916"></p><h3 id="软件授权">软件授权</h3><ol><li><p>打开软件会弹出这个页面，直接点 输入授权</p><p><img src="https://img.777nx.cn/test/image-20230313120944133.png" alt="image-20230313120944133"></p></li><li><p>在授权处，填写 被授权人 和 授权密钥，然后提交即可</p><p><img src="https://img.777nx.cn/test/image-20230313112007466.png" alt="image-20230313112007466"></p></li></ol><div class="note success flat"><p>用户名：<a href="http://foxirj.com">foxirj.com</a><br>激活码：2pVLOhW90mI2zr9IRj8dwvdxDedEgk0EEFwaayqBj5XnYgJ9ewTCsW4QdvuadDLv</p></div><ol start="3"><li><p>如图显示为授权成功的样子</p><p><img src="https://img.777nx.cn/test/image-20230313112034578.png" alt="image-20230313112034578"></p></li></ol><h2 id="总结">总结</h2><p>Axure是前端中一个非常简单的设计软件，可以帮助我们快速的设计出我们需要的网页页面的大概模型，这样我们在做项目时有个模板参照，写起来逻辑性强，就会达到事半功倍的效果了。</p><p>Axure是前端学子的必须掌握的软件之一，而且入手门槛低。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Axure </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一文读懂什么是数学建模</title>
      <link href="/posts/a69ae078.html"/>
      <url>/posts/a69ae078.html</url>
      
        <content type="html"><![CDATA[<div class="tip home"><p>首先声明一下，本文以下介绍都是本人自己的见解、自己的经验；都是<strong>用大白话去说</strong>，不会引入一些什么规范性的概念。</p></div><div class="note info flat"><p>参考：<a href="https://zhuanlan.zhihu.com/p/570492431">数学建模入门篇(0 基础必看，全是自己的经验)</a></p></div><h2 id="一、数学建模是什么？">一、数学建模是什么？</h2><p>说的神一点：就是让我们用数学的眼光去认识这个世界(纯纯扯犊子)。</p><p>其实说白了：就是生活中的各种问题(如股票预测、火灾报警统计等)，运用数学的方式去阐述并解决它。(其实大家也并不需要非得给数学建模一个定义，就简单理解为用数学的方法去做题就完了)</p><h2 id="二、为什么要参加数学建模？">二、为什么要参加数学建模？</h2><p>可能对于一些高情操的大神来说，是为了推动祖国的发展，社会的进步。</p><p>但对于我这种这凡夫俗子来说，<strong>加分啊！加分啊！加分啊！保个研究生，去和朋友吹牛 B 啊!</strong></p><p>对于想要保研的同学来说，数学建模比赛是必须要参加的，真的会加很多分，比做研发或申请专利等有效的多，所以我建议大家一定要看重这个比赛。具体加多少分，每个学校有不同的指标。</p><h2 id="三、数学建模赛事">三、数学建模赛事</h2><p>数学建模有很多赛事，以下介绍两个我们会参加的比赛。</p><h3 id="1、“数维杯”大学生数学建模挑战赛">1、“数维杯”大学生数学建模挑战赛</h3><p>主办方：内蒙古创新教育学会、内蒙古基础教育研究院</p><p>报名时间：截止日期为 2023 年 5 月 12 日 19 时</p><p>竞赛开始时间：2023 年 5 月 12 日 08 时至 5 月 15 日 09 时</p><h3 id="2、“高教社杯”全国大学生数学建模竞赛">2、“高教社杯”全国大学生数学建模竞赛</h3><p>主办方：中国工业与应用数学学会</p><p>报名时间：截止日期为 2022 年 9 月 2 日 20 时</p><p>竞赛时间：2022 年 9 月 15 日 18 时至 9 月 18 日 20 时</p><p>更多相关信息去比赛官网查询。</p><h2 id="四、如何准备数学建模比赛">四、如何准备数学建模比赛</h2><p>如何学数学建模，成为大家主要关心的事情。我当时学习的时候也翻阅了几篇其他前辈的推荐，也按照他们的思路去学了学，比如说：给你列了很多书单，让你去看，但是相信我，你根本看不下去几页，能看三四十页的我都佩服你。</p><p>下面说一下我认为的学习方式：</p><h3 id="1、去-b-站看视频">1、去 b 站看视频</h3><p>首先得整清楚各种模型是干什么的，它们的特点是什么，什么场景下用最合适。（比如说题目是一个分析评价题：是适合用 TOPSIS、还是主成分分析呢、还是用聚类分析呢。），最起码得知道这些模型是干什么的，**这样看到题目时才会“噢，这个题适合用神经网络机器学习预测；噢，那个题适合用主成分分析”，然后再去专门找以下所选模型的资料，**减少了巨多工作量。推荐“清风数学建模”、“老哥教你学建模”。</p><h3 id="2、跟着视频中的例题练手">2、跟着视频中的例题练手</h3><p>这些视频讲解的时候都会有一些例题和课后作业，然后去演示怎么做(如 Matlab、spss、stata)，不要只看，一定要跟着去做，做的过程中会发现很多问题。</p><h3 id="3、直接怼国赛优秀论文！！！！！！！！！！（相信我）">3、直接怼国赛优秀论文！！！！！！！！！！（相信我）</h3><p>**看完视频了解完各种模型，就直接怼论文，**刚开始的时候肯定很痛苦（啊，一篇文章二三十页，这这怎么可能有耐心看下去；啊，这写的什么啊，完全看不懂）。</p><p>我记得我当时看论文的时候，就觉得“这他喵的，是人写的吗”，看着看着没耐心了，看着看着走神了，然后拍拍头继续硬着头皮看。但是等你看个三四篇的时候，就会发现其中的精髓，看别人怎么分析的问题，怎么选模型，及他们做的图怎么这么好看，文章这么有条理性。</p><p>然后就跟着学呗，学别人怎么分析问题、学别人怎么排版、学别人怎么作图好看，学会了不就都是自己的了吗。</p><h3 id="4、大量参加比赛！！！！！！！！！（练兵）">4、大量参加比赛！！！！！！！！！（练兵）</h3><p>不要想着我什么都不会参加比赛干啥，有那时间还不如多看两个视频、多读两篇文章呢。我告诉你，这样的想法是大错特错，</p><p>不会做不要紧，根据题目现学，最后哪怕是编也要把论文编出来，参加几次比赛就会有感觉，刚开始的时候要端正好心态，不要盲目的追求获奖，我们只是练兵，等把自己知识提升好了，一年的时间基本上就能把所有的奖项获得一遍。</p><h2 id="五、组队见解">五、组队见解</h2><p>俗话说“三个臭皮匠，顶个诸葛亮”，建模比赛也是三个人组队，一般来说为：一人负责编程、一人负责建模、一人负责论文。</p><p>对于大数据类的题，我的见解最好是两人负责编程，一人负责论文，这两位编程手中一人主要负责数据处理，另一位负责模型算法的编写。为什么这么说呢，发布题目后肯定是三个人一起讨论，发表自己对题目的理解，然后找最好的方法，这个过程中基本上已经把算法确定下来了，后续建模手的工作量基本不大了，但编程手的工作量巨大，还要处理数据，还要跑算法出结果，所以我建议准备做大数据类题目的队伍可以考虑以下这种组队形式。</p><p>对于大数据类题目，最优团队见解</p><h3 id="（1）主算法编程队员">（1）主算法编程队员</h3><p>这位队员要对算法了解更深一些，对各种模型有自己的认识和理解。</p><p>在讨论题目过程中，收集大家的理解，判断各种想法的可行性，确定完模型后查找资料编写该模型的程序。</p><h3 id="（2）主数据编程队员">（2）主数据编程队员</h3><p>对于大数据类题目，会有巨多的数据需要处理(我记的去年“高教社杯”数学建模竞赛，有十多万行数据)，而且还存在一些数据维度不同(如输入以“天”为节点，输出以“小时”为节点)等问题。可用 excel 编写伪代码做，或用 Matlab、python。</p><h3 id="（3）主论文队员">（3）主论文队员</h3><p>主论文队员必须有良好的写作能力，以及排版美化审美。做好数据可是化（做一些好看的图，数据用“三线表”格式存放）；多看优秀论文，总结别人写作的经验。</p><p>当然，这三个人必须对各种模型都有一定的了解，要不然分析不对问题，确定不下来正确的算法，编什么程序，所以说并不是只需要一个人会算法就行，是所有人都要了解算法，包括论文手也是，不了解算法，根本写不出什么东西，没有自己的见解光去网上找文章 ctrl+c、ctrl+v 肯定是不行，可能连论文的查重都过不了。</p><p>还有比较重要的一点，大家不要老想着“找个大牛抱大腿”，组队最好找能处的来的，确实想通过这方面提升自己的。不是多会没问题，大家可以一起学，一起慢慢提升。所以说找队友一定要谨慎，我见过太多还没结赛就分崩离析的队伍。</p><h2 id="附录：2022-年全国大学生数学建模竞赛题目">附录：2022 年全国大学生数学建模竞赛题目</h2><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href=" https://777nx.lanzoue.com/i4Jui0qm5zwb">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/ https://777nx.lanzoue.com/i4Jui0qm5zwb.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">2022年第七届数维杯大学生数学建模挑战赛赛题</div>            <div class="tag-link-sitename"> 请先阅读“2022 年数维杯大学生数学建模挑战赛论文格式规范”</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href=" https://777nx.lanzoue.com/ipd8n0pxphsj">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/ https://777nx.lanzoue.com/ipd8n0pxphsj.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">2022年高教社杯全国大学生数学建模竞赛题目</div>            <div class="tag-link-sitename"> 请先阅读“全国大学生数学建模竞赛论文格式规范”</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建基础教程(二)</title>
      <link href="/posts/4aa2d85f.html"/>
      <url>/posts/4aa2d85f.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><div class="note info no-icon flat"><p>前言📝<br>这部分教程有参考tzy大佬的文章：<a href="https://tzy1997.com/articles/hexo1603/">基于 Hexo 从零开始搭建个人博客（三）</a>、<a href="https://tzy1997.com/articles/hexo1604/">基于 Hexo 从零开始搭建个人博客（四）</a></p><p>阅读本篇前，请先阅读前面的文章：<a href="https://www.777nx.cn/posts/e593433d.html">Hexo 博客搭建基础教程 (一)</a></p></div><h2 id="1-前言">1. 前言</h2><ol><li><p>博客搭建过程遇到任何问题，优先在本页面搜索，检查是否已经有该配置教程。</p></li><li><p>遇到问题可以优先在文章评论区留言，注意留言时请填写正确的邮箱以确保能收到站长的回复。</p></li><li><p>实在解决不了的问题可添加站长的微信进行交流，备注自己的个人信息。</p></li></ol><h2 id="2-Vercel部署与自定义域名">2. Vercel部署与自定义域名</h2><h3 id="2-1-Vercel部署">2.1 Vercel部署</h3><p>Vercel简介：<a href="https://vercel.com/dashboard">vercel</a>是一个代码托管平台，它能够托管你的静态html界面，甚至能够托管你的node.js与Python服务端脚本，是<strong>不想买服务器的懒人的福音</strong>！</p><p><strong>使用Vercel部署Hexo项目步骤：</strong></p><ol><li><p>首先需要一个Vercel账号，这里<strong>推荐用GitHub账户关联，这样你就可以在vercel中直接托管你的GitHub库中的项目了</strong>，实现开发部署一步到位（网络不流畅可以考虑挂梯子）。</p><p><img src="https://img.777nx.cn/test/image-20230316145325197.png" alt="image-20230316145325197"></p></li><li><p>当你用你的Github账户关联并绑定手机号登录之后，点击右上角的<code>Add New Project</code>创建新的项目，之后导入选项那里选择<code>Continue with Github</code>，这时候应该能看到你Github账号的仓库，选择你刚刚部署成功的存储静态博客的仓库<code>&lt;username&gt;.github.io</code>右边的<code>Import</code>选项，表示你要导入该仓库。</p><p><img src="https://img.777nx.cn/test/image-20230316145520042.png" alt="image-20230316145520042"></p><p><img src="https://img.777nx.cn/test/image-20230316145629190.png" alt="image-20230316145629190"></p></li><li><p>起一个只能有字母、数字或者或者连字符的项目名称，然后其他默认，点击<code>Deploy</code>，等待一分钟即可部署成功，部署成功后点击<code>Continue to Dashboard</code>跳转到控制面板，下图所示就是控制面板，看到就代表成功部署到了，但是我们现在还不能访问他给出的域，因为GFW最近把Vercel屏蔽了。</p><p><img src="https://img.777nx.cn/test/image-20230316145830895.png" alt="image-20230316145830895"></p><p><img src="https://img.777nx.cn/test/image-20230316145953453.png" alt="image-20230316145953453"></p></li></ol><h3 id="2-2-绑定自定义域名">2.2 绑定自定义域名</h3><p>现在你的个人网站的地址是 <code>username.github.io</code>以及在Vercel上有一个<code>777nx-github-io.vercel.app</code>。如果觉得不够定制化，可以购买一个专属域名。</p><blockquote><p>这一步不是必要的，如果目前还不想买域名可以先跳过。</p></blockquote><p>腾讯云、阿里云等都是不错的域名代理商，建议选用<code>com</code>，<code>cn</code>或<code>cc</code>这类常用好记的顶域，对SEO比较友好，自定义部分的长度尽可能短别人才会更容易地记住你的网站，要知道域名就是你网站的卡片。此处以阿里云域名为例进行说明，购买域名后，实名认证进入阿里云控制台，点云解析进去，找到你刚买的域名，点进去添加Vercel所需的解析记录，注意博主这里是解析二级域名只需要解析一条即可。但是如果是一级域名，需要解析两个，一个是<code>@</code>，另外一个是<code>www</code>，Vercel建议是<code>@</code>的解析重定向至<code>www</code>。</p><p>以我的域名：<code>777nx.cn</code>为例进行说明</p><table><thead><tr><th style="text-align:center"><strong>主机记录</strong></th><th style="text-align:center"><strong>解释</strong></th></tr></thead><tbody><tr><td style="text-align:center">www</td><td style="text-align:center">解析后的域名为 <a href="http://www.777nx.cn">www.777nx.cn</a></td></tr><tr><td style="text-align:center">@</td><td style="text-align:center">直接解析主域名 <a href="http://777nx.cn">777nx.cn</a></td></tr><tr><td style="text-align:center">*</td><td style="text-align:center">泛解析，匹配其他所有域名 *.777nx.cn</td></tr><tr><td style="text-align:center">mail</td><td style="text-align:center">将域名解析为 <a href="http://mail.777nx.cn">mail.777nx.cn</a>，通常用于解析邮箱服务器</td></tr><tr><td style="text-align:center">二级</td><td style="text-align:center">如 <a href="http://abc.777nx.cn">abc.777nx.cn</a>，填写 abc</td></tr><tr><td style="text-align:center">手机网站</td><td style="text-align:center">如 <a href="http://m.777nx.cn">m.777nx.cn</a>，填写 m</td></tr><tr><td style="text-align:center">显性URL</td><td style="text-align:center">不支持泛解析（泛解析：将所有子域名解析到同一地址）</td></tr></tbody></table><blockquote><p>将域名指向云服务器，请选择「A」； 将域名指向另一个域名，请选择「CNAME」； 建立邮箱请选择「MX」，根据邮箱服务商提供的 MX 记录填写。</p></blockquote><table><thead><tr><th style="text-align:center"><strong>记录类型</strong></th><th style="text-align:center"><strong>解释</strong></th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:center">用来指定域名的 IPv4 地址（如 8.8.8.8），如果需要将域名指向一个 IP 地址，就需要添加 A 记录。</td></tr><tr><td style="text-align:center">CNAME</td><td style="text-align:center">如果需要将域名指向另一个域名，再由另一个域名提供 IP 地址，就需要添加 CNAME 记录。</td></tr><tr><td style="text-align:center">MX</td><td style="text-align:center">如果需要设置邮箱，让邮箱能收到邮件，就需要添加 MX 记录。</td></tr><tr><td style="text-align:center">TXT</td><td style="text-align:center">在这里可以填写任何东西，长度限制 255。绝大多数的 TXT 记录是用来做 SPF 记录（反垃圾邮件）</td></tr><tr><td style="text-align:center">NS</td><td style="text-align:center">域名服务器记录，如果需要将子域名交给其他 DNS 服务商解析，就需要添加 NS 记录。</td></tr><tr><td style="text-align:center">AAAA</td><td style="text-align:center">用来指定主机名（或域名）对应的 IPv6 地址（例如：ff06:0:0:0:0:0:0:c3）记录。</td></tr><tr><td style="text-align:center">SRV</td><td style="text-align:center">记录了哪台计算机提供了哪个服务。格式为：服务的名字、点、协议的类型，例如：_xmpp-server_tcp。</td></tr><tr><td style="text-align:center">显性URL</td><td style="text-align:center">从一个地址 301 重定向到另一个地址的时候，就需要添加显性 URL 记录（注：DNSPod 目前只支持 301 重定向）。</td></tr><tr><td style="text-align:center">隐性URL</td><td style="text-align:center">类似于显性 URL，区别在于隐性 URL 不会改变地址栏的域名。</td></tr></tbody></table><p><strong>添加自定义域名的步骤：</strong></p><ol><li><p>点击Vercel控制面板右上角的<code>View Domains</code>查看当前的域，我们可以看到仅有Vercel给你预分配的一个域名，此时我们输入刚刚购买的域名，我这里以二级域名<code>demo.777nx.cn</code>为例进行说明，添加后他会提示你添加一条DNS解析记录。</p><p><img src="https://img.777nx.cn/test/image-20230316151509927.png" alt="image-20230316151509927"></p><p><img src="https://img.777nx.cn/test/image-20230316151714732.png" alt="image-20230316151714732"></p><p><img src="https://img.777nx.cn/test/image-20230316153445442.png" alt="image-20230316153445442"></p></li></ol><p><strong>PS</strong>：如果你是新买的域名，直接输入你新买的一级域名即可，例如<code>demo123.com</code>，他会推荐你将<code>demo123.com</code>重定向至<code>www.demo123.com</code>，点<code>ADD</code>即可，然后他会提示你添加两条解析记录，一个是<code>@</code>开头的和<code>CNAME</code>开头的，添加记录的方法和二级域名一致。</p><p><img src="https://img.777nx.cn/test/66c6d6f8fac84481b788228c4222864d.jpg" alt="66c6d6f8fac84481b788228c4222864d"></p><p><img src="https://img.777nx.cn/test/d6dd5ec65e93439482a7ddd5833ebd9d.jpg" alt="d6dd5ec65e93439482a7ddd5833ebd9d"></p><ol start="2"><li><p>在阿里云域名解析记录里面添加如下记录，其中记录类型对应<code>Type</code>，主机记录对应<code>Name</code>，记录值对应<code>Value</code>，其他的设置默认即可。</p><p><img src="https://img.777nx.cn/test/image-20230318143716719.png" alt="image-20230318143716719"></p></li><li><p>回到Vercel刚刚查看域名的地方，如果操作没问题，应该会显示域名配置成功的提示，此时就可以通过自定义域名来访问我们搭建的网站了。</p><p><img src="https://img.777nx.cn/test/image-20230318143814742.png" alt="image-20230318143814742"></p><p><img src="https://img.777nx.cn/test/image-20230318144509465.png" alt="image-20230318144509465"></p></li><li><p>当你有了新的域名之后，需要<code>[BlogRoot]\_config.yml</code>文件中的<code>url</code>配置项为自己的新域名，这样博客的文章链接才会正确生成。</p><p><img src="https://img.777nx.cn/test/image-20230318144403975.png" alt="image-20230318144403975"></p></li></ol><h2 id="3-安装主题">3. 安装主题</h2><p>本教程用的 🦋 hexo-theme-butterfly 主题 v4.5.1最新版，请放心食用。</p><p>本教程用的是npm方式安装的 <code>hexo-theme-butterfly</code>，后续魔改时更改的文件都是【C:/Hexo-Blog/blog-demo/node_modules/hexo-theme-butterfly】文件夹中的文件。如果你是<code>git clone</code>克隆方式安装的主题，请在【C:/Hexo-Blog/blog-demo/themes/butterfly】文件夹下修改对应的文件。</p><div class="tabs" id="安装主题"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#安装主题-1">npm安装</button></li><li class="tab"><button type="button" data-href="#安装主题-2">GitHub安装(推荐)</button></li><li class="tab"><button type="button" data-href="#安装主题-3">Gitee安装</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="安装主题-1"><p>注意：此方法只支持 Hexo 5.0.0以上版本!</p><p>在你的博客根目录（我这里路径为【C:/Hexo-Blog/blog-demo】）打开Git BASH命令窗口执行npm i hexo-theme-butterfly</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-theme-butterfly</span><br></pre></td></tr></table></figure><p>安装成功后可在【C:/Hexo-Blog/blog-demo/node_modules】文件夹下找到hexo-theme-butterfly文件夹</p><div class="note info modern"><p>升级方法：在博客根目录下，运行 <code>npm update hexo-theme-butterfly</code>。<br>升级前请将<code>hexo-theme-butterfly</code>文件夹备份，npm更新会直接覆盖成新的包。</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="安装主题-2"><p>在你的博客根目录里（我这里路径为【C:/Hexo-Blog/blog-demo】），打开<code>Git BASH</code>工具，执行命令即可。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><p>安装成功后可在【C:/Hexo-Blog/blog-demo/themes】文件夹下找到<code>butterfly</code>文件夹，可以将<code>landscape</code>文件夹删掉。</p><div class="note info modern"><p>升级方法：在主题目录下，运行git pull</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="安装主题-3"><p>在你的博客根目录里（我这里路径为【C:/Hexo-Blog/blog-demo】），打开<code>Git BASH</code>工具，执行命令即可。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone 4.5.0 https://gitee.com/iamjerryw/hexo-theme-butterfly.git themes/butterfly </span><br></pre></td></tr></table></figure><div class="note info modern"><p>升级方法：在主题目录下，运行git pull</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="4-应用主题">4. 应用主题</h2><ol><li>修改站点配置文件<code>_config.yml</code>，把主题改为<code>butterfly</code></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">butterfly</span></span><br></pre></td></tr></table></figure><ol start="2"><li>如果你没有<code>pug</code>以及<code>stylus</code>的渲染器，请下载安装，这两个渲染器是<code>Butterfly</code>生成基础页面所需的依赖包：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><ol start="3"><li>为了减少升级主题后带来的不便，请使用以下方法（建议，可以不做，高度魔改的一般都不会升级主题了，不然魔改的会被覆盖掉）<br>把主题文件夹中的 <code>_config.yml</code> 复制到 Hexo 根目录里（我这里路径为【C:/Hexo-Blog/blog-demo】），同时重新命名为 <code>_config.butterfly.yml</code>。以后只需要在 <code>_config.butterfly.yml</code>进行配置即可生效。Hexo会自动合併主题中的<code>_config.yml</code>和 <code>_config.butterfly.yml</code>里的配置，如果存在同名配置，会使用<code>_config.butterfly.yml</code>的配置，其优先度较高。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将网站/博客打包成桌面APP</title>
      <link href="/posts/4bea1ff9.html"/>
      <url>/posts/4bea1ff9.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-预览">1. 预览</h2><div class="hide-block"><button type="button" class="hide-button" style="">预览效果    </button><div class="hide-content"><p>桌面图标：</p><p><img src="https://img.777nx.cn/test/cc7bacfb1570a8f7936c3b838408c3e.jpg" alt="cc7bacfb1570a8f7936c3b838408c3e"></p></div></div><h2 id="2-应用创建">2. 应用创建</h2><p><a href="https://www.apicloud.com/">点击注册 / 登录</a>，点击右上角进入控制台，点击左上角创建应用</p><p><img src="https://img.777nx.cn/test/202212221321020.webp" alt="202212221321020"></p><p>选择 Web App, 然后点击创建应用</p><p><img src="https://img.777nx.cn/test/202212221322176.webp" alt="202212221322176"></p><p>然后对左侧五个模块进行个性化设置</p><p><img src="https://img.777nx.cn/test/202212221324789.webp" alt="202212221324789"></p><h2 id="3-详细说明">3. 详细说明</h2><p>这里对五个模块进行一下简单的说明吧！</p><h3 id="3-1-端设置">3.1 端设置</h3><p><code>图标</code>上传大小不超过 1M，长宽等比且范围在 50px 至 200px 之间的 png 格式图片；<code>横竖屏设置</code>选择竖屏应用；<code>状态栏</code>个人建议选择显示；<code>启动页</code>上传尺寸为 1080*1920 的图片。</p><h3 id="3-2-证书">3.2 证书</h3><p><code>Android证书</code>选择一键创建证书，iOS 不用管。</p><h3 id="3-3-代码">3.3 代码</h3><p>填入你的网站地址 即：你的博客地址。</p><h3 id="3-4-模块">3.4 模块</h3><p>在模块库中选择 <code>webBrowser</code>, 其他的随意个性化。</p><h3 id="3-5-云编译">3.5 云编译</h3><p><code>应用名称</code>: 己想；<code>应用类别</code>: 其他；<code>平台</code>: 我是 Android 所以选 Android (不要选择 GooglePlay 格式); <code>类型</code>：正式版；<code>调试模式</code>：禁用；<code>全局加密</code>：禁用；<code>渠道打包</code>：禁用；<code>SVN设置</code>: 禁用；版本更具自己的情况来就行了！</p><p>然后点击 <strong>云编译</strong> , 过一会就会生成你的专属 APP，扫码下载即可！👻</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站 </tag>
            
            <tag> APP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VSCode常用的插件</title>
      <link href="/posts/b5e1d8d.html"/>
      <url>/posts/b5e1d8d.html</url>
      
        <content type="html"><![CDATA[<div class="tip home"><p>这篇文章记录的是目前在学前端过程中安装的插件，因此会不断更新</p></div><div class="note info flat"><p>参考：<a href="https://www.bilibili.com/read/cv9698270">第一篇：前端VSCode常用插件-快捷键-以及常用技巧-pink老师</a></p></div><p>vscode之所以被称为宇宙第一神器，其中丰富的插件功不可没，安装起来超级简单，给我们开发带来了极大的便捷。 注意，**新手学习期间，不建议安装形形色色的插件，用到啥就安装啥。**因为有些插件会到vue学习的时候引起冲突，所以这里我就介绍几个常用的插件。</p><ol><li>Chinese (Simplified) 汉化</li><li>Auto Rename Tag</li><li>One Dark Pro  颜色主题</li><li>格式化代码（vscode系统自带）</li><li>open in browser  浏览器预览页面</li><li>Live Server  实时预览（推荐）</li><li>vscode-icons  设置文件图标主题</li><li>Easy LESS  编译less文件</li><li><strong>会了吧</strong>  学习单词插件 （可以使用）</li></ol><h2 id="1-Chinese-Simplified">1. Chinese (Simplified)</h2><p>vscode下载完毕是英文版的，先安装这个插件，改为中文版，所以是我们第一个安装的插件。</p><p><img src="https://img.777nx.cn/test/bf1570da09ae51a078581e1b2924264642aff88d.png@942w_182h_progressive.webp" alt="img"></p><h2 id="2-Auto-Rename-Tag">2. Auto Rename Tag</h2><p>修改开始标签，结束标签跟着自动变化，比较好用。</p><p><img src="https://img.777nx.cn/test/110e9efeecca99aad6876bc8e83da2a5b2245ff9.png@942w_215h_progressive.webp" alt="img"></p><h2 id="3-One-Dark-Pro-颜色主题">3. One Dark Pro  颜色主题</h2><p>我比较喜欢的一个颜色主题</p><p><img src="https://img.777nx.cn/test/cf24793ac2e31d5e9cdf080492143ceed35246e1.png@942w_195h_progressive.webp" alt="img"></p><p>页面的效果：</p><p><img src="https://img.777nx.cn/test/0c0d03f6d85ddef08fa89774d12310c2bc65fd88.png@942w_467h_progressive.webp" alt="img"></p><h2 id="4-格式化代码（vscode系统自带）">4. 格式化代码（vscode系统自带）</h2><p>现在格式化代码的插件非常多，比如Prettier等等。</p><p><strong>刚开始学，不太建议安装插件，先自己手写规范的语法格式</strong></p><p>但是html标签嵌套比较多，可能需要自动格式化比较好，所以我们可以利用vscode自动的功能格式化代码，暂且<strong>不用格式化插件，自动保存照样能格式化代码。</strong></p><p>（1） 点击管理按钮—选择里面的设置命令</p><p><img src="https://img.777nx.cn/test/56d7a914d5cce35e9b4b5c3bbaf8f2969231e4d2.png@942w_660h_progressive.webp" alt="img"></p><p>（2）选择用户 —&gt; 文本编辑器 —&gt; 正在格式化 —&gt; 勾选如下图的2个按钮</p><p><img src="https://img.777nx.cn/test/98b24e9acd4ccda6774763efe1ed1bcac1669d94.png@942w_660h_progressive.webp" alt="img"></p><p>这样，我们不用安装插件，就可以自动保存自动格式化代码了。</p><h2 id="5-open-in-browser-浏览器预览页面">5. open in browser  浏览器预览页面</h2><p>编写完代码，需要浏览器预览，可以安装这个插件</p><p><img src="https://img.777nx.cn/test/17a8e27dcaa6dc39a20d45136e8862bc1e7b6db9.png@942w_206h_progressive.webp" alt="img"></p><p><img src="https://img.777nx.cn/test/9cc36872cff258e589edc90e6683ca055ba1ce9e.png@942w_548h_progressive.webp" alt="img"></p><h2 id="6-Live-Server-实时预览（推荐）">6. Live Server  实时预览（推荐）</h2><p>刚才的插件是可以预览我们的页面，但是改完代码，浏览器必须要重新刷新，比较麻烦，因此推荐各位安装 live server 这个插件，修改完代码，自动更新浏览器，爽歪歪~~~</p><p><img src="https://img.777nx.cn/test/c149cb25a3f2096a5088533fac6f1145043f484d.png@942w_183h_progressive.webp" alt="img"></p><p><strong>小技巧：</strong></p><p>刚开始学习前端，基本页面很少，可以左边编辑器，右边浏览器，这样编写完毕代码，保存完毕后，浏览器自动更新了。</p><p><img src="https://img.777nx.cn/test/12bdbb297a8e5e3af9a79eb197893dd7f9b53e02.png@942w_510h_progressive.webp" alt="img"></p><p><strong>注意点：</strong></p><p>使用live server 各位小伙伴要注意， 先用vscode 打开 文件所在的目录文件夹哦。</p><p><img src="https://img.777nx.cn/test/c9d0f4686a0fdd5cdc90c0330682e21f965c4274.png@942w_533h_progressive.webp" alt="img"></p><h2 id="7-vscode-icons-设置文件图标主题">7. vscode-icons  设置文件图标主题</h2><p>可以很清楚看到文件对用的图标。</p><p><img src="https://img.777nx.cn/test/082202d66f4a816aa0d5c54c07429a044f37ddf9.png@942w_195h_progressive.webp" alt="img"></p><p>只是为了看文件更加直观哈</p><p><img src="https://img.777nx.cn/test/9db5c682ee70e882949c6be33996b569fbcad523.png@942w_414h_progressive.webp" alt="img"></p><h2 id="8-Easy-LESS-编译less文件">8. Easy LESS  编译less文件</h2><p>我们写的less不能直接引入到html文件中， 通过这个插件可以自动帮我们生成 css文件</p><p><img src="https://img.777nx.cn/test/af1827d7d9ebb7daf90b1b24e3aefe3d9bf3aab7.png@942w_198h_progressive.webp" alt="img"></p><h2 id="9-会了吧">9. 会了吧</h2><p>是的，你没看错，这个插件的名字就是 &lt;会了吧&gt;</p><p>你是不是还在为英文单词不认识而发愁，是不是认识不会读而烦心， 这个插件你值得拥有。</p><p><img src="https://img.777nx.cn/test/a38d9d4cbe9156e3c06b899ad283eaf437f04cba.png@942w_171h_progressive.webp" alt="img"></p><p>里面会有单词介绍，点击还会有发音，喜欢吧。</p><p><img src="https://img.777nx.cn/test/f10fa8139a4e1440aa0b027826227af9986b59ca.png@942w_666h_progressive.webp" alt="img"></p><blockquote><p>常用插件介绍到这里，学到vue的肯定就安装vetru、eslint 等插件了</p></blockquote><h2 id="10-Path-Autocomplete-路径提示的插件">10. Path Autocomplete @路径提示的插件</h2><p><img src="https://img.777nx.cn/test/image-20230308172733895.png" alt="image-20230308172733895"></p><p>setting配置文件配置：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导入文件时是否携带文件的扩展名</span></span><br><span class="line"><span class="attr">&quot;path-autocomplete.extensionOnImport&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line"><span class="comment">// 配置 @ 的路径提示</span></span><br><span class="line"><span class="attr">&quot;path-autocomplete.pathMappings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@&quot;</span><span class="punctuation">:</span><span class="string">&quot;$&#123;folder&#125;/src&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="11-Auto-Close-Tag-自动闭合标签的插件">11. Auto Close Tag 自动闭合标签的插件</h2><p><img src="https://img.777nx.cn/test/image-20230308172845215.png" alt="image-20230308172845215"></p><h2 id="12-ESLint">12. ESLint</h2><p><img src="https://img.777nx.cn/test/image-20230308173036443.png" alt="image-20230308173036443"></p><p>setting配置文件：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ESLint 插件的配置</span></span><br><span class="line"><span class="attr">&quot;editor.codeActionsOnSave&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;source.fixAll&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="13-Prettier-Code-formatter">13. Prettier - Code formatter</h2><p><img src="https://img.777nx.cn/test/image-20230308173144160.png" alt="image-20230308173144160"></p><p>setting配置文件：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;prettier.configPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;C:\\Users\\Fantasy\\.prettierrc&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="comment">// 安装Prettier配置</span></span><br><span class="line"><span class="attr">&quot;eslint.alwaysShowStatus&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;prettier.trailingComma&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;prettier.semi&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 每行文字个数超出此限制将会被迫换行</span></span><br><span class="line"><span class="attr">&quot;prettier.printWidth&quot;</span><span class="punctuation">:</span> <span class="number">300</span><span class="punctuation">,</span></span><br><span class="line"><span class="comment">// 使用单引号替换双引号</span></span><br><span class="line"><span class="attr">&quot;prettier.singleQuote&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;prettier.arrowParens&quot;</span><span class="punctuation">:</span> <span class="string">&quot;avoid&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="comment">// 设置 .vue 文件中，HTML代码的格式化插件</span></span><br><span class="line"><span class="attr">&quot;vetur.format.defaultFormatter.html&quot;</span><span class="punctuation">:</span> <span class="string">&quot;js-beautify-html&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;vetur.ignoreProjectWarning&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;vetur.format.defaultFormatterOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;prettier&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;trailingComma&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;singleQuote&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;semi&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;arrowParens&quot;</span><span class="punctuation">:</span> <span class="string">&quot;avoid&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;printWidth&quot;</span><span class="punctuation">:</span> <span class="number">300</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;js-beautify-html&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;wrap_attributes&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>在用户文件下</p><p>创建.prettierrc文件的内容：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;semi&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;singleQuote&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;bracketSpacing&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vscode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Maven仓库</title>
      <link href="/posts/1577112e.html"/>
      <url>/posts/1577112e.html</url>
      
        <content type="html"><![CDATA[<h2 id="本地仓库配置">本地仓库配置</h2><ul><li><p>Maven启动后，会自动保存下载的资源到本地仓库</p><ul><li><p>默认位置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;localRepository&gt;<span class="variable">$&#123;user.home&#125;</span>/.m2/repository&lt;/localRepository&gt;</span><br></pre></td></tr></table></figure><p>当前目录位置为登录用户名所在目录下的.m2文件夹中</p><ul><li><p>自定义位置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>D:\maven\repository<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br></pre></td></tr></table></figure><p>当前目录位置为D:\maven\repository文件夹中</p></li></ul></li></ul></li></ul><h2 id="远程仓库配置">远程仓库配置</h2><ul><li><p>Maven默认连接的仓库位置</p><pre><code>  &lt;repositories&gt;  &lt;repository&gt;  &lt;id&gt;central&lt;/id&gt;  &lt;name&gt;Central Repository&lt;/name&gt;  &lt;url&gt;https://repo.maven.apache.org/maven2&lt;/url&gt;  &lt;layout&gt;default&lt;/layout&gt;  &lt;snapshots&gt;  &lt;enabled&gt;false&lt;/enabled&gt;  &lt;/snapshots&gt;  &lt;/repository&gt;  &lt;/repositories&gt;</code></pre></li></ul><h2 id="镜像仓库配置">镜像仓库配置</h2><ul><li><p>在setting文件中配置阿里云镜像仓库</p><pre><code>  &lt;mirrors&gt;  &lt;!-- 配置具体的仓库的下载镜像 --&gt;  &lt;mirror&gt;  &lt;!-- 此镜像的唯一标识符，用来区分不同的mirror元素 --&gt;  &lt;id&gt;nexus-aliyun&lt;/id&gt;  &lt;!-- 对哪种仓库进行镜像，简单说就是替代哪个仓库 --&gt;  &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;  &lt;!-- 镜像名称 --&gt;  &lt;name&gt;Nexus aliyun&lt;/name&gt;  &lt;!-- 镜像URL --&gt;  &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public&lt;/url&gt;  &lt;/mirror&gt;  &lt;/mirrors&gt;</code></pre></li></ul><h2 id="全局setting与用户setting区别">全局setting与用户setting区别</h2><ul><li>全局setting定义了当前计算机中Maven的公共配置</li><li>用户setting定义了当前用户的配置</li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue2组件之间的数据共享</title>
      <link href="/posts/6eed640.html"/>
      <url>/posts/6eed640.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-组件之间的数据共享">1. 组件之间的数据共享</h2><p>在项目开发中，组件之间的关系分为如下两种：</p><ol><li>父子关系</li><li>兄弟关系</li></ol><h2 id="2-父子组件之间的数据共享">2. 父子组件之间的数据共享</h2><p>父子组件之间的数据共享又分为：</p><ol><li>父 -&gt; 子共享数据</li><li>子 -&gt; 父共享数据</li></ol><h3 id="2-1-父组件向子组件共享数据">2.1 父组件向子组件共享数据</h3><p>父组件向子组件共享数据需要使用<code>自定义属性</code>。示例代码如下：</p><p><img src="https://img.777nx.cn/test/image-20230307165111225.png" alt="image-20230307165111225"></p><h3 id="2-2-子组件向父组件共享数据">2.2 子组件向父组件共享数据</h3><p>子组件向父组件共享数据使用<code>自定义事件</code>。示例代码如下：</p><p><img src="https://img.777nx.cn/test/image-20230307165125231.png" alt="image-20230307165125231"></p><h3 id="2-3-兄弟组件之间的数据共享">2.3 兄弟组件之间的数据共享</h3><p>在 <code>vue2.x</code> 中，兄弟组件之间数据共享的方案是 <code>EventBus</code>。</p><p><img src="https://img.777nx.cn/test/image-20230307165219105.png" alt="image-20230307165219105"></p><p><strong>EventBus 的使用步骤</strong></p><ol><li>创建 <code>eventBus.js</code> 模块，并向外共享一个 <code>Vue 的实例对象</code></li><li>在数据<code>发送方</code>，调用 <code>bus.$emit</code>(‘事件名称’, 要发送的数据) 方法<code>触发自定义事件</code></li><li>在数据<code>接收方</code>，调用 <code>bus.$on</code>(‘事件名称’, 事件处理函数) 方法<code>注册一个自定义事件</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客利用GitHub Action自动化部署</title>
      <link href="/posts/e6384de6.html"/>
      <url>/posts/e6384de6.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、前置知识">一、前置知识</h2><p>CI\CD 即：持续集成（<code>Continuous Integration</code>）、持续交付（<code>Continuous Delivery</code>）、持续部署（<code>Continuous Deployment</code>）。GitHub Actions 是一个持续集成和持续交付 (CI/CD) 平台，可用于自动执行构建、测试和部署管道，换句话说就是通过 Actions 帮助我们去执行 <code>hexo s &amp; hexo g &amp; hexo d</code> 的操作并推到 <code>xxx.github.io</code> 仓库中</p><h2 id="二、参考教程">二、参考教程</h2><div class="tip "><p>以下将使用特定的常量名来指代一些名词。此处建议读者直接使用教程内容的常量名。在最后再逐一搜索替换。这样可以避免对各种常量名的混淆。</p></div><table><thead><tr><th style="text-align:center"><strong>常量</strong></th><th style="text-align:center"><strong>解释</strong></th></tr></thead><tbody><tr><td style="text-align:center">[Blogroot]</td><td style="text-align:center">本地存放博客源码的文件夹路径</td></tr><tr><td style="text-align:center">[SourceRepo]</td><td style="text-align:center">存放博客源码的私有仓库名</td></tr><tr><td style="text-align:center">[SiteBlogRepo]</td><td style="text-align:center">存放编译好的博客页面的公有仓库名</td></tr><tr><td style="text-align:center">[Github Actions 执行自动化部署]</td><td style="text-align:center">执行 hexo clean &amp; hexo g &amp; hexo d</td></tr></tbody></table><ul><li><a href="https://anzhiy.cn/posts/asdx.html">使用 Github Action 自动部署</a></li><li><a href="https://blog.panghai.top/posts/a24c5846/">Github Action 自动部署博客：推送到 Github 公共仓库 + 服务器私有仓库 + 刷新腾讯云 CDN | 心流</a></li><li><a href="https://zhangshier.vip/posts/8779/">Hexo博客利用GitHub Action自动化部署</a></li></ul><h2 id="三、解决方案">三、解决方案</h2><h3 id="申请令牌">申请令牌</h3><p><code>Settings-&gt;Developer-&gt;Personal access tokens-&gt;Generate new token</code></p><p><img src="https://img.777nx.cn/test/hexo%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B201.png" alt="hexo自动化部署01"></p><p>生成的令牌只会显示一次，记住令牌，如果忘记保存就删了重弄</p><p><img src="https://img.777nx.cn/test/hexo%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B202.png" alt="hexo自动化部署02"></p><h3 id="新建仓库并上传">新建仓库并上传</h3><p>新建一个 Github 私有仓库</p><p>在博客根路径下，找到主题文件 <code>[Blogroot]\themes\butterfly</code>，将 <code>.git</code> 移出来</p><p>在博客根路径下的 <code>.gitignore</code> 加入忽略规则</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">.DS_Store</span></span><br><span class="line"><span class="string">Thumbs.db</span></span><br><span class="line"><span class="string">db.json</span></span><br><span class="line"><span class="string">*.log</span></span><br><span class="line"><span class="string">node_modules/</span></span><br><span class="line"><span class="string">public/</span></span><br><span class="line"><span class="string">.deploy*/</span></span><br><span class="line"><span class="string">.vscode/</span></span><br><span class="line"><span class="string">/.idea/</span></span><br><span class="line"><span class="string">.deploy_git*/</span></span><br><span class="line"><span class="string">.idea</span></span><br><span class="line"><span class="string">themes/butterfly/.git</span></span><br></pre></td></tr></table></figure><p>在博客根路径下执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;init&quot;</span></span><br><span class="line">git branch -M main</span><br><span class="line">git remote add origin https://github.com/用户名/私有仓库名.git</span><br><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure><p>之后就可以在仓库中看到博客源码</p><h3 id="配置刷新CDN">配置刷新CDN</h3><blockquote><p>刷新 CDN 通过 Action 一并实现，没有 CDN 此项跳过<br>如果小白没跑通整个 Action 而放弃使用 Action 部署（滴滴小张也可以滴），类似插件推荐：<a href="https://blog.zhheo.com/p/7b964365.html">腾讯云CDN主动刷新插件 张洪 Heo</a></p></blockquote><p>为了保证安全性，使用子用户的 <code>secretId</code>、<code>secretKey</code>，打开<a href="https://console.cloud.tencent.com/cam/user/userType">用户 - 控制台</a>新建用户</p><p><img src="https://img.777nx.cn/test/hexo%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B207.png" alt="hexo自动化部署07"></p><p>依次编辑用户名、访问方式、用户权限</p><p><img src="https://img.777nx.cn/test/hexo%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B208.png" alt="hexo自动化部署08"></p><p><img src="https://img.777nx.cn/test/hexo%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B209.png" alt="hexo自动化部署09"></p><p>在博客根目录下创建 <code>cdn.py</code>，填写 <code>cred</code>、<code>params</code> 变量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> tencentcloud.common <span class="keyword">import</span> credential</span><br><span class="line"><span class="keyword">from</span> tencentcloud.common.profile.client_profile <span class="keyword">import</span> ClientProfile</span><br><span class="line"><span class="keyword">from</span> tencentcloud.common.profile.http_profile <span class="keyword">import</span> HttpProfile</span><br><span class="line"><span class="keyword">from</span> tencentcloud.common.exception.tencent_cloud_sdk_exception <span class="keyword">import</span> TencentCloudSDKException</span><br><span class="line"><span class="keyword">from</span> tencentcloud.cdn.v20180606 <span class="keyword">import</span> cdn_client, models</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># 实例化一个认证对象，入参需要传入腾讯云账户secretId，secretKey,此处还需注意密钥对的保密</span></span><br><span class="line">    <span class="comment"># 密钥可前往https://console.cloud.tencent.com/cam/capi网站进行获取</span></span><br><span class="line">    cred = credential.Credential(<span class="string">&quot;SecretId&quot;</span>, <span class="string">&quot;SecretKey&quot;</span>)</span><br><span class="line">    <span class="comment"># 实例化一个http选项，可选的，没有特殊需求可以跳过</span></span><br><span class="line">    httpProfile = HttpProfile()</span><br><span class="line">    httpProfile.endpoint = <span class="string">&quot;cdn.tencentcloudapi.com&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 实例化一个client选项，可选的，没有特殊需求可以跳过</span></span><br><span class="line">    clientProfile = ClientProfile()</span><br><span class="line">    clientProfile.httpProfile = httpProfile</span><br><span class="line">    <span class="comment"># 实例化要请求产品的client对象,clientProfile是可选的</span></span><br><span class="line">    client = cdn_client.CdnClient(cred, <span class="string">&quot;&quot;</span>, clientProfile)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 实例化一个请求对象,每个接口都会对应一个request对象</span></span><br><span class="line">    req = models.PurgePathCacheRequest()</span><br><span class="line">    params = &#123;</span><br><span class="line">        <span class="string">&quot;Paths&quot;</span>: [ <span class="string">&quot;https://www.777nx.cn&quot;</span> ],</span><br><span class="line">        <span class="string">&quot;FlushType&quot;</span>: <span class="string">&quot;delete&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    req.from_json_string(json.dumps(params))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 返回的resp是一个PurgePathCacheResponse的实例，与请求对象对应</span></span><br><span class="line">    resp = client.PurgePathCache(req)</span><br><span class="line">    <span class="comment"># 输出json格式的字符串回包</span></span><br><span class="line">    <span class="built_in">print</span>(resp.to_json_string())</span><br><span class="line"></span><br><span class="line"><span class="keyword">except</span> TencentCloudSDKException <span class="keyword">as</span> err:</span><br><span class="line">    <span class="built_in">print</span>(err)</span><br></pre></td></tr></table></figure><h3 id="配置GitHub-Action">配置GitHub Action</h3><p>新建 <code>[Blogroot]\.github\workflows\autodeploy.yml</code></p><ul><li><p>第六步 <code>hexo algolia</code> 为 <code>algolia</code> 搜索，<code>gulp</code> 为文件压缩任务，按需删除（教程记录在博客搭建博文）</p></li><li><p>第七步 clean-exclude 变量为 <a href="https://github.com/Lete114/Hexo-SEO-AutoPush">Hexo-SEO-AutoPush SEO</a> 自动提交插件的配置，按需删除（教程记录在博客搭建博文，原则上可以一起写到此工作流里通过 curl 请求提交，但是这个插件是真的好用！）</p></li><li><p>第九步刷新腾讯云 CDN 资源，按需删除</p></li><li><p>第十步备份源码至 Gitee，按需删除</p></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Deploy</span> <span class="comment"># 部署</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span> <span class="comment"># 触发条件</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">main</span> <span class="comment"># 推送到 main 分支（这里的分支名很重要，不要弄错了</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">workflow_dispatch:</span> <span class="comment"># 手动触发</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="number">1</span><span class="string">.</span> <span class="string">检出仓库</span> <span class="comment"># Checkout</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">ref:</span> <span class="string">main</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="number">2</span><span class="string">.</span> <span class="string">安装</span> <span class="string">Node.js</span> <span class="comment"># Setup Node</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v3</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">&quot;16.x&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="number">3</span><span class="string">.</span> <span class="string">安装</span> <span class="string">Hexo</span> <span class="comment"># Install Hexo</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          npm install hexo-cli -g</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="number">4</span><span class="string">.</span> <span class="string">缓存</span> <span class="string">Node</span> <span class="string">插件</span> <span class="comment"># Cache Modules</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/cache@v1</span></span><br><span class="line">        <span class="attr">id:</span> <span class="string">cache-modules</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">node_modules</span></span><br><span class="line">          <span class="attr">key:</span> <span class="string">$&#123;&#123;runner.OS&#125;&#125;-$&#123;&#123;hashFiles(&#x27;**/package-lock.json&#x27;)&#125;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#      - name: 安装主题</span></span><br><span class="line"><span class="comment">#        run: |</span></span><br><span class="line"><span class="comment">#          git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span></span><br><span class="line"><span class="comment">#          npm install hexo-renderer-pug hexo-renderer-stylus --save</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="number">5</span><span class="string">.</span> <span class="string">安装依赖</span> <span class="comment"># Install Dependencies 如果没有缓存或 插件有更新，则安装插件</span></span><br><span class="line">        <span class="attr">if:</span> <span class="string">steps.cache-modules.outputs.cache-hit</span> <span class="type">!=</span> <span class="string">&#x27;true&#x27;</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span> <span class="comment"># **如果仓库里没有 package-lock.json，上传一下，npm ci 必须要有 package-lock.json**</span></span><br><span class="line">          <span class="string">npm</span> <span class="string">ci</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="number">6</span><span class="string">.</span> <span class="string">生成静态文件</span> <span class="comment"># Generate，其中hexo algolia为algolia搜索，hexo gulp为全站压缩，如果没安装则按需删除</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          hexo clean</span></span><br><span class="line"><span class="string">          hexo generate</span></span><br><span class="line"><span class="string">          hexo algolia</span></span><br><span class="line"><span class="string">          gulp</span></span><br><span class="line"><span class="string">          export TZ=&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="number">7</span><span class="string">.</span> <span class="string">部署到</span> <span class="string">github</span> <span class="string">page</span> <span class="comment"># Deploy：github.io仓库中保存每次提交日志 其中clean-exclude为hexo-seo-autopush插件配置，如果没安装则按需删除</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">JamesIves/github-pages-deploy-action@v4</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">token:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.GITHUBTOKEN</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">repository-name:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.GITHUBUSERNAME</span> <span class="string">&#125;&#125;/$&#123;&#123;</span> <span class="string">secrets.GITHUBUSERNAME</span> <span class="string">&#125;&#125;.github.io</span></span><br><span class="line">          <span class="attr">branch:</span> <span class="string">main</span></span><br><span class="line">          <span class="attr">folder:</span> <span class="string">public</span></span><br><span class="line">          <span class="attr">clean-exclude:</span> <span class="string">|</span></span><br><span class="line"><span class="string">            public/.github/</span></span><br><span class="line"><span class="string"></span>          <span class="attr">commit-message:</span> <span class="string">&quot;$<span class="template-variable">&#123;&#123; github.event.head_commit.message &#125;&#125;</span> Updated By Github Actions&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#      - name: 7. 部署到 github page # Deploy：github.io仓库中日志只保留最新</span></span><br><span class="line"><span class="comment">#        run: |</span></span><br><span class="line"><span class="comment">#          cd ./public</span></span><br><span class="line"><span class="comment">#          git init</span></span><br><span class="line"><span class="comment">#          git config --global user.name &#x27;$&#123;&#123; secrets.GITHUBUSERNAME &#125;&#125;&#x27;</span></span><br><span class="line"><span class="comment">#          git config --global user.email &#x27;$&#123;&#123; secrets.GITHUBEMAIL &#125;&#125;&#x27;</span></span><br><span class="line"><span class="comment">#          git add .</span></span><br><span class="line"><span class="comment">#          git commit -m &quot;$&#123;&#123; github.event.head_commit.message &#125;&#125; $(date +&quot;%Z %Y-%m-%d %A %H:%M:%S&quot;) Updated By Github Actions&quot;</span></span><br><span class="line"><span class="comment">#          git push --force --quiet &quot;https://$&#123;&#123; secrets.GITHUBUSERNAME &#125;&#125;:$&#123;&#123; secrets.GITHUBTOKEN &#125;&#125;@github.com/$&#123;&#123; secrets.GITHUBUSERNAME &#125;&#125;/$&#123;&#123; secrets.GITHUBUSERNAME &#125;&#125;.github.io.git&quot; master:main</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="number">8</span><span class="string">.</span> <span class="string">推送到服务器私有仓库</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">easingthemes/ssh-deploy@main</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="attr">SSH_PRIVATE_KEY:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.SERVER_PRIVATE_KEY</span> <span class="string">&#125;&#125;</span> <span class="comment"># 服务器生成的私钥，例如 -----BEGIN RSA PRIVATE KEY-----xxxx-----END RSA PRIVATE KEY-----</span></span><br><span class="line">          <span class="attr">ARGS:</span> <span class="string">&quot;-avz --delete&quot;</span> <span class="comment"># rsync参数</span></span><br><span class="line">          <span class="attr">SOURCE:</span> <span class="string">&quot;public/&quot;</span></span><br><span class="line">          <span class="attr">REMOTE_HOST:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.SERVER_HOST</span> <span class="string">&#125;&#125;</span> <span class="comment"># 服务器ip地址，例如 1.2.3.4</span></span><br><span class="line">          <span class="attr">REMOTE_USER:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.SERVER_USER</span> <span class="string">&#125;&#125;</span> <span class="comment"># 登录用户，例如 ubuntu 注意应拥有该文件夹的权限，可以在root下为用户赋权 chown -R ubuntu:755 /www/wwwroot/hexo</span></span><br><span class="line">          <span class="attr">TARGET:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.SERVER_PATH</span> <span class="string">&#125;&#125;</span>    <span class="comment"># 服务器目录，例如 /www/wwwroot/hexo</span></span><br><span class="line">          <span class="attr">EXCLUDE:</span> <span class="string">&quot;.git/,.user.ini&quot;</span>            <span class="comment"># 排除源路径中.git/ 目标路径中.user.ini 这俩不做同步操作</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="number">9</span><span class="string">.</span> <span class="string">刷新CDN</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          pip install --upgrade pip</span></span><br><span class="line"><span class="string">          pip install tencentcloud-sdk-python</span></span><br><span class="line"><span class="string">          pip install tencentcloud-sdk-python-cdn</span></span><br><span class="line"><span class="string">          python3 cdn.py</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="number">10</span><span class="string">.</span> <span class="string">备份Gitee</span>  <span class="comment"># Sync to Gitee</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">wearerequired/git-mirror-action@master</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="comment"># 注意在 Settings-&gt;Secrets 配置 GITEE_RSA_PRIVATE_KEY</span></span><br><span class="line">          <span class="attr">SSH_PRIVATE_KEY:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.GITEE_RSA_PRIVATE_KEY</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="comment"># 注意替换为你的 GitHub 源仓库地址</span></span><br><span class="line">          <span class="attr">source-repo:</span> <span class="string">git@github.com:GC-ZF/Blog-Backups.git</span></span><br><span class="line">          <span class="comment"># 注意替换为你的 Gitee 目标仓库地址</span></span><br><span class="line">          <span class="attr">destination-repo:</span> <span class="string">git@gitee.com:gc-zhang/blog-backups.git</span></span><br></pre></td></tr></table></figure><h3 id="配置Secrets">配置Secrets</h3><p>服务器上执行：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ssh</span>-keygen -t rsa -b <span class="number">2048</span></span><br></pre></td></tr></table></figure><p>则按提示按完回车后</p><p>如果是 root 用户执行该命令，则：</p><p>将 <code>/root/.ssh/id_rsa.pub</code> 的内容复制到 <code>/root/.ssh/authorized_keys</code> 中</p><p>服务器私钥则在 <code>/root/.ssh/id_rsa</code>，将 <code>/root/.ssh/id_rsa</code> 内容复制到仓库的 <code>secrets</code> 环境变量 <code>SERVER_ACCESS_TOKEN</code> 中即可</p><p>如果是其他用户执行该命令（例如 <code>git</code> 用户）则：</p><p>将 <code>/home/git/.ssh/id_rsa.pub</code> 的内容复制到 <code>/home/git/.ssh/authorized_keys</code> 中</p><p>服务器私钥则在 <code>/home/git/.ssh/id_rsa</code>，将 <code>/home/git/.ssh/id_rsa</code> 内容复制到仓库的 <code>secrets</code> 环境变量 <code>SERVER_ACCESS_TOKEN</code> 中即可</p><p><img src="https://img.777nx.cn/test/63685dd7f2828.png" alt="添加secrets"></p><p>在博客根路径执行</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">git</span> <span class="string">add</span> <span class="string">.</span></span><br><span class="line"><span class="string">git</span> <span class="string">commit</span> <span class="string">-m</span> <span class="string">&quot;add actions&quot;</span></span><br><span class="line"><span class="string">git</span> <span class="string">push</span></span><br></pre></td></tr></table></figure><p>嫌麻烦可制作 bat 脚本，在博客根目录下新建 <code>push.bat</code>，复制以下内容即可：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">git add .</span><br><span class="line">git commit <span class="literal">-m</span> <span class="string">&quot;推送私有仓库&quot;</span></span><br><span class="line">git push origin master</span><br><span class="line">pause</span><br></pre></td></tr></table></figure><p>使用时双击脚本即可自动执行命令。</p><p>查看 Action 执行情况：</p><p><img src="https://img.777nx.cn/test/6368930ba0d89.png" alt="Action详情"></p><p>静待片刻，即可看到文章已部署在博客。</p><h2 id="四、总结">四、总结</h2><p>彩蛋？这样自动化部署的目的还有一个优点，你可以直接在 <code>[SourceRepo]</code> 即 Github 博客源码仓库中直接修改文章提交后自动触发 <strong>Github Ations 执行自动化部署</strong>到 <code>[GithubBlogRepo]</code>、<code>GiteeBlogRepo</code>、<code>[服务器站点]</code>，有点 typecho 那感觉了吧嘿嘿，之后本地同步通过在博客路径下 <code>git pull</code> 同步仓库源码，是不是很方便！</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue.js调试神器vue-devtools的安装</title>
      <link href="/posts/d5d70e72.html"/>
      <url>/posts/d5d70e72.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、前言">一、前言</h2><p>在使用 Vue 时，官方推荐我们在浏览器上安装 Vue Devtools。它允许我们在一个更友好的界面中审查和调试 Vue 应用。</p><p><img src="https://img.777nx.cn/test/image-20230302174613276.png" alt="image-20230302174613276"></p><h2 id="二、教程">二、教程</h2><h3 id="下载">下载</h3><ul><li>vue.js插件下载：<a href="https://777nx.lanzoue.com/ib5lm0p1nn0d">https://777nx.lanzoue.com/ib5lm0p1nn0d</a></li></ul><h3 id="安装">安装</h3><ol><li><p>下载Vue.js devtools的crx文件后，打开Chrome的扩展页面（ <code>chrome://extensions/</code> 或按Chrome菜单图标&gt;更多工具&gt;扩展程序），然后拖放 crx文件到扩展页面安装它</p></li><li><p>点击“添加拓展程序”完成安装</p></li></ol><p><img src="https://img.777nx.cn/test/image-20230302180452899.png" alt="image-20230302180452899"></p><ol start="3"><li>完成安装点击详情，将允许访问文件网址打开</li></ol><p><img src="https://img.777nx.cn/test/image-20230302180656415.png" alt="image-20230302180656415"></p><p><img src="https://img.777nx.cn/test/image-20230302180725782.png" alt="image-20230302180725782"></p><h3 id="使用">使用</h3><p>安装完成之后运行你的vue开发项目，F12就可以看到这个vue-devtools插件了，可以快速调试了</p><p><img src="https://img.777nx.cn/test/image-20230302181129729.png" alt="image-20230302181129729"></p><h2 id="三、最后">三、最后</h2><p>日日夜夜的劳作只为你可以更快乐</p><p>嘛咪嘛咪哄~bug通通不见了!</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue2笔记</title>
      <link href="/posts/9ae38eea.html"/>
      <url>/posts/9ae38eea.html</url>
      
        <content type="html"><![CDATA[<div class="note success flat"><p>笔记来自于黑马程序员课程</p></div><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.bilibili.com/video/BV1zq4y1p7ga/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.bilibili.com/video/BV1zq4y1p7ga/.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">黑马程序员Vue全套视频教程</div>            <div class="tag-link-sitename">从vue2.0到vue3.0一套全覆盖，前端学习核心框架教程</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h2 id="推荐安装的-VScode-中的-Vue-插件">推荐安装的 VScode 中的 Vue 插件</h2><ol><li>Vue 3 Snippets：<a href="https://marketplace.visualstudio.com/items?itemName=hollowtree.vue-snippets">https://marketplace.visualstudio.com/items?itemName=hollowtree.vue-snippets</a></li><li>Vetur：<a href="https://marketplace.visualstudio.com/items?itemName=octref.vetur">https://marketplace.visualstudio.com/items?itemName=octref.vetur</a></li></ol><h2 id="什么是-vue">什么是 vue</h2><ol><li>构建用户界面<ul><li>用 vue 往 html 页面中填充数据，非常的方便</li></ul></li><li>框架<ul><li>框架是一套现成的解决方案，程序员只能遵守框架的规范，去编写自己的业务功能！</li><li>要学习 vue，就是在学习 vue 框架中规定的用法！</li><li>vue 的指令、组件（是对 UI 结构的复用）、路由、Vuex、vue 组件库</li><li>只有把上面老师罗列的内容掌握以后，才有开发 vue 项目的能力！</li></ul></li></ol><h2 id="vue-的两个特性">vue 的两个特性</h2><ol><li><p>数据驱动视图：</p><ul><li>数据的变化<strong>会驱动视图</strong>自动更新</li><li>好处：程序员只管把数据维护好，那么页面结构会被 vue 自动渲染出来！</li></ul></li><li><p>双向数据绑定：</p><blockquote><p>在网页中，form 表单负责<strong>采集数据</strong>，Ajax 负责<strong>提交数据</strong>。</p></blockquote><ul><li>js 数据的变化，会被自动渲染到页面上</li><li>页面上表单采集的数据发生变化的时候，会被 vue 自动获取到，并更新到 js 数据中</li></ul></li></ol><blockquote><p>注意：数据驱动视图和双向数据绑定的底层原理是 MVVM（Mode 数据源、View 视图、ViewModel 就是 vue 的实例）</p></blockquote><h2 id="vue-指令">vue 指令</h2><h3 id="1-内容渲染指令">1. 内容渲染指令</h3><ol><li><code>v-text</code> 指令的缺点：会覆盖元素内部原有的内容！</li><li><code>&#123;&#123; &#125;&#125;</code> 插值表达式：在实际开发中用的最多，只是内容的占位符，不会覆盖原有的内容！</li><li><code>v-html</code> 指令的作用：可以把带有标签的字符串，渲染成真正的 HTML 内容！</li></ol><h3 id="2-属性绑定指令">2. 属性绑定指令</h3><blockquote><p>注意：插值表达式只能用在元素的<strong>内容节点</strong>中，不能用在元素的<strong>属性节点</strong>中！</p></blockquote><ul><li><p>在 vue 中，可以使用 <code>v-bind:</code> 指令，为元素的属性动态绑定值；</p></li><li><p>简写是英文的 <code>:</code></p></li><li><p>在使用 v-bind 属性绑定期间，如果绑定内容需要进行动态拼接，则字符串的外面应该包裹单引号，例如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">:title</span>=<span class="string">&quot;&#x27;box&#x27; + index&quot;</span>&gt;</span>这是一个 div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="3-事件绑定">3. 事件绑定</h3><ol><li><p><code>v-on:</code> 简写是 <code>@</code></p></li><li><p>语法格式为：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;add&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">methods: &#123;</span><br><span class="line">   add() &#123;</span><br><span class="line">// 如果在方法中要修改 data 中的数据，可以通过 this 访问到</span><br><span class="line">this.count += 1</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>$event</code> 的应用场景：如果默认的事件对象 e 被覆盖了，则可以手动传递一个  $event。例如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;add(3, $event)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">methods: &#123;</span><br><span class="line">   add(n, e) &#123;</span><br><span class="line">// 如果在方法中要修改 data 中的数据，可以通过 this 访问到</span><br><span class="line">this.count += 1</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>事件修饰符：</p><ul><li><p><code>.prevent</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> @<span class="attr">click.prevent</span>=<span class="string">&quot;xxx&quot;</span>&gt;</span>链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>.stop</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.stop</span>=<span class="string">&quot;xxx&quot;</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ol><h3 id="4-v-model-指令">4. v-model 指令</h3><ol><li>input 输入框<ul><li>type=“radio”</li><li>type=“checkbox”</li><li>type=“xxxx”</li></ul></li><li>textarea</li><li>select</li></ol><h3 id="5-条件渲染指令">5. 条件渲染指令</h3><ol><li><code>v-show</code> 的原理是：动态为元素添加或移除 <code>display: none</code> 样式，来实现元素的显示和隐藏<ul><li>如果要频繁的切换元素的显示状态，用 v-show 性能会更好</li></ul></li><li><code>v-if</code> 的原理是：每次动态创建或移除元素，实现元素的显示和隐藏<ul><li>如果刚进入页面的时候，某些元素默认不需要被展示，而且后期这个元素很可能也不需要被展示出来，此时 v-if 性能更好</li></ul></li></ol><blockquote><p>在实际开发中，绝大多数情况，不用考虑性能问题，直接使用 v-if 就好了！！！</p></blockquote><p>v-if 指令在使用的时候，有两种方式：</p><ol><li><p>直接给定一个布尔值 true 或 false</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">&quot;true&quot;</span>&gt;</span>被 v-if 控制的元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>给 v-if 提供一个判断条件，根据判断的结果是 true 或 false，来控制元素的显示和隐藏</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">&quot;type === &#x27;A&#x27;&quot;</span>&gt;</span>良好<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="过滤器">过滤器</h2><h3 id="过滤器的注意点">过滤器的注意点</h3><ol><li>要定义到 filters 节点下，<strong>本质是一个函数</strong></li><li>在过滤器函数中，<strong>一定要有 return 值</strong></li><li>在过滤器的形参中，可以获取到“管道符”前面待处理的那个值</li><li>如果全局过滤器和私有过滤器名字一致，此时按照“<strong>就近原则</strong>”，调用的是”私有过滤器“</li></ol><h2 id="watch-侦听器">watch 侦听器</h2><h3 id="侦听器的格式">侦听器的格式</h3><ol><li>方法格式的侦听器<ul><li>缺点1：无法在刚进入页面的时候，自动触发！！！</li><li>缺点2：如果侦听的是一个对象，如果对象中的属性发生了变化，不会触发侦听器！！！</li></ul></li><li>对象格式的侦听器<ul><li>好处1：可以通过 <strong>immediate</strong> 选项，让侦听器自动触发！！！</li><li>好处2：可以通过 <strong>deep</strong> 选项，让侦听器深度监听对象中每个属性的变化！！！</li></ul></li></ol><h2 id="计算属性">计算属性</h2><p>特点：</p><ol><li>定义的时候，要被定义为“方法”</li><li>在使用计算属性的时候，当普通的属性使用即可</li></ol><p>好处：</p><ol><li>实现了代码的复用</li><li>只要计算属性中依赖的数据源变化了，则计算属性会自动重新求值！</li></ol><h2 id="axios">axios</h2><blockquote><p>axios 是一个专注于网络请求的库！</p></blockquote><h3 id="axios-的基本使用">axios 的基本使用</h3><ol><li><p>发起 GET 请求：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">axios</span>(&#123;</span><br><span class="line">  <span class="comment">// 请求方式</span></span><br><span class="line">  <span class="attr">method</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">  <span class="comment">// 请求的地址</span></span><br><span class="line">  <span class="attr">url</span>: <span class="string">&#x27;http://www.liulongbin.top:3006/api/getbooks&#x27;</span>,</span><br><span class="line">  <span class="comment">// URL 中的查询参数</span></span><br><span class="line">  <span class="attr">params</span>: &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">1</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">result</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>发起 POST 请求：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#btnPost&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">async</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 如果调用某个方法的返回值是 Promise 实例，则前面可以添加 await！</span></span><br><span class="line">  <span class="comment">// await 只能用在被 async “修饰”的方法中</span></span><br><span class="line">  <span class="keyword">const</span> &#123; <span class="attr">data</span>: res &#125; = <span class="keyword">await</span> <span class="title function_">axios</span>(&#123;</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>, </span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;http://www.liulongbin.top:3006/api/post&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;zs&#x27;</span>,</span><br><span class="line">      <span class="attr">age</span>: <span class="number">20</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ol><h2 id="vue-cli-的使用">vue-cli 的使用</h2><ol><li><p>在终端下运行如下的命令，创建指定名称的项目：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue cerate 项目的名称</span><br></pre></td></tr></table></figure></li><li><p>vue 项目中 src 目录的构成：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">assets 文件夹：存放项目中用到的静态资源文件，例如：css 样式表、图片资源</span><br><span class="line">components 文件夹：程序员封装的、可复用的组件，都要放到 components 目录下</span><br><span class="line"><span class="selector-tag">main</span><span class="selector-class">.js</span> 是项目的入口文件。整个项目的运行，要先执行 <span class="selector-tag">main</span><span class="selector-class">.js</span></span><br><span class="line">App<span class="selector-class">.vue</span> 是项目的根组件。</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web应用软件开发环境</title>
      <link href="/posts/2829120c.html"/>
      <url>/posts/2829120c.html</url>
      
        <content type="html"><![CDATA[<div class="tip home"><p>大都是next下一步就装好了，有些比较麻烦的里面有教程。前端环境基本都是script标签引入</p></div><h2 id="1-IDE-开发和调试工具">1. IDE 开发和调试工具</h2><h3 id="Hbuilder-X">Hbuilder X</h3><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.dcloud.io/hbuilderx.html">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.dcloud.io/hbuilderx.html.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Hbuilder X</div>            <div class="tag-link-sitename">高效极客技巧</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="Visual-Studio-Code">Visual Studio Code</h3><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://code.visualstudio.com/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/code.visualstudio.com/.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">vscode</div>            <div class="tag-link-sitename">Visual Studio Code</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="Redis-3-0">Redis 3.0</h3><div class="tip cogs"><p>安装 Redis 之前，请先安装 JDK8</p></div><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://codeload.github.com/redis/redis/tar.gz/refs/tags/3.0.0">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/codeload.github.com/redis/redis/tar.gz/refs/tags/3.0.0.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Redis</div>            <div class="tag-link-sitename">一个高性能的 Key-value 数据库</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><p>参考教程：</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.runoob.com/redis/redis-install.html">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.runoob.com/redis/redis-install.html.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Redis 安装</div>            <div class="tag-link-sitename">一个高性能的 Key-value 数据库</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="IntelliJ-IDEA-2020-及以上">IntelliJ IDEA 2020 及以上</h3><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.jetbrains.com/idea/download/#section=windows">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.jetbrains.com/idea/download/#section=windows.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">IntelliJ IDEA</div>            <div class="tag-link-sitename">the Leading Java and Kotlin IDE</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><p>参考教程：</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.777nx.cn/posts/e7bf99e2.html">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.777nx.cn/posts/e7bf99e2.html.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">JDK、IDEA等安装详解</div>            <div class="tag-link-sitename"> JDK、IDEA等安装详解</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="PostMan">PostMan</h3><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.postman.com/downloads/?utm_source=postman-home">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.postman.com/downloads/?utm_source=postman-home.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">postman</div>            <div class="tag-link-sitename">Postman API</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h2 id="2-浏览器">2. 浏览器</h2><h3 id="火狐浏览器">火狐浏览器</h3><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="http://www.firefox.com.cn/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.firefox.com.cn/.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Firefox</div>            <div class="tag-link-sitename">火狐浏览器</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="谷歌浏览器">谷歌浏览器</h3><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.google.cn/intl/zh-CN/chrome/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.google.cn/intl/zh-CN/chrome/.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Chrome</div>            <div class="tag-link-sitename">谷歌浏览器</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h2 id="3-前端环境">3. 前端环境</h2><h3 id="Vue">Vue</h3><p>参考教程：</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.runoob.com/vue2/vue-install.html">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.runoob.com/vue2/vue-install.html.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Vue.js 安装</div>            <div class="tag-link-sitename">Vue.js 安装</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.runoob.com/vue3/vue3-install.html">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.runoob.com/vue3/vue3-install.html.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Vue3 安装</div>            <div class="tag-link-sitename">Vue3 安装</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="Axios">Axios</h3><p>参考教程：</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.runoob.com/vue2/vuejs-ajax-axios.html">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.runoob.com/vue2/vuejs-ajax-axios.html.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Vue.js Ajax(axios)</div>            <div class="tag-link-sitename">Vue.js Ajax(axios)</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.runoob.com/vue2/vuejs-ajax-axios.html">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.runoob.com/vue2/vuejs-ajax-axios.html.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Vue3 Ajax(axios)</div>            <div class="tag-link-sitename">Vue3 Ajax(axios)</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="npm">npm</h3><div class="tip cogs"><p>npm 是 Node.js 内置模块</p></div><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://nodejs.org/zh-cn/download/releases/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/nodejs.org/zh-cn/download/releases/.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Node.js</div>            <div class="tag-link-sitename">Node.js</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><ul><li><p>npm 切换镜像站点</p><ol><li>方法一</li></ol><p>更改npm配置文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry URL</span><br></pre></td></tr></table></figure><p>URL 即为需要设置的镜像站点地址，如淘宝镜像: <strong><a href="https://registry.npmmirror.com">https://registry.npmmirror.com</a></strong></p><ol start="2"><li>方法二</li></ol><p>安装nrm 管理，安装这个的前提是能确定链接到现在的镜像地址：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g nrm</span><br></pre></td></tr></table></figure><p>待安装完nrm 之后，通过nrm 管理镜像的地址，一条命令切换，如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nrm use taobao</span><br></pre></td></tr></table></figure><p>nrm 除了淘宝站点镜像之外还有其他的，可以使用一下命令查看：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nrm <span class="built_in">ls</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="webpack">webpack</h3><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://github.com/webpack/webpack">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/github.com/webpack/webpack.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">webpack</div>            <div class="tag-link-sitename">webpack</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev webpack</span><br></pre></td></tr></table></figure><h2 id="4-Java环境">4. Java环境</h2><h3 id="Tomcat-V8-0-及以上">Tomcat V8.0 及以上</h3><p>官网下载</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://tomcat.apache.org/download-80.cgi">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/tomcat.apache.org/download-80.cgi.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Apache Tomcat</div>            <div class="tag-link-sitename">Apache Tomcat</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><p>参考教程</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.777nx.cn/posts/95ecbeba.html#1-2-1-%E4%B8%8B%E8%BD%BD">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.777nx.cn/posts/95ecbeba.html#1-2-1-%E4%B8%8B%E8%BD%BD.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Tomcat</div>            <div class="tag-link-sitename">Tomcat</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="Java-V1-8-0">Java V1.8.0</h3><p>官方下载页面（需注册登陆）</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.oracle.com/cn/java/technologies/downloads/#java8-windows">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.oracle.com/cn/java/technologies/downloads/#java8-windows.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Java</div>            <div class="tag-link-sitename">Java</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><p>423down下载</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://423down.lanzouo.com/b0f2gmp3e">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/423down.lanzouo.com/b0f2gmp3e.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">JavaSE</div>            <div class="tag-link-sitename">JavaSE</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><p>参考教程：</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.777nx.cn/posts/e7bf99e2.html">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.777nx.cn/posts/e7bf99e2.html.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">JDK、IDEA等安装详解</div>            <div class="tag-link-sitename"> JDK、IDEA等安装详解</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h2 id="5-数据库环境">5. 数据库环境</h2><h3 id="Navicat">Navicat</h3><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.navicat.com/en/download/navicat-premium">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.navicat.com/en/download/navicat-premium.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Navicat</div>            <div class="tag-link-sitename">Navicat</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="MySQL-5-7">MySQL 5.7</h3><p>参考教程：</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.777nx.cn/posts/2b8bb09d.html">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.777nx.cn/posts/2b8bb09d.html.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">MySQL安装文档</div>            <div class="tag-link-sitename">MySQL安装文档</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h2 id="6-其他">6. 其他</h2><h3 id="Microsoft-Visio-2013-及以上">Microsoft Visio 2013 及以上</h3><div class="tip cogs"><p>Visio虽然是Microsoft Office软件的一个部分。但通常以单独形式出售，并不捆绑于Microsoft Office套装中。</p></div><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.microsoft.com/zh-cn/microsoft-365/visio/flowchart">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.microsoft.com/zh-cn/microsoft-365/visio/flowchart.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Microsoft Visio</div>            <div class="tag-link-sitename">流程图软件、流程图制作工具</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="Microsoft-Office-2010-及以上">Microsoft Office 2010 及以上</h3><p>电脑一般自带正版office，激活即可</p><h3 id="福昕-PDF-阅读器">福昕 PDF 阅读器</h3><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.foxitsoftware.cn/pdf-reader/?agent=zhihuKOL&MD=saixs=2">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.foxitsoftware.cn/pdf-reader/?agent=zhihuKOL&MD=saixs=2.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">福昕PDF阅读器</div>            <div class="tag-link-sitename">5.6亿用户</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.foxitsoftware.cn/pdf-reader-plus/?agent=zhihuKOL&MD=saixs=2">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.foxitsoftware.cn/pdf-reader-plus/?agent=zhihuKOL&MD=saixs=2.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">福昕PDF阅读器专业版下载</div>            <div class="tag-link-sitename">新功能体验</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="Adobe-XD-43-0-12-SP-20210824">Adobe_XD_43.0.12_SP_20210824</h3><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://pan.baidu.com/s/1Z4_iJNcq7koRt3vN7KxB3w?pwd=6g8x#list/path=%2F70%2F2021%20Win%20x64%20SP%E7%89%88">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/pan.baidu.com/s/1Z4_iJNcq7koRt3vN7KxB3w?pwd=6g8x#list/path=%2F70%2F2021%20Win%20x64%20SP%E7%89%88.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Adobe_XD</div>            <div class="tag-link-sitename">Adobe_XD</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>万物互联第一步，点灯改变生活</title>
      <link href="/posts/1f34010f.html"/>
      <url>/posts/1f34010f.html</url>
      
        <content type="html"><![CDATA[<div class="tip "><p>本人第一次整这个玩意</p></div><h2 id="一、前言">一、前言</h2><p>科技改变生活，宿舍谁去关灯是个问题</p><div align=center class="aspect-ratio">    <iframe src="////player.bilibili.com/player.html?aid=266671916&bvid=BV1MY411i7J7&cid=1003889783&page=1"     scrolling="no"     border="0"     frameborder="no"     framespacing="0"     high_quality=1    danmaku=1     allowfullscreen="true">     </iframe></div><h2 id="二、采购清单">二、采购清单</h2><h3 id="1-esp8266模块">1. esp8266模块</h3><p><img src="https://img.777nx.cn/test/ch340.webp" alt="img"></p><blockquote><p>如果你没有microUSB数据线最好买一根</p></blockquote><h3 id="2-sg90舵机">2. sg90舵机</h3><p><img src="https://img.777nx.cn/test/sg90.webp" alt="sg90舵机"></p><h2 id="三、连接舵机和开发板">三、连接舵机和开发板</h2><h3 id="1-找到黄线，使用小刀等工具把头上的黑片翘起来，然后拉出黄线。">1. 找到黄线，使用小刀等工具把头上的黑片翘起来，然后拉出黄线。</h3><p><img src="https://img.777nx.cn/test/leonus_2023-01-03_21-41-45.webp" alt="img"></p><p><img src="https://img.777nx.cn/test/leonus_2023-01-03_21-42-34.webp" alt="img"></p><h3 id="2-将棕（褐）色和红色线分别插到G和V-V上。将黄线插到D2上。">2. 将棕（褐）色和红色线分别插到G和V V上。将黄线插到D2上。</h3><p><img src="https://img.777nx.cn/test/leonus_2023-01-03_21-48-42.webp" alt="img"></p><p><img src="https://img.777nx.cn/test/leonus_2023-01-03_21-44-50.webp" alt="img"></p><p><img src="https://img.777nx.cn/test/leonus_2023-01-03_21-45-35.webp" alt="img"></p><h2 id="四、搭建开发环境">四、搭建开发环境</h2><h3 id="1-下载Arduino">1. 下载Arduino</h3><p>下载地址：<a href="https://www.arduino.cc/en/software">https://www.arduino.cc/en/software</a></p><p><img src="https://img.777nx.cn/test/leonus_2023-01-03_21-01-18.webp" alt="img"></p><p><img src="https://img.777nx.cn/test/leonus_2023-01-03_21-01-28.webp" alt="img"></p><p>安装很简单，只需要<code>注意安装路径</code>，没有什么其他选项，一直下一步。</p><p>打开之后会自动安装一些库和驱动，弹窗是否安装的时候<code>一律选择是</code>。</p><p>对了，刚安装应该是英文，可以使用快捷键 <code>ctrl</code> + <code>,</code> 打开首选项切换成中文。</p><h3 id="2-安装esp8266库">2. 安装esp8266库</h3><p>打开首选项，在其他开发板管理地址中粘贴：<code>http://arduino.esp8266.com/stable/package_esp8266com_index.json</code>并确定。</p><p><img src="https://img.777nx.cn/test/leonus_2023-01-03_22-35-24.webp" alt="粘贴"></p><p>然后点击左边第二个图标，搜索esp8266，安装。</p><p><img src="https://img.777nx.cn/test/leonus_2023-01-03_22-41-36.webp" alt="安装"></p><h3 id="3-安装电灯科技库">3. 安装电灯科技库</h3><p>打开连接：<a href="https://www.diandeng.tech/dev%EF%BC%8C%E5%B9%B6%E7%82%B9%E5%87%BBarduino%E5%90%8E%E9%9D%A2%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%9B%BE%E6%A0%87%E3%80%82">https://www.diandeng.tech/dev，并点击arduino后面的下载图标。</a></p><p><img src="https://img.777nx.cn/test/leonus_2023-01-03_23-11-27.webp" alt="img"></p><p>下载之后我们需要再进行一部操作。<br><strong>新建一个文件夹并命名为blinker -&gt; 将文件解压进去 -&gt; 然后再压缩文件夹。</strong><br>之所以做这一步是因为下载的压缩包里面是多个文件，而不是一个文件夹，直接安装的话会报错。</p><p><img src="https://img.777nx.cn/test/leonus_2023-01-03_23-17-23.webp" alt="img"></p><p>然后点击Arduino的<code>项目</code> -&gt; <code>包含库</code> -&gt; <code>添加.ZIP库</code>，找到blinker.zip压缩包并添加。提示安装成功即可。</p><p><img src="https://img.777nx.cn/test/Leonus_2023-01-03_231900.webp" alt="添加库"></p><h2 id="五、配置电灯科技App">五、配置电灯科技App</h2><p>还是在https://www.diandeng.tech/dev这个链接里（手机打开），下载并安装APP。</p><h3 id="1-添加设备">1. 添加设备</h3><p>打开app后点击右上角加号，点击独立设备，点击网络接入，<code>复制Key</code>并返回。</p><h3 id="2-配置页面">2. 配置页面</h3><p>点击设备进入页面，点击右上角编辑，新增两个按钮和一个调试，点击按钮可以配置样式等。<br><strong>注意：记住两个按钮的键名（或者再查看也行）</strong></p><p><img src="https://img.777nx.cn/test/blinkerapp.webp" alt="img"></p><h2 id="六、编写程序并烧录">六、编写程序并烧录</h2><h3 id="1-编写程序">1. 编写程序</h3><p>一切准备就绪，开始编写程序。<br>以下代码是我自己改的，没有基础只能参考别人代进行码修改。</p><p><strong>注意根据注释更改指定内容</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Servo.h&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BLINKER_WIFI</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Blinker.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> auth[] = <span class="string">&quot;xxxxxxxx&quot;</span>; <span class="comment">// 点灯Key，上面添加设备的时候复制的</span></span><br><span class="line"><span class="type">char</span> ssid[] = <span class="string">&quot;xxxxxxxx&quot;</span>; <span class="comment">// wifi名称</span></span><br><span class="line"><span class="type">char</span> pswd[] = <span class="string">&quot;xxxxxxxx&quot;</span>; <span class="comment">// wifi密码</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// 新建组件对象</span></span><br><span class="line"><span class="function">BlinkerButton <span class="title">Button1</span><span class="params">(<span class="string">&quot;btn-on&quot;</span>)</span></span>;   <span class="comment">// 开灯按钮</span></span><br><span class="line"><span class="function">BlinkerButton <span class="title">Button2</span><span class="params">(<span class="string">&quot;btn-off&quot;</span>)</span></span>;  <span class="comment">// 关灯按钮</span></span><br><span class="line">Servo myservo;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置复位角度</span></span><br><span class="line"><span class="type">int</span> zero = <span class="number">97</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 旋转角度</span></span><br><span class="line"><span class="type">int</span> deg = <span class="number">25</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">button1_callback</span><span class="params">(<span class="type">const</span> String &amp; state)</span> </span>&#123;    <span class="comment">// 开灯函数</span></span><br><span class="line">  myservo.<span class="built_in">write</span>(zero - deg);</span><br><span class="line">  <span class="comment">// digitalWrite(D3, HIGH); // 不知道这个什么作用，有和没有似乎没什么影响，不过如果有知道的大佬希望能解答一下。</span></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">  myservo.<span class="built_in">write</span>(zero);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">button2_callback</span><span class="params">(<span class="type">const</span> String &amp; state)</span> </span>&#123;    <span class="comment">// 关灯函数</span></span><br><span class="line">  myservo.<span class="built_in">write</span>(zero + deg);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">  myservo.<span class="built_in">write</span>(zero);</span><br><span class="line">  <span class="comment">// digitalWrite(D3, LOW);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Serial.<span class="built_in">begin</span>(<span class="number">115200</span>);</span><br><span class="line">    BLINKER_DEBUG.<span class="built_in">stream</span>(Serial);</span><br><span class="line">    Blinker.<span class="built_in">begin</span>(auth, ssid, pswd);</span><br><span class="line">    Button1.<span class="built_in">attach</span>(button1_callback);</span><br><span class="line">    Button2.<span class="built_in">attach</span>(button2_callback);</span><br><span class="line">    myservo.<span class="built_in">attach</span>(D2,<span class="number">500</span>,<span class="number">2500</span>);</span><br><span class="line">    myservo.<span class="built_in">write</span>(zero);</span><br><span class="line">    <span class="built_in">pinMode</span>(D3, OUTPUT); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123; Blinker.<span class="built_in">run</span>(); &#125;</span><br></pre></td></tr></table></figure><h3 id="2-烧录">2. 烧录</h3><p>代码写完之后就需要烧录进开发板了。<br>烧录之前我们需要配置一点东西。</p><ol><li>开发板通过数据线连接到电脑，叮咚一声代表连接成功。</li><li>工具 -&gt; 开发板 -&gt; esp8266 -&gt; 选择NodeMCU 1.0</li></ol><p><img src="https://img.777nx.cn/test/Leonus_2023-01-04_002450.webp" alt="选择开发板"></p><ol start="3"><li>工具 -&gt; 端口 -&gt; 选择COMx</li></ol><p><img src="https://img.777nx.cn/test/Leonus_2023-01-04_002527.webp" alt="选择端口"></p><p>成功之后是这样的：</p><p><img src="https://img.777nx.cn/test/leonus_2023-01-04_00-26-00.webp" alt="成功"></p><p>点击<code>向右箭头</code>图标上传程序（传到开发板），然后就会开始编译上传（时间比较久，请耐心等待）。</p><p>上传成功之后等待片刻，开发板会进行连接wifi等操作。<br>然后打开点灯app即可看到设备在线（没在线再等一会，太久的话比如超过5分钟就检查一遍代码等等）<br>点击按钮即可实现舵机旋转，只需要将舵机粘到开关旁边即可。</p><p><strong>关于舵机扇叶的问题：</strong><br>代码写入之后舵机会旋转到指定角度，这时候如果扇叶是歪的需要拔下来重新对齐。</p><h2 id="七、参考文档">七、参考文档</h2><ol><li><p><a href="https://blog.csdn.net/weixin_44695217/article/details/121429305">esp8266&amp;sg90舵机&amp;点灯科技&amp;arduino</a></p></li><li><p><a href="https://blog.leonus.cn/2023/lightOff.html">关灯神器-我的单片机之路的第一步</a></p></li><li><p>B站的一些视频，补一些基础知识</p></li></ol><h2 id="八、最后">八、最后</h2><p>万物互联第一步，点灯改变生活。是件很酷的事</p>]]></content>
      
      
      <categories>
          
          <category> 生活趣闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 单片机 </tag>
            
            <tag> 物联网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建基础教程(一)</title>
      <link href="/posts/e593433d.html"/>
      <url>/posts/e593433d.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-前言">1. 前言</h2><ol><li><p>博客搭建过程遇到任何问题，优先在本页面搜索，检查是否已经有该配置教程。</p></li><li><p>遇到问题可以优先在文章评论区留言，注意留言时请填写正确的邮箱以确保能收到站长的回复。</p></li><li><p>实在解决不了的问题可添加站长的微信进行交流，备注自己的个人信息。</p></li></ol><h2 id="2-环境与工具准备">2. 环境与工具准备</h2><p><strong>本教程主要面对的是Windows用户</strong></p><ul><li>操作系统：Windows10</li><li>Node</li><li>Git</li><li>Hexo</li><li>文本编辑器(强烈推荐VSCODE)</li><li>GitHub账号</li><li>一个域名(强烈建议买个域名)</li><li>云服务器（可选）</li></ul><h2 id="3-Node的安装">3. Node的安装</h2><ol><li><p>打开<code>Node</code>官网，下载和自己系统相配的<code>Node</code>的安装程序，否则会出现安装问题。<br>下载地址：<a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a></p><p><img src="https://img.777nx.cn/test/image-20230207164214874.png" alt="image-20230207164214874"></p></li><li><p>如果后面美化过程中需要拉取豆瓣信息，哔哩哔哩番剧等，建议安装较低的 Node 版本(v12.18.0)。</p><p><img src="https://img.777nx.cn/test/image-20230207164315776.png" alt="image-20230207164315776"></p><p>查看历史版本，找到 v12.18.0 进行下载。</p></li><li><p>下载后傻瓜式安装即可，安装的目录可以使用默认目录【C:/Program Files/nodejs/】，也可以自定义路径。</p></li><li><p>安装完成后，检查是否安装成功。在键盘按下<code>win</code> + <code>R</code>键，输入<code>CMD</code>，然后回车，打开CMD窗口，执行<code>node -v</code>命令，看到版本信息，则说明安装成功。</p><p><img src="https://img.777nx.cn/test/image-20230207164637418.png" alt="image-20230207164637418"></p><p><img src="https://img.777nx.cn/test/image-20230207164709929.png" alt="image-20230207164709929"></p></li><li><p>修改<code>npm</code>源。npm下载各种模块，默认是从国处服务器下载，速度较慢，建议配置成淘宝镜像。打开CMD窗口，运行如下命令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></li></ol><h2 id="4-安装Hexo">4. 安装Hexo</h2><ol><li><p>在目标路径打开CMD窗口，输入<code>npm install -g hexo-cli</code>安装<code>Hexo</code>环境。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></li><li><p>安装完后输入<code>hexo -v</code>验证是否安装成功。</p><p><img src="https://img.777nx.cn/test/image-20230207165223840.png" alt="image-20230207165223840"></p></li></ol><h2 id="5-GitHub注册与创建仓库">5. GitHub注册与创建仓库</h2><ol><li><p>进入官网 <a href="https://github.com/">https://github.com/</a></p></li><li><p>点击右上角的 Sign up(注册)，不是Sign in（登录）。</p><p><img src="https://img.777nx.cn/test/image-20230207165353004.png" alt="image-20230207165353004"></p></li><li><p>填写自己的邮箱、密码、用户名等信息，然后用邮箱验证即可完成。</p><p><img src="https://img.777nx.cn/test/627d2c05ee628.png" alt="img"></p></li><li><p>注册完成后，点击右上角的<code>+</code>按钮，选择<code>New repository</code>，创建一个<code>&lt;用户名&gt;.github.io</code>的仓库。</p><p><img src="https://img.777nx.cn/test/image-20230207165857473.png" alt="image-20230207165857473"></p></li></ol><ul><li><p>仓库的格式必须为：<code>&lt;用户名&gt;.github.io</code> (注意：前缀必须为用户名，不要等后面404了再来为什么！！！)</p></li><li><p>Description：为描述仓库（选填）</p></li><li><p>勾选 Initialize this repository with a README 初始化一个 <a href="http://readme.md/">README.md</a> 文件</p></li><li><p>点击 Creat repository 进行创建</p><p><img src="https://img.777nx.cn/test/image-20230207170421890.png" alt="image-20230207170421890"></p></li></ul><h2 id="6-Git安装">6. Git安装</h2><ol><li><p>进入官网：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a> ，由于官网下载太慢可以通过淘宝的开源镜像下载 网址：<a href="https://registry.npmmirror.com/binary.html?path=git-for-windows/v2.36.1.windows.1/">https://registry.npmmirror.com/binary.html?path=git-for-windows/v2.36.1.windows.1/</a> ，下载版本更具自己的需求选择即可。</p><p><img src="https://img.777nx.cn/test/image-20230207170542643.png" alt="image-20230207170542643"></p></li><li><p>下载后傻瓜式安装Git即可，安装的目录可以使用默认目录【C:/Program Files/Git】，也可以自定义路径。</p></li><li><p>点击电脑左下角开始即可看见<code>Git Bash</code>。</p><p><img src="https://img.777nx.cn/test/627d410ddc940.webp" alt="img"></p></li></ol><ul><li><code>Git CMD</code> 是windows命令行的指令风格</li><li><code>Git Bash</code> 是linux系统的指令风格（建议使用）</li><li><code>Git GUI</code>是图形化界面（新手学习不建议使用）</li></ul><ol start="4"><li><p>常用命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config -l  //查看所有配置</span><br><span class="line">git config --system --list //查看系统配置</span><br><span class="line">git config --global --list //查看用户（全局）配置</span><br></pre></td></tr></table></figure></li><li><p>配置用户名和邮箱</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;你的用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;你的邮箱&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>通过<code>git config -l</code> 检查是否配置成功，至此git安装及配置全部完成。</p><p><img src="https://img.777nx.cn/test/image-20230207171254479.png" alt="image-20230207171254479"></p></li></ol><h2 id="7-连接至Github">7. 连接至Github</h2><ol><li><p>执行以下命令生成ssh公钥，此公钥用于你的计算机连接Github</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你的邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>之后打开C盘下用户文件夹下的.ssh的文件夹，会看到 id_rsa.pub</p><p><img src="https://img.777nx.cn/test/627e87126fc59.png" alt="img"></p><p>用记事本打开上述图片中的公钥（id_rsa.pub），复制里面的内容，然后开始在github中配置ssh密钥。</p><p><img src="https://img.777nx.cn/test/627e87156038a.png" alt="img"></p></li><li><p>将 SSH KEY 配置到 GitHub<br>进入github，点击右上角头像 选择<code>settings</code>，进入设置页后选择 <code>SSH and GPG keys</code>，名字随便起，公钥填到<code>Key</code>那一栏。</p><p><img src="https://img.777nx.cn/test/image-20230207172219006.png" alt="image-20230207172219006"></p><p><img src="https://img.777nx.cn/test/image-20230207172524478.png" alt="image-20230207172524478"></p><p><img src="https://img.777nx.cn/test/image-20230207172800764.png" alt="image-20230207172800764"></p></li><li><p>测试连接，输入以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/image-20230207173014736.png" alt="image-20230207173014736"></p><p>出现连接到账户的信息，说明已经大功告成，至此完成了环境准备工作。</p></li></ol><h2 id="8-初始化-Hexo-项目">8. 初始化 Hexo 项目</h2><ol><li><p>在目标路径（我这里选的路径为【C:/Hexo-Blog】）打开cmd命令窗口，执行<code>hexo init</code>初始化项目。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog-demo(项目名)</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/1fbeb52671cf4b1daeca3660d1a31a2f" alt="img"></p></li><li><p>进入<code>blog-demo</code> ，输入<code>npm i</code>安装相关依赖。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog-demo  //进入blog-demo文件夹</span><br><span class="line">npm i</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/150eeb3e61c94b89a1cad2a3079b1f94" alt="img"></p></li><li><p>初始化项目后，<code>blog-demo</code>有如下结构：</p><p><img src="https://img.777nx.cn/test/70cf503f27c54d30a31c6b13735023b7" alt="img"></p></li></ol><p>【node_modules】：依赖包<br>【scaffolds】：生成文章的一些模板<br>【source】：用来存放你的文章<br>【themes】：主题<br>【.npmignore】：发布时忽略的文件（可忽略）<br>【_config.landscape.yml】：主题的配置文件<br>【_config.yml】：博客的配置文件<br>【package.json】：项目名称、描述、版本、运行和开发等信息</p><ol start="4"><li><p>输入<code>hexo server</code>或者<code>hexo s</code>启动项目</p><p><img src="https://img.777nx.cn/test/688592f6db1448d29a2f722fc7a0bb0a" alt="img"></p></li><li><p>打开浏览器，输入地址：<a href="http://localhost:4000/">http://localhost:4000/</a> ，看到下面的效果，说明你的博客已经构建成功了。</p><p><img src="https://img.777nx.cn/test/628e5423df640.webp" alt="img"></p></li></ol><h2 id="9-将静态博客挂载到GitHub-Pages">9. 将静态博客挂载到GitHub Pages</h2><ol><li><p>安装 hexo-deployer-git</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li><p>修改 _config.yml 文件</p><p>修改 在blog-demo目录下的_config.yml，就是整个Hexo框架的配置文件了。可以在里面修改大部分的配置。详细可参考官方的配置描述。</p><p>修改最后一行的配置，将repository修改为你自己的github项目地址即可，还有分支要改为<code>main</code>代表主分支（注意缩进）。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:777nx-Blog/777nx.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure></li><li><p>修改好配置后，运行如下命令，将代码部署到 GitHub（Hexo三连）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure></li></ol><ul><li><p>hexo clean：删除之前生成的文件，若未生成过静态文件，可忽略此命令。</p></li><li><p>hexo generate：生成静态文章，可以用<code>hexo g</code>缩写</p></li><li><p>hexo deploy：部署文章，可以用<code>hexo d</code>缩写</p><p><img src="https://img.777nx.cn/test/7ed7b8256d75408aa86e90cd37d0ea53" alt="img"></p></li></ul><blockquote><p>注意：deploy时可能要你输入 username 和 password。</p></blockquote><p>如果出现<code>Deploy done</code>，则说明部署成功了。</p><p><img src="https://img.777nx.cn/test/85b61e7242214d368539d744b4778a5d" alt="img"></p><p>打开浏览器访问：<a href="https://777nx.github.io">https://777nx.github.io</a> ，这时候我们就可以看到博客内容了。</p><p><img src="https://img.777nx.cn/test/628e5f7360e9c.webp" alt="img"></p><h2 id="10-参考文档">10. 参考文档</h2><ol><li><p><a href="https://tzy1997.com/articles/hexo1601/">基于 Hexo 从零开始搭建个人博客（一）</a></p></li><li><p><a href="https://tzy1997.com/articles/hexo1602/">基于 Hexo 从零开始搭建个人博客（二）</a></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FastGithub下载及使用</title>
      <link href="/posts/4e86faf1.html"/>
      <url>/posts/4e86faf1.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、-前言">一、 前言</h2><p>很多需要用到的脚本及软件会先发布在GitHub上，所以经常需要访问GitHub，但是每次都会卡在跳转到GitHub的步骤，就是还没开始就可以结束了。</p><p><img src="https://img.777nx.cn/test/image-20230206231529708.png" alt="image-20230206231529708"></p><h2 id="二、-教程">二、 教程</h2><h3 id="2-1-FastGithub介绍">2.1 FastGithub介绍</h3><p>FastGithub 是 GitHub 加速神器，解决 GitHub 打不开、用户头像无法加载、releases 无法上传下载、git-clone、git-pull、git-push 失败等问题。</p><h3 id="2-2-下载">2.2 下载</h3><ol><li>项目下载地址</li></ol><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://github.com/dotnetcore/fastgithub/releases">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/github.com/dotnetcore/fastgithub/releases.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">FastGithub</div>            <div class="tag-link-sitename">GitHub下载</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><ol start="2"><li>提供蓝奏云网盘下载地址</li></ol><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://777nx.lanzoue.com/if0Vz0msm2ni">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/777nx.lanzoue.com/if0Vz0msm2ni.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">FastGithub</div>            <div class="tag-link-sitename">蓝奏云下载</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="2-3-安装及使用">2.3 安装及使用</h3><p>解压下载的zip包, 将文件夹放到合适位置</p><p>找到FastGithub.UI.exe, 双击执行即可</p><p><img src="https://img.777nx.cn/test/image-20230207000735209.png" alt="image-20230207000735209.png"></p><h3 id="2-4-注意">2.4 注意</h3><ol><li>在使用GitHub前需要打开并保证Fast GitHub在运行状态</li><li>在安装完成之后可以直接点开FastGithub的执行文件就可以运行程序，顺利连接到Github</li><li>如果不能正常打开.exe的执行文件的话还是使用命令去启动</li></ol><ul><li>进入fastgithub_win-x64文件夹, 使用管理员权限在此处打开cmd命令框, 输入</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastgithub.exe start</span><br></pre></td></tr></table></figure><ul><li>进入fastgithub_win-x64文件夹, 使用管理员权限在此处打开cmd命令框, 输入</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastgithub.exe stop</span><br></pre></td></tr></table></figure><h2 id="三、-加速原理">三、 加速原理</h2><ul><li><p>修改本机的 dns 服务指向 FastGithub 自身</p></li><li><p>解析匹配的域名为 FastGithub 自身的 ip</p></li><li><p>请求安全 dns 服务 (dnscrypt-proxy) 获取域名的 ip</p></li><li><p>选择最优的 ip 进行 ssh 代理或 https 反向代理</p></li></ul><h2 id="四、-参考文档">四、 参考文档</h2><ol><li><a href="https://www.cnblogs.com/iminifly/p/16040826.html">GitHub加速访问插件-FastGithub推荐</a></li><li><a href="https://zhuanlan.zhihu.com/p/364453651#:~:text=%E2%80%9D,FastGithub%E6%9C%AC%E5%9C%B0%E4%BB%A3%E7%90%86%E4%BD%BF%E7%94%A8%E7%9A%84%E9%83%BD%E6%98%AF%E2%80%9C%E5%85%AC%E7%94%A8%E7%94%B5%E4%BF%A1%E7%BD%91%E6%8F%90%E4%BE%9B%E7%9A%84%E5%9B%BD%E9%99%85%E5%87%BA%E5%85%A5%E5%8F%A3%E4%BF%A1%E9%81%93%E2%80%9D%EF%BC%8C%E4%BB%8E%E5%9B%BD%E5%A4%96Github%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%88%B0%E5%9B%BD%E5%86%85%E7%94%A8%E6%88%B7%E7%94%B5%E8%84%91%E4%B8%8AFastGithub%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%B5%81%E9%87%8F%EF%BC%8C%E4%BD%BF%E7%94%A8%E7%9A%84%E6%98%AF%E6%AD%A3%E5%B8%B8%E6%B5%81%E9%87%8F%E9%80%9A%E9%81%93%EF%BC%8C%E5%85%B6%E9%97%B4%E6%9C%AA%E5%AF%B9%E6%B5%81%E9%87%8F%E8%BF%9B%E8%A1%8C%E4%BB%BB%E4%BD%95%E9%A2%9D%E5%A4%96%E5%8A%A0%E5%AF%86%EF%BC%88%E4%BB%85%E6%9C%89%E7%BD%91%E9%A1%B5%E5%8E%9F%E6%9C%89%E7%9A%84TLS%E5%8A%A0%E5%AF%86%EF%BC%8C%E5%8C%BA%E5%88%AB%E4%BA%8EV%CF%81%D0%BF%E7%9A%84%E6%B5%81%E9%87%8F%E5%8A%A0%E5%AF%86%EF%BC%89%EF%BC%8C%E8%80%8CFastGithub%E8%8E%B7%E5%8F%96%E5%88%B0%E7%BD%91%E9%A1%B5%E6%95%B0%E6%8D%AE%E4%B9%8B%E5%90%8E%E5%8F%91%E7%94%9F%E7%9A%84%E6%95%B4%E4%B8%AA%E4%BB%A3%E7%90%86%E8%BF%87%E7%A8%8B%E5%AE%8C%E5%85%A8%E5%9C%A8%E5%9B%BD%E5%86%85%EF%BC%8C%E4%B8%8D%E5%86%8D%E9%80%82%E7%94%A8%E5%9B%BD%E9%99%85%E4%BA%92%E8%81%94%E7%BD%91%E7%9B%B8%E5%85%B3%E4%B9%8B%E8%A7%84%E5%AE%9A%E3%80%82">上万良心软件都在GitHub，你却还卡在无法访问？(Github加速访问教程）</a></li></ol><h2 id="五、-最后">五、 最后</h2><div class="tip cogs"><p>《国际联网暂行规定》第六条规定：“计算机信息网络直接进行国际联网，必须使用邮电部国家公用电信网提供的国际出入口信道。任何单位和个人不得自行建立或者使用其他信道进行国际联网。”</p></div><p>Fast Github本地代理使用的都是“公用电信网提供的国际出入口信道”，从国外Github服务器到国内用户电脑上Fast Github程序的流量，使用的是正常流量通道，其间未对流量进行任何额外加密（仅有网页原有的TLS加密，区别于Vρп的流量加密），而Fast Github获取到网页数据之后发生的整个代理过程完全在国内，不再适用国际互联网相关之规定。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>重学C语言环境搭建</title>
      <link href="/posts/6722dc87.html"/>
      <url>/posts/6722dc87.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p>参考：<a href="https://www.lovestu.com/studyc01.html">2022重学C语言笔记（一）：环境搭建</a></p></div><p>2022了，C语言也，马上C2x标准要出来了。以前很多C语言的内容都忘记了，所以记此笔记，从学C语言。</p><p>笔记使用Clion作为IDE，MinGW作为C编译器。支持window，linux，和Mac玩。</p><h2 id="环境搭建">环境搭建</h2><h3 id="安装IDE">安装IDE</h3><p>IDEA旗下的IDE非常牛逼，自认为比VS好用很多，用IEDA习惯了，所以写C也用他家的IDE吧。</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href=" https://www.jetbrains.com/zh-cn/clion/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/ https://www.jetbrains.com/zh-cn/clion/.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Clion</div>            <div class="tag-link-sitename"> 官方下载地址</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><p>先下载下来</p><h3 id="安装MSYS2">安装MSYS2</h3><p>MSYS2 也是一个包管理软件，用来安装环境非常简单。推荐使用。</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href=" https://www.msys2.org/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/ https://www.msys2.org/.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">MSYS2</div>            <div class="tag-link-sitename"> 官方下载地址</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><p>进入官网，下载安装包即可。</p><p><img src="https://img.777nx.cn/test/1662985763379.webp" alt="img"></p><p>安装包一路下一步即可，我是安装在D盘的。</p><p>进入：D:\msys64，启动msys2.exe。</p><p>输入 <code>pacman -Su</code> 更新一下包，一路Y即可</p><p><img src="https://img.777nx.cn/test/1662985989564.webp" alt="img"></p><p>第二次输入Y以后，窗口会关闭。再次打开即可。</p><h3 id="安装MinGW">安装MinGW</h3><p>在msys2中输入命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -Sy base-devel</span><br></pre></td></tr></table></figure><p>然后输入Y即可，稍等一会，即可安装完成。然后安装mingw环境。还是Y即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S mingw-w64-x86_64-toolchain</span><br></pre></td></tr></table></figure><p>这样，就把所有的环境给安装下来了，非常简单。</p><p>至此，需要的东西，全部都给安装下来了，可以愉快的玩耍C语言了。</p><h2 id="配置环境">配置环境</h2><p>之前安装好了MinGW，一般就在msys64的目录下，我默认在C盘，我msys64安装在D盘，所以MinGW也在D盘。</p><p>有mingw64和mingw32，64位系统用mingw64就好，按照下图配置好构建工具和编译器就行。</p><p><img src="https://img.777nx.cn/test/1662986745916.webp" alt="img"></p><p>然后设置CMake，默认是Debug，如果没有，手动添加就是了。这儿是可以设置多个编译器环境的，例如使用微软的MSVC，当然了，我们只安装了MinGW，用这个就好了。</p><p><img src="https://img.777nx.cn/test/1662987078400.webp" alt="img"></p><h2 id="helloWord">helloWord</h2><p>环境配置好了，当然要跑起来看看啦，创建一个C项目，默认就会有一些代码，如图。点击右边运行按钮，即可在控制台看到Hello Word，说明环境成功搭建。</p><p><img src="https://img.777nx.cn/test/1662987268220.webp" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
            <tag> 程序设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dev-C++安装教程</title>
      <link href="/posts/1244f223.html"/>
      <url>/posts/1244f223.html</url>
      
        <content type="html"><![CDATA[<div class="tip "><p>工欲善其事，必先利其器。——《论语》</p></div><h2 id="软件介绍">软件介绍</h2><p>Dev-C++ （或者叫做 Dev-Cpp）是 Windows 环境下的一个用于 C 语言和 C++ 语言程序设计的轻量级免费<strong>集成开发环境</strong>。 它集成了 SynEdit 源码编辑器、MinGW-w64 编译器、GDB 调试器和 AStyle 格式整理器等众多自由软件，非常适合于在教学中供 C/C++语言初学者使用，也适合于非商业级普通开发者使用。</p><ul><li><p>优点是功能简洁，是学习c或者c++的首选开发工具。</p></li><li><p>缺点是它并没有完善的可视化开发功能，所以不适合用于开发图形化界面的软件。</p></li></ul><h2 id="下载">下载</h2><p>操作系统建议 Windows 7或10，直接搜索 Dev-C++ 下载。</p><p>或者 sourceforge 官网下载</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://sourceforge.net/projects/orwelldevcpp/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/sourceforge.net/projects/orwelldevcpp/.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Dev-C++</div>            <div class="tag-link-sitename">sourceforge官网下载链接</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><p>或者 Dev-C++ 中文版网站 下载最新版本</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://devcpp.gitee.io/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/devcpp.gitee.io/.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Dev-C++</div>            <div class="tag-link-sitename">Dev-C++中文版网站</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h2 id="安装">安装</h2><p>下载之后开始<strong>安装</strong>。安装过程很简单，按照对话框的操作提示执行即可，在此略过不叙。</p><p>安装完毕之后，双击 Windows 桌面上的 Dev-C++ 图标，以启动Dev-C++。工作界面如下图所示。</p><p><img src="https://img.777nx.cn/test/image-20230131190923235.png" alt="image-20230131190923235"></p><p>界面上依次显示有菜单栏和两行工具栏。其中第一行工具栏是平时使用最多的，其各个按钮的功能如下图所示：</p><p><img src="https://img.777nx.cn/test/v2-c2827ff938e65dee71a08fef65fa524e_r.jpg" alt="img"></p><h2 id="简单使用">简单使用</h2><h3 id="1-新建-hello-c-源代码文件">1. 新建 hello.c 源代码文件</h3><p>菜单中依次选择 文件-新建-另存为，输入 hello.c 文件名；</p><p>或者快捷键</p><p>Ctr+N 新建源代码文件</p><p>Ctrl+S 保存</p><h3 id="2-编写-Hello-World-示例程序">2. 编写 Hello World 示例程序</h3><p>在编辑器窗口，输入以下C语言代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* Hello world示例程序</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Hello,world!\n&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-编译运行">3. 编译运行</h3><p>菜单中选择 运行-编译运行或者快捷键 F11，即可运行该程序，如果有错误也会提示，正常运行弹出以下窗口显示结果。</p><p><img src="https://img.777nx.cn/test/image-20230131192258771.png" alt="image-20230131192258771"></p><h3 id="4-其他常用功能">4. 其他常用功能</h3><p>调试、项目工程、多文件编译等，建议查看帮助文档学习或者网上搜索，一般简单示例学习代码无需这些功能。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
            <tag> 程序设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git笔记</title>
      <link href="/posts/5bd9b965.html"/>
      <url>/posts/5bd9b965.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-Git常用命令">1. Git常用命令</h2><table><thead><tr><th style="text-align:center"><strong>命令</strong></th><th style="text-align:center"><strong>作用</strong></th></tr></thead><tbody><tr><td style="text-align:center">git config –global <a href="http://user.name">user.name</a> 用户名</td><td style="text-align:center">设置用户签名</td></tr><tr><td style="text-align:center">git config –global user.email 邮箱</td><td style="text-align:center">设置用户签名</td></tr><tr><td style="text-align:center">git init</td><td style="text-align:center">初始化本地库</td></tr><tr><td style="text-align:center">git status</td><td style="text-align:center">查看本地库状态</td></tr><tr><td style="text-align:center">git add 文件名</td><td style="text-align:center">添加到暂存区</td></tr><tr><td style="text-align:center">git commit -m “日志信息” 文件名</td><td style="text-align:center">提交到本地库（将会记录版本）</td></tr><tr><td style="text-align:center">git reflog</td><td style="text-align:center">查看历史纪录</td></tr><tr><td style="text-align:center">git log</td><td style="text-align:center">查看详细历史记录</td></tr><tr><td style="text-align:center">git reset –hard 版本号</td><td style="text-align:center">版本穿梭</td></tr></tbody></table><h2 id="2-分支的操作">2. 分支的操作</h2><table><thead><tr><th style="text-align:center"><strong>命令</strong></th><th style="text-align:center"><strong>作用</strong></th></tr></thead><tbody><tr><td style="text-align:center">git branch 分支名</td><td style="text-align:center">创建分支</td></tr><tr><td style="text-align:center">git branch -v</td><td style="text-align:center">查看分支</td></tr><tr><td style="text-align:center">git checkout 分支名</td><td style="text-align:center">切换分支</td></tr><tr><td style="text-align:center">git merge 分支名</td><td style="text-align:center">把指定的分支合并到当前分支上</td></tr></tbody></table><h2 id="3-远程仓库操作">3. 远程仓库操作</h2><table><thead><tr><th style="text-align:center"><strong>命令</strong></th><th style="text-align:center"><strong>作用</strong></th></tr></thead><tbody><tr><td style="text-align:center">git remote -v</td><td style="text-align:center">查看当前所有远程地址</td></tr><tr><td style="text-align:center">git remote add 别名 远程地址</td><td style="text-align:center">添加远程仓库并为其起别名</td></tr><tr><td style="text-align:center">git push 别名 分支</td><td style="text-align:center">推送本地分支上的内容到远程仓库</td></tr><tr><td style="text-align:center">git clone 远程地址</td><td style="text-align:center">将远程仓库的内容克隆到本地</td></tr></tbody></table><h2 id="4-SSH连接远程仓库">4. SSH连接远程仓库</h2><p>添加SSH</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;1362724990@qq.com&quot;</span></span><br></pre></td></tr></table></figure><p>检查SSH</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>完美校园自动打卡</title>
      <link href="/posts/e234fb3d.html"/>
      <url>/posts/e234fb3d.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-前言">1. 前言</h2><p>最近几天总是忘打卡，总被辅导员问话。然后就突然想到弄个自动化让他自动打开不就行了嘛</p><p>虽然我自己没这个技术，但是计算机领域最不缺的就是大佬</p><h2 id="2-教程">2. 教程</h2><p>因为有现成的教程，所以我就不写了，说说我弄的时候遇到的问题</p><h3 id="2-1-文件下载">2.1 文件下载</h3><p>云函数版本2.3beta：<a href="https://777nx.lanzoue.com/ir4Uj0lo43ha">https://777nx.lanzoue.com/ir4Uj0lo43ha</a></p><p>注册设备ID软件：<a href="https://777nx.lanzoue.com/ipzUI0lo40gb">https://777nx.lanzoue.com/ipzUI0lo40gb</a></p><h3 id="2-2-文字教程">2.2 文字教程</h3><blockquote><p>建议看下面视频教程，比较详细</p></blockquote><p>作者教程：<a href="https://reajason.top/2021/03/19/17wanxiaocheckinscf/">https://reajason.top/2021/03/19/17wanxiaocheckinscf/</a></p><p>GitHub地址：<a href="https://github.com/ReaJason/17wanxiaoCheckin">https://github.com/ReaJason/17wanxiaoCheckin</a></p><h3 id="2-3-视频教程">2.3 视频教程</h3><p><a href="https://www.bilibili.com/video/BV14S4y1B7QA/?p=2">【完美校园自动打卡】保姆级教程，学生党必看！</a></p><div align=center class="aspect-ratio">    <iframe src="//player.bilibili.com/player.html?aid=727159804&bvid=BV14S4y1B7QA&cid=738581398&page=1"     scrolling="no"     border="0"     frameborder="no"     framespacing="0"     high_quality=1    danmaku=1     allowfullscreen="true">     </iframe></div><h2 id="3-注意事项">3. 注意事项</h2><p>简单的说说我遇到的一些问题以及配置等等</p><p>建议先看完视频再看我的建议</p><ul><li>虽然配置很多，但是基本不需要修改，填写账号密码和设备ID之后开启第一类和邮箱推送即可</li><li>我只开启了第一类健康打卡，校内打卡没有开启，不知道是啥来的</li><li>推送我是开启的邮箱推送，配置简单，推荐也使用此方法</li><li>一个人的话可以把第二个用户删一下，没删我也不知道会怎么样，建议还是删一下</li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 完美校园 </tag>
            
            <tag> 云函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随机壁纸API汇总</title>
      <link href="/posts/ffde9a2a.html"/>
      <url>/posts/ffde9a2a.html</url>
      
        <content type="html"><![CDATA[<h2 id="随机壁纸API汇总">随机壁纸API汇总</h2><p>网上可以查到很多随机壁纸的API，但是很多都用不了或者是图片质量比较低，于是今天汇总了一些目前可以用的随机壁纸API，其中列出来的图片质量都是比较高的，可以放心食用，本站随机壁纸API模块用的都是这部分API。</p><ul><li>必应每日壁纸</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>bing.img.run/m.php</span><br></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>bing.img.run/<span class="number">1920</span>x1080.php</span><br></pre></td></tr></table></figure><ul><li>必应历史壁纸</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>bing.img.run/rand_m.php</span><br></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>bing.img.run/rand.php</span><br></pre></td></tr></table></figure><ul><li>EEE.DOG动漫壁纸</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>api.yimian.xyz/img?type=moe&amp;size=<span class="number">1920</span>x1080</span><br></pre></td></tr></table></figure><ul><li>seovx随机美图</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>cdn.seovx.com/?mom=<span class="number">302</span></span><br></pre></td></tr></table></figure><ul><li>picsum随机壁纸</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>picsum.photos<span class="regexp">/1920/</span><span class="number">1080</span>.webp</span><br></pre></td></tr></table></figure><ul><li>小歪二次元壁纸</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>api.ixiaowai.cn<span class="regexp">/api/</span>api.php</span><br></pre></td></tr></table></figure><ul><li>小歪高清壁纸</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>api.ixiaowai.cn<span class="regexp">/gqapi/g</span>qapi.php</span><br></pre></td></tr></table></figure><ul><li>tuapi动漫壁纸</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>tuapi.eees.cc/api.php?category=dongman</span><br></pre></td></tr></table></figure><ul><li>unsplash随机壁纸</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>source.unsplash.com<span class="regexp">/random/</span><span class="number">1920</span>x1080/</span><br></pre></td></tr></table></figure><p>具体的参数可以到相应官网查看API文档，这部分已经通过测试，到目前为止都是可用的，并且壁纸质量比较高；尤其是<code>必应</code>、<code>unsplash</code>、<code>picsum</code>这几个API的图片质量十分高，赶紧给你的网站换上随机壁纸吧！</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> API </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>typescipt</title>
      <link href="/posts/e4b8bc80.html"/>
      <url>/posts/e4b8bc80.html</url>
      
        <content type="html"><![CDATA[<div class="note success flat"><p>笔记来自于尚硅谷课程</p></div><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.bilibili.com/video/BV1Xy4y1v7S2/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.bilibili.com/video/BV1Xy4y1v7S2/.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">尚硅谷TypeScript教程</div>            <div class="tag-link-sitename">李立超老师TS新课</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h2 id="第一章-快速入门">第一章 快速入门</h2><h3 id="0、TypeScript简介">0、TypeScript简介</h3><ol><li>TypeScript是JavaScript的超集。</li><li>它对JS进行了扩展，向JS中引入了类型的概念，并添加了许多新的特性。</li><li>TS代码需要通过编译器编译为JS，然后再交由JS解析器执行。</li><li>TS完全兼容JS，换言之，任何的JS代码都可以直接当成JS使用。</li><li>相较于JS而言，TS拥有了静态类型，更加严格的语法，更强大的功能；TS可以在代码执行前就完成代码的检查，减小了运行时异常的出现的几率；TS代码可以编译为任意版本的JS代码，可有效解决不同JS运行环境的兼容问题；同样的功能，TS的代码量要大于JS，但由于TS的代码结构更加清晰，变量类型更加明确，在后期代码的维护中TS却远远胜于JS。</li></ol><h3 id="1、TypeScript-开发环境搭建">1、TypeScript 开发环境搭建</h3><ol><li>下载Node.js<ul><li>64位：<a href="https://nodejs.org/dist/v14.15.1/node-v14.15.1-x64.msi">https://nodejs.org/dist/v14.15.1/node-v14.15.1-x64.msi</a></li><li>32位：<a href="https://nodejs.org/dist/v14.15.1/node-v14.15.1-x86.msi">https://nodejs.org/dist/v14.15.1/node-v14.15.1-x86.msi</a></li></ul></li><li>安装Node.js</li><li>使用npm全局安装typescript<ul><li>进入命令行</li><li>输入：<code>npm i -g typescript</code></li></ul></li><li>创建一个ts文件</li><li>使用tsc对ts文件进行编译<ul><li>进入命令行</li><li>进入ts文件所在目录</li><li>执行命令：<code>tsc xxx.ts</code></li></ul></li></ol><h3 id="2、基本类型">2、基本类型</h3><h4 id="2-1、类型声明">2.1、类型声明</h4><ul><li>类型声明是TS非常重要的一个特点，通过类型声明可以指定TS中变量（参数、形参）的类型。</li><li>指定类型后，当为变量赋值时，TS编译器会自动检查值是否符合类型声明，符合则赋值，否则报错。</li><li>简而言之，类型声明给变量设置了类型，使得变量只能存储某种类型的值</li><li>语法：  <figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> 变量: 类型;</span><br><span class="line"><span class="keyword">let</span> 变量: 类型 = 值;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params">参数: 类型, 参数: 类型</span>): 类型&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-2、自动类型判断">2.2、自动类型判断</h4><ul><li>TS拥有自动的类型判断机制</li><li>当对变量的声明和赋值是同时进行的，TS编译器会自动判断变量的类型</li><li>所以如果你的变量的声明和赋值时同时进行的，可以省略掉类型声明</li></ul><h4 id="2-3、类型：">2.3、类型：</h4><table><thead><tr><th style="text-align:center">类型</th><th style="text-align:center">例子</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">number</td><td style="text-align:center">1, -33, 2.5</td><td style="text-align:center">任意数字</td></tr><tr><td style="text-align:center">string</td><td style="text-align:center">‘hi’, “hi”, <code>hi</code></td><td style="text-align:center">任意字符串</td></tr><tr><td style="text-align:center">boolean</td><td style="text-align:center">true、false</td><td style="text-align:center">布尔值true或false</td></tr><tr><td style="text-align:center">字面量</td><td style="text-align:center">其本身</td><td style="text-align:center">限制变量的值就是该字面量的值</td></tr><tr><td style="text-align:center">any</td><td style="text-align:center">*</td><td style="text-align:center">任意类型</td></tr><tr><td style="text-align:center">unknown</td><td style="text-align:center">*</td><td style="text-align:center">类型安全的any</td></tr><tr><td style="text-align:center">void</td><td style="text-align:center">空值（undefined）</td><td style="text-align:center">没有值（或undefined）</td></tr><tr><td style="text-align:center">never</td><td style="text-align:center">没有值</td><td style="text-align:center">不能是任何值</td></tr><tr><td style="text-align:center">object</td><td style="text-align:center">{name:‘孙悟空’}</td><td style="text-align:center">任意的JS对象</td></tr><tr><td style="text-align:center">array</td><td style="text-align:center">[1,2,3]</td><td style="text-align:center">任意JS数组</td></tr><tr><td style="text-align:center">tuple</td><td style="text-align:center">[4,5]</td><td style="text-align:center">元素，TS新增类型，固定长度数组</td></tr><tr><td style="text-align:center">enum</td><td style="text-align:center">enum{A, B}</td><td style="text-align:center">枚举，TS中新增类型</td></tr></tbody></table><ul><li>number<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">decimal</span>: <span class="built_in">number</span> = <span class="number">6</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">hex</span>: <span class="built_in">number</span> = <span class="number">0xf00d</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">binary</span>: <span class="built_in">number</span> = <span class="number">0b1010</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">octal</span>: <span class="built_in">number</span> = <span class="number">0o744</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">big</span>: <span class="built_in">bigint</span> = <span class="number">100n</span>;</span><br></pre></td></tr></table></figure></li><li>boolean<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">isDone</span>: <span class="built_in">boolean</span> = <span class="literal">false</span>;</span><br></pre></td></tr></table></figure></li><li>string<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">color</span>: <span class="built_in">string</span> = <span class="string">&quot;blue&quot;</span>;</span><br><span class="line">color = <span class="string">&#x27;red&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">fullName</span>: <span class="built_in">string</span> = <span class="string">`Bob Bobbington`</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">age</span>: <span class="built_in">number</span> = <span class="number">37</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">sentence</span>: <span class="built_in">string</span> = <span class="string">`Hello, my name is <span class="subst">$&#123;fullName&#125;</span>.</span></span><br><span class="line"><span class="string">I&#x27;ll be <span class="subst">$&#123;age + <span class="number">1</span>&#125;</span> years old next month.`</span>;</span><br></pre></td></tr></table></figure></li><li>字面量<br>也可以使用字面量去指定变量的类型，通过字面量可以确定变量的取值范围<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">color</span>: <span class="string">&#x27;red&#x27;</span> | <span class="string">&#x27;blue&#x27;</span> | <span class="string">&#x27;black&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">num</span>: <span class="number">1</span> | <span class="number">2</span> | <span class="number">3</span> | <span class="number">4</span> | <span class="number">5</span>;</span><br></pre></td></tr></table></figure></li><li>any<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">d</span>: <span class="built_in">any</span> = <span class="number">4</span>;</span><br><span class="line">d = <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line">d = <span class="literal">true</span>;</span><br></pre></td></tr></table></figure></li><li>unknown<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">notSure</span>: <span class="built_in">unknown</span> = <span class="number">4</span>;</span><br><span class="line">notSure = <span class="string">&#x27;hello&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li>void<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">unusable</span>: <span class="built_in">void</span> = <span class="literal">undefined</span>;</span><br></pre></td></tr></table></figure></li><li>never<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">error</span>(<span class="params">message: <span class="built_in">string</span></span>): <span class="built_in">never</span> &#123;</span><br><span class="line">  <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(message);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>object（没啥用）<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">obj</span>: <span class="built_in">object</span> = &#123;&#125;;</span><br></pre></td></tr></table></figure></li><li>array<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">list</span>: <span class="built_in">number</span>[] = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="attr">list</span>: <span class="title class_">Array</span>&lt;<span class="built_in">number</span>&gt; = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br></pre></td></tr></table></figure></li><li>tuple<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">x</span>: [<span class="built_in">string</span>, <span class="built_in">number</span>];</span><br><span class="line">x = [<span class="string">&quot;hello&quot;</span>, <span class="number">10</span>]; </span><br></pre></td></tr></table></figure></li><li>enum<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> <span class="title class_">Color</span> &#123;</span><br><span class="line">  <span class="title class_">Red</span>,</span><br><span class="line">  <span class="title class_">Green</span>,</span><br><span class="line">  <span class="title class_">Blue</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">c</span>: <span class="title class_">Color</span> = <span class="title class_">Color</span>.<span class="property">Green</span>;</span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">Color</span> &#123;</span><br><span class="line">  <span class="title class_">Red</span> = <span class="number">1</span>,</span><br><span class="line">  <span class="title class_">Green</span>,</span><br><span class="line">  <span class="title class_">Blue</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">c</span>: <span class="title class_">Color</span> = <span class="title class_">Color</span>.<span class="property">Green</span>;</span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">Color</span> &#123;</span><br><span class="line">  <span class="title class_">Red</span> = <span class="number">1</span>,</span><br><span class="line">  <span class="title class_">Green</span> = <span class="number">2</span>,</span><br><span class="line">  <span class="title class_">Blue</span> = <span class="number">4</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">c</span>: <span class="title class_">Color</span> = <span class="title class_">Color</span>.<span class="property">Green</span>;</span><br></pre></td></tr></table></figure></li><li>类型断言<br>有些情况下，变量的类型对于我们来说是很明确，但是TS编译器却并不清楚，此时，可以通过类型断言来告诉编译器变量的类型，断言有两种形式：<ul><li>第一种<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">someValue</span>: <span class="built_in">unknown</span> = <span class="string">&quot;this is a string&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">strLength</span>: <span class="built_in">number</span> = (someValue <span class="keyword">as</span> <span class="built_in">string</span>).<span class="property">length</span>;</span><br></pre></td></tr></table></figure></li><li>第二种<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">someValue</span>: <span class="built_in">unknown</span> = <span class="string">&quot;this is a string&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">strLength</span>: <span class="built_in">number</span> = (&lt;<span class="built_in">string</span>&gt;someValue).<span class="property">length</span>;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="3、编译选项">3、编译选项</h3><h4 id="3-1、自动编译文件">3.1、自动编译文件</h4><ul><li>编译文件时，使用 -w 指令后，TS编译器会自动监视文件的变化，并在文件发生变化时对文件进行重新编译。示例：<code>tsc xxx.ts -w</code></li></ul><h4 id="3-2、自动编译整个项目">3.2、自动编译整个项目</h4><ul><li>如果直接使用tsc指令，则可以自动将当前项目下的所有ts文件编译为js文件。</li><li>但是能直接使用tsc命令的前提时，要先在项目根目录下创建一个ts的配置文件 tsconfig.json</li><li>tsconfig.json是一个JSON文件，添加配置文件后，只需只需 tsc 命令即可完成对整个项目的编译</li></ul><h5 id="3-2-1、配置选择">3.2.1、配置选择</h5><ul><li><p><strong>include</strong><br>定义希望被编译文件所在的目录，默认值：<code>[&quot;\*\*/\*&quot;]</code><br><strong>示例：</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;include&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;src/**/*&quot;</span><span class="punctuation">,</span> <span class="string">&quot;tests/**/*&quot;</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>上述示例中，所有src目录和tests目录下的文件都会被编译</p></li><li><p><strong>exclude</strong><br>定义需要排除在外的目录，默认值：<code>[&quot;node_modules&quot;, &quot;bower_components&quot;, &quot;jspm_packages&quot;]</code><br><strong>示例：</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;exclude&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;./src/hello/**/*&quot;</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>上述示例中，src下hello目录下的文件都不会被编译</p></li><li><p><strong>extends</strong><br>定义被继承的配置文件<br><strong>示例：</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;extends&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./configs/base&quot;</span></span><br></pre></td></tr></table></figure><p>上述示例中，当前配置文件中会自动包含config目录下base.json中的所有配置信息</p></li><li><p><strong>files</strong><br>指定被编译文件的列表，只有需要编译的文件少时才会用到<br><strong>示例：</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;files&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;core.ts&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;sys.ts&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;types.ts&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;scanner.ts&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;parser.ts&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;utilities.ts&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;binder.ts&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;checker.ts&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;tsc.ts&quot;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>列表中的文件都会被TS编译器所编译</p></li><li><p><strong>compilerOptions</strong><br>编译选项是配置文件中非常重要也比较复杂的配置选项，在compilerOptions中包含多个子选项，用来完成对编译的配置。<br><strong>项目选项：</strong></p><ul><li>target<br>设置ts代码编译的目标版本可选值：<code>ES3（默认）、ES5、ES6/ES2015、ES7/ES2016、ES2017、ES2018、ES2019、ES2020、ESNext</code><br>示例：<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;compilerOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;target&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ES6&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>如上设置，我们所编写的ts代码将会被编译为ES6版本的js代码</li><li>lib<br>指定代码运行时所包含的库（宿主环境），可选值：<code>ES5、ES6/ES2015、ES7/ES2016、ES2017、ES2018、ES2019、ES2020、ESNext、DOM、WebWorker、ScriptHost ...</code><br>示例：<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;compilerOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;target&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ES6&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;lib&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;ES6&quot;</span><span class="punctuation">,</span> <span class="string">&quot;DOM&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;outDir&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dist&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;outFile&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dist/aa.js&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li>module<br>设置编译后代码使用的模块化系统，可选值：<code>CommonJS、UMD、AMD、System、ES2020、ESNext、None</code><br>示例：<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;compilerOptions&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;module&quot;</span>: <span class="string">&quot;CommonJS&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>outDir<br>编译后文件的所在目录。默认情况下，编译后的js文件会和ts文件位于相同的目录，设置outDir后可以改变编译后文件的位置<br>示例：<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;compilerOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;outDir&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dist&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>设置后编译后的js文件将会生成到dist目录</li><li>outFile<br>将所有的文件编译为一个js文件，默认会将所有的编写在全局作用域中的代码合并为一个js文件，如果module制定了None、System或AMD则会将模块一起合并到文件之中。<br>示例：<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;compilerOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;outFile&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dist/app.js&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li>rootDir<br>指定代码的根目录，默认情况下编译后文件的目录结构会以最长的公共目录为根目录，通过rootDir可以手动指定根目录<br>示例：<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;compilerOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;rootDir&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./src&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li>allowJs<br>是否对js文件编译</li><li>checkJs<br>是否对js文件进行检查<br>示例：<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;compilerOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;allowJs&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;checkJs&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li>removeComments<br>是否删除注释，默认值：false</li><li>noEmit<br>不对代码进行编译，默认值：false</li><li>sourceMap<br>是否生成sourceMap，默认值：false</li></ul></li><li><p><strong>严格检查</strong></p><ul><li>strict<br>启用所有的严格检查，默认值为true，设置后相当于开启了所有的严格检查</li><li>alwaysStrict<br>总是以严格模式对代码进行编译</li><li>noImplicitAny<br>禁止隐式的any类型</li><li>noImplicitThis<br>禁止类型不明确的this</li><li>strictBindCallApply<br>严格检查bind、call和apply的参数列表</li><li>strictFunctionTypes<br>严格检查函数的类型</li><li>strictNullChecks<br>严格的空值检查</li><li>strictPropertyInitialization<br>严格检查属性是否初始化</li></ul></li><li><p><strong>额外检查</strong></p><ul><li>noFallthroughCasesInSwitch<br>检查switch语句包含正确的break</li><li>noImplicitReturns<br>检查函数没有隐式的返回值</li><li>noUnusedLocals<br>检查未使用的局部变量</li><li>noUnusedParameters<br>检查未使用的参数</li></ul></li><li><p><strong>高级</strong></p><ul><li>allowUnreachableCode<br>检查不可达代码<br>可选值：<ul><li>true，忽略不可达代码</li><li>false，不可达代码将引起错误</li></ul></li><li>noEmitOnError<br>有错误的情况下不进行编译，默认值：false</li></ul></li></ul><h3 id="4、webpack">4、webpack</h3><p>通常情况下，实际开发中我们都需要使用构建工具对代码进行打包，TS同样也可以结合构建工具一起使用，下边以webpack为例介绍一下如何结合构建工具使用TS。<br>步骤：</p><ol><li>初始化项目<br>进入项目根目录，执行命令 <code>npm init -y</code>。<br>主要作用：创建package.json文件</li><li>下载构建工具<br><code>npm i -D webpack webpack-cli webpack-dev-server typescript ts-loader clean-webpack-plugin</code><ul><li>共安装了7个包<ul><li>webpack<br>构建工具webpack</li><li>webpack-cli<br>webpack的命令行工具</li><li>webpack-dev-server<br>webpack的开发服务器</li><li>typescript<br>ts编译器</li><li>ts-loader<br>ts加载器，用于在webpack中编译ts文件</li><li>html-webpack-plugin<br>webpack中html插件，用来自动创建html文件</li><li>clean-webpack-plugin<br>webpack中的清除插件，每次构建都会先清除目录</li></ul></li></ul></li><li>根目录下创建webpack的配置文件webpack.config.js <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">HtmlWebpackPlugin</span> = <span class="built_in">require</span>(<span class="string">&quot;html-webpack-plugin&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; <span class="title class_">CleanWebpackPlugin</span> &#125; = <span class="built_in">require</span>(<span class="string">&quot;clean-webpack-plugin&quot;</span>);</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="attr">optimization</span>:&#123;</span><br><span class="line">        <span class="attr">minimize</span>: <span class="literal">false</span> <span class="comment">// 关闭代码压缩，可选</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">entry</span>: <span class="string">&quot;./src/index.ts&quot;</span>,</span><br><span class="line">    <span class="attr">devtool</span>: <span class="string">&quot;inline-source-map&quot;</span>,</span><br><span class="line">    <span class="attr">devServer</span>: &#123;</span><br><span class="line">        <span class="attr">contentBase</span>: <span class="string">&#x27;./dist&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">output</span>: &#123;</span><br><span class="line">        <span class="attr">path</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&quot;dist&quot;</span>),</span><br><span class="line">        <span class="attr">filename</span>: <span class="string">&quot;bundle.js&quot;</span>,</span><br><span class="line">        <span class="attr">environment</span>: &#123;</span><br><span class="line">            <span class="attr">arrowFunction</span>: <span class="literal">false</span> <span class="comment">// 关闭webpack的箭头函数，可选</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">resolve</span>: &#123;</span><br><span class="line">        <span class="attr">extensions</span>: [<span class="string">&quot;.ts&quot;</span>, <span class="string">&quot;.js&quot;</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">module</span>: &#123;</span><br><span class="line">        <span class="attr">rules</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.ts$/</span>,</span><br><span class="line">                <span class="attr">use</span>: &#123;</span><br><span class="line">                  <span class="attr">loader</span>: <span class="string">&quot;ts-loader&quot;</span>     </span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">exclude</span>: <span class="regexp">/node_modules/</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">plugins</span>: [</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">CleanWebpackPlugin</span>(),</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">HtmlWebpackPlugin</span>(&#123;</span><br><span class="line">            <span class="attr">title</span>:<span class="string">&#x27;TS测试&#x27;</span></span><br><span class="line">        &#125;),</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>根目录下创建tsconfig.json，配置可以根据自己需要 <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;compilerOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;target&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ES2015&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;module&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ES2015&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;strict&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li>修改package.json添加如下配置 <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  ...略...</span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;test&quot;</span><span class="punctuation">:</span> <span class="string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webpack&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webpack serve --open chrome.exe&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  ...略...</span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li>在src下创建ts文件，并在并命令行执行<code>npm run build</code>对代码进行编译，或者执行<code>npm start</code>来启动开发服务器</li></ol><h3 id="5、Babel">5、Babel</h3><p>经过一系列的配置，使得TS和webpack已经结合到了一起，除了webpack，开发中还经常需要结合babel来对代码进行转换以使其可以兼容到更多的浏览器，在上述步骤的基础上，通过以下步骤再将babel引入到项目中。</p><ol><li>安装依赖包：<br><code>npm i -D @babel/core @babel/preset-env babel-loader core-js</code><ul><li>共安装了4个包，分别是：<ul><li>@babel/core<br>babel的核心工具</li><li>@babel/preset-env<br>babel的预定义环境</li><li>@babel-loader<br>babel在webpack中的加载器</li><li>core-js<br>core-js用来使老版本的浏览器支持新版ES语法</li></ul></li></ul></li><li>修改webpack.config.js配置文件<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">...略...</span><br><span class="line"><span class="attr">module</span>: &#123;</span><br><span class="line">    <span class="attr">rules</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">test</span>: <span class="regexp">/\.ts$/</span>,</span><br><span class="line">            <span class="attr">use</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">loader</span>: <span class="string">&quot;babel-loader&quot;</span>,</span><br><span class="line">                    <span class="attr">options</span>:&#123;</span><br><span class="line">                        <span class="attr">presets</span>: [</span><br><span class="line">                            [</span><br><span class="line">                                <span class="string">&quot;@babel/preset-env&quot;</span>,</span><br><span class="line">                                &#123;</span><br><span class="line">                                    <span class="string">&quot;targets&quot;</span>:&#123;</span><br><span class="line">                                        <span class="string">&quot;chrome&quot;</span>: <span class="string">&quot;58&quot;</span>,</span><br><span class="line">                                        <span class="string">&quot;ie&quot;</span>: <span class="string">&quot;11&quot;</span></span><br><span class="line">                                    &#125;,</span><br><span class="line">                                    <span class="string">&quot;corejs&quot;</span>:<span class="string">&quot;3&quot;</span>,</span><br><span class="line">                                    <span class="string">&quot;useBuiltIns&quot;</span>: <span class="string">&quot;usage&quot;</span></span><br><span class="line">                                &#125;</span><br><span class="line">                            ]</span><br><span class="line">                        ]</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">loader</span>: <span class="string">&quot;ts-loader&quot;</span>,</span><br><span class="line">                &#125;</span><br><span class="line">            ],</span><br><span class="line">            <span class="attr">exclude</span>: <span class="regexp">/node_modules/</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">...略...</span><br></pre></td></tr></table></figure>如此一来，使用ts编译后的文件将会再次被babel处理，使得代码可以在大部分浏览器中直接使用，可以在配置选项的targets中指定要兼容的浏览器版本。</li></ol><h2 id="第二章：面向对象">第二章：面向对象</h2><p>面向对象是程序中一个非常重要的思想，它被很多同学理解成了一个比较难，比较深奥的问题，其实不然。面向对象很简单，简而言之就是程序之中所有的操作都需要通过对象来完成。<br>举例来说：</p><ul><li>操作浏览器要使用window对象</li><li>操作网页要使用document对象</li><li>操作控制台要使用console对象<br>一切操作都要通过对象，也就是所谓的面向对象，那么对象到底是什么呢？这就要先说到程序是什么，计算机程序的本质就是对现实事物的抽象，抽象的反义词是具体，比如：照片是对一个具体的人的抽象，汽车模型是对具体汽车的抽象等等。程序也是对事物的抽象，在程序中我们可以表示一个人、一条狗、一把枪、一颗子弹等等所有的事物。一个事物到了程序中就变成了一个对象。<br>在程序中所有的对象都被分成了两个部分数据和功能，以人为例，人的姓名、性别、年龄、身高、体重等属于数据，人可以说话、走路、吃饭、睡觉这些属于人的功能。数据在对象中被成为属性，而功能就被称为方法。所以简而言之，在程序中一切皆是对象。</li></ul><h3 id="1、类（class）">1、类（class）</h3><p>要想面向对象，操作对象，首先便要拥有对象，那么下一个问题就是如何创建对象。要创建对象，必须要先定义类，所谓的类可以理解为对象的模型，程序中可以根据类创建指定类型的对象，举例来说：可以通过Person类来创建人的对象，通过Dog类创建狗的对象，通过Car类来创建汽车的对象，不同的类可以用来创建不同的对象。</p><ul><li>定义类：<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> 类名 &#123;</span><br><span class="line">属性名: 类型;</span><br><span class="line"><span class="title function_">constructor</span>(<span class="params">参数: 类型</span>)&#123;</span><br><span class="line"><span class="variable language_">this</span>.属性名 = 参数;</span><br><span class="line">&#125;</span><br><span class="line">方法名()&#123;</span><br><span class="line">....</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>示例：<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name: <span class="built_in">string</span>, age: <span class="built_in">number</span></span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">sayHello</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`大家好，我是<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>使用类：<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> p = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&#x27;孙悟空&#x27;</span>, <span class="number">18</span>);</span><br><span class="line">p.<span class="title function_">sayHello</span>();</span><br></pre></td></tr></table></figure></li></ul><h3 id="2、面向对象的特点">2、面向对象的特点</h3><h4 id="2-1、封装">2.1、封装</h4><ul><li>对象实质上就是属性和方法的容器，它的主要作用就是存储属性和方法，这就是所谓的封装</li><li>默认情况下，对象的属性是可以任意的修改的，为了确保数据的安全性，在TS中可以对属性的权限进行设置</li><li>只读属性（readonly）：<ul><li>如果在声明属性时添加一个readonly，则属性便成了只读属性无法修改</li></ul></li><li>TS中属性具有三种修饰符：<ul><li>public（默认值），可以在类、子类和对象中修改</li><li>protected ，可以在类、子类中修改</li><li>private ，可以在类中修改</li></ul></li><li>示例：<ul><li>public<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="attr">name</span>: <span class="built_in">string</span>; <span class="comment">// 写或什么都不写都是public</span></span><br><span class="line">    <span class="keyword">public</span> <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name: <span class="built_in">string</span>, age: <span class="built_in">number</span></span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name; <span class="comment">// 可以在类中修改</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">sayHello</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`大家好，我是<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Employee</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Person</span>&#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name: <span class="built_in">string</span>, age: <span class="built_in">number</span></span>)&#123;</span><br><span class="line">        <span class="variable language_">super</span>(name, age);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name; <span class="comment">//子类中可以修改</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> p = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&#x27;孙悟空&#x27;</span>, <span class="number">18</span>);</span><br><span class="line">p.<span class="property">name</span> = <span class="string">&#x27;猪八戒&#x27;</span>;<span class="comment">// 可以通过对象修改</span></span><br></pre></td></tr></table></figure></li><li>protected<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name: <span class="built_in">string</span>, age: <span class="built_in">number</span></span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name; <span class="comment">// 可以修改</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">sayHello</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`大家好，我是<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Employee</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Person</span>&#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name: <span class="built_in">string</span>, age: <span class="built_in">number</span></span>)&#123;</span><br><span class="line">        <span class="variable language_">super</span>(name, age);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name; <span class="comment">//子类中可以修改</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> p = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&#x27;孙悟空&#x27;</span>, <span class="number">18</span>);</span><br><span class="line">p.<span class="property">name</span> = <span class="string">&#x27;猪八戒&#x27;</span>;<span class="comment">// 不能修改</span></span><br></pre></td></tr></table></figure></li><li>private<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name: <span class="built_in">string</span>, age: <span class="built_in">number</span></span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name; <span class="comment">// 可以修改</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">sayHello</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`大家好，我是<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Employee</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Person</span>&#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name: <span class="built_in">string</span>, age: <span class="built_in">number</span></span>)&#123;</span><br><span class="line">        <span class="variable language_">super</span>(name, age);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name; <span class="comment">//子类中不能修改</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> p = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&#x27;孙悟空&#x27;</span>, <span class="number">18</span>);</span><br><span class="line">p.<span class="property">name</span> = <span class="string">&#x27;猪八戒&#x27;</span>;<span class="comment">// 不能修改</span></span><br></pre></td></tr></table></figure></li></ul></li><li>属性存取器<ul><li>对于一些不希望被任意修改的属性，可以将其设置为private</li><li>直接将其设置为private将导致无法再通过对象修改其中的属性</li><li>我们可以在类中定义一组读取、设置属性的方法，这种对属性读取或设置的属性被称为属性的存取器</li><li>读取属性的方法叫做setter方法，设置属性的方法叫做getter方法</li><li>示例：<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="attr">_name</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name: <span class="built_in">string</span></span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">_name</span> = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">get</span> <span class="title function_">name</span>()&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">_name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">set</span> <span class="title function_">name</span>(<span class="params">name: <span class="built_in">string</span></span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">_name</span> = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> p1 = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&#x27;孙悟空&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(p1.<span class="property">name</span>); <span class="comment">// 通过getter读取name属性</span></span><br><span class="line">p1.<span class="property">name</span> = <span class="string">&#x27;猪八戒&#x27;</span>; <span class="comment">// 通过setter修改name属性</span></span><br></pre></td></tr></table></figure></li></ul></li><li>静态属性<ul><li>静态属性（方法），也称为类属性。使用静态属性无需创建实例，通过类即可直接使用</li><li>静态属性（方法）使用static开头</li><li>示例：<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Tools</span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="variable constant_">PI</span> = <span class="number">3.1415926</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">sum</span>(<span class="params">num1: <span class="built_in">number</span>, num2: <span class="built_in">number</span></span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> num1 + num2</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Tools</span>.<span class="property">PI</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Tools</span>.<span class="title function_">sum</span>(<span class="number">123</span>, <span class="number">456</span>));</span><br></pre></td></tr></table></figure></li></ul></li><li>this<ul><li>在类中，使用this表示当前对象</li></ul></li></ul><h4 id="2-2、继承">2.2、继承</h4><ul><li>继承时面向对象中的又一个特性</li><li>通过继承可以将其他类中的属性和方法引入到当前类中<ul><li>示例：<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span>&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name: <span class="built_in">string</span>, age: <span class="built_in">number</span></span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Animal</span>&#123;</span><br><span class="line">    <span class="title function_">bark</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>在汪汪叫！`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> dog = <span class="keyword">new</span> <span class="title class_">Dog</span>(<span class="string">&#x27;旺财&#x27;</span>, <span class="number">4</span>);</span><br><span class="line">dog.<span class="title function_">bark</span>();</span><br></pre></td></tr></table></figure></li></ul></li><li>通过继承可以在不修改类的情况下完成对类的扩展</li><li>重写<ul><li>发生继承时，如果子类中的方法会替换掉父类中的同名方法，这就称为方法的重写</li><li>示例：<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span>&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name: <span class="built_in">string</span>, age: <span class="built_in">number</span></span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">run</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`父类中的run方法！`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Animal</span>&#123;</span><br><span class="line">    <span class="title function_">bark</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>在汪汪叫！`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">run</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`子类中的run方法，会重写父类中的run方法！`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> dog = <span class="keyword">new</span> <span class="title class_">Dog</span>(<span class="string">&#x27;旺财&#x27;</span>, <span class="number">4</span>);</span><br><span class="line">dog.<span class="title function_">bark</span>();</span><br></pre></td></tr></table></figure><ul><li>在子类中可以使用super来完成对父类的引用</li></ul></li></ul></li><li>抽象类（abstract class）<ul><li>抽象类是专门用来被其他类所继承的类，它只能被其他类所继承不能用来创建实例</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">Animal</span>&#123;</span><br><span class="line">    <span class="keyword">abstract</span> <span class="title function_">run</span>(): <span class="built_in">void</span>;</span><br><span class="line">    <span class="title function_">bark</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;动物在叫~&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Animals</span>&#123;</span><br><span class="line">    <span class="title function_">run</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;狗在跑~&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>使用abstract开头的方法叫做抽象方法，抽象方法没有方法体只能定义在抽象类中，继承抽象类时抽象方法必须要实现</li></ul></li></ul><h3 id="3、接口（Interface）">3、接口（Interface）</h3><p>接口的作用类似于抽象类，不同点在于接口中的所有方法和属性都是没有实值的，换句话说接口中的所有方法都是抽象方法。接口主要负责定义一个类的结构，接口可以去限制一个对象的接口，对象只有包含接口中定义的所有属性和方法时才能匹配接口。同时，可以让一个类去实现接口，实现接口时类中要保护接口中的所有属性。</p><ul><li>示例（检查对象类型）：<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="title function_">sayHello</span>():<span class="built_in">void</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params">per: Person</span>)&#123;</span><br><span class="line">    per.<span class="title function_">sayHello</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>(&#123;<span class="attr">name</span>:<span class="string">&#x27;孙悟空&#x27;</span>, <span class="title function_">sayHello</span>(<span class="params"></span>) &#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Hello, 我是 <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>`</span>)&#125;&#125;);</span><br></pre></td></tr></table></figure></li><li>示例（实现）<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="title function_">sayHello</span>():<span class="built_in">void</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">implements</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"><span class="keyword">public</span> name: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">sayHello</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;大家好，我是&#x27;</span>+<span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="4、泛型（Generic）">4、泛型（Generic）</h3><p>定义一个函数或类时，有些情况下无法确定其中要使用的具体类型（返回值、参数、属性的类型不能确定），此时泛型便能够发挥作用。<br>举个例子：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params">arg: <span class="built_in">any</span></span>): <span class="built_in">any</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> arg;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上例中，test函数有一个参数类型不确定，但是能确定的时其返回值的类型和参数的类型是相同的，由于类型不确定所以参数和返回值均使用了any，但是很明显这样做是不合适的，首先使用any会关闭TS的类型检查，其次这样设置也不能体现出参数和返回值是相同的类型</p><ul><li>使用泛型：</li></ul>  <figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> test&lt;T&gt;(<span class="attr">arg</span>: T): T&#123;</span><br><span class="line"><span class="keyword">return</span> arg;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>这里的<code>&lt;T&gt;</code>就是泛型，T是我们给这个类型起的名字（不一定非叫T），设置泛型后即可在函数中使用T来表示该类型。所以泛型其实很好理解，就表示某个类型。</li><li>那么如何使用上边的函数呢？<ul><li>方式一（直接使用）：<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">test</span>(<span class="number">10</span>)</span><br></pre></td></tr></table></figure><ul><li>使用时可以直接传递参数使用，类型会由TS自动推断出来，但有时编译器无法自动推断时还需要使用下面的方式</li></ul></li><li>方式二（指定类型）：<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test&lt;<span class="built_in">number</span>&gt;(<span class="number">10</span>)</span><br></pre></td></tr></table></figure><ul><li>也可以在函数后手动指定泛型</li></ul></li></ul></li><li>可以同时指定多个泛型，泛型间使用逗号隔开：<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> test&lt;T, K&gt;(<span class="attr">a</span>: T, <span class="attr">b</span>: K): K&#123;</span><br><span class="line">    <span class="keyword">return</span> b;</span><br><span class="line">&#125;</span><br><span class="line">test&lt;<span class="built_in">number</span>, <span class="built_in">string</span>&gt;(<span class="number">10</span>, <span class="string">&quot;hello&quot;</span>);</span><br></pre></td></tr></table></figure><ul><li>使用泛型时，完全可以将泛型当成是一个普通的类去使用</li></ul></li><li>类中同样可以使用泛型：<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyClass</span>&lt;T&gt;&#123;</span><br><span class="line">    <span class="attr">prop</span>: T;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">prop: T</span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">prop</span> = prop;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>除此之外，也可以对泛型的范围进行约束<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">MyInter</span>&#123;</span><br><span class="line">    <span class="attr">length</span>: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> test&lt;T <span class="keyword">extends</span> <span class="title class_">MyInter</span>&gt;(<span class="attr">arg</span>: T): <span class="built_in">number</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> arg.<span class="property">length</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>使用T extends MyInter表示泛型T必须是MyInter的子类，不一定非要使用接口类和抽象类同样适用。</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> typescipt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>希望学编程的同学都知道这些宝藏老师！</title>
      <link href="/posts/97ec1411.html"/>
      <url>/posts/97ec1411.html</url>
      
        <content type="html"><![CDATA[<div class="tip home"><p>以下文章来源于程序员库森，作者库森</p></div><div class="note info flat"><p>参考：<a href="https://mp.weixin.qq.com/s/WdRD5Kj_2z4NlLR0FLllyQ">希望计算机专业学生都知道这些宝藏老师</a></p></div><p>大家好，我是Fantasy。<br>今天给大家分享一些计算机专业的宝藏老师，这些都是名师，听他们的课程一点不枯燥，跟着名师学学起来事半功倍！</p><h2 id="1-c语言——翁凯老师-郝斌老师">1.  c语言——翁凯老师,郝斌老师</h2><p>翁凯老师是浙江大学的老师，讲的很细致，学他的课，你能感受到代码的美感，在他的引导下能去思考，是不少人的男神。<br><img src="https://img.777nx.cn/Java/%E5%B8%8C%E6%9C%9B%E5%AD%A6%E7%BC%96%E7%A8%8B%E7%9A%84%E5%90%8C%E5%AD%A6%E9%83%BD%E7%9F%A5%E9%81%93%E8%BF%99%E4%BA%9B%E5%AE%9D%E8%97%8F%E8%80%81%E5%B8%88%EF%BC%81/1.png" alt=""><br>入门还可以先看郝斌老师，郝斌老师几乎把c语言的根本原理都讲出来了，很基础很接地气的，很容易理解上手，是培训班的实操教学风格。<br><img src="https://img.777nx.cn/Java/%E5%B8%8C%E6%9C%9B%E5%AD%A6%E7%BC%96%E7%A8%8B%E7%9A%84%E5%90%8C%E5%AD%A6%E9%83%BD%E7%9F%A5%E9%81%93%E8%BF%99%E4%BA%9B%E5%AE%9D%E8%97%8F%E8%80%81%E5%B8%88%EF%BC%81/2.png" alt=""></p><h2 id="2-C-——侯捷老师">2.  C++ ——侯捷老师</h2><p>侯捷老师是《深入浅出MFC》作者，C++国内布道者，他的 C++ 视频广为人知！初学者通常被指针困扰，推荐去看侯捷老师的课程，看完后你会理解的完全透彻。<br><img src="https://img.777nx.cn/Java/%E5%B8%8C%E6%9C%9B%E5%AD%A6%E7%BC%96%E7%A8%8B%E7%9A%84%E5%90%8C%E5%AD%A6%E9%83%BD%E7%9F%A5%E9%81%93%E8%BF%99%E4%BA%9B%E5%AE%9D%E8%97%8F%E8%80%81%E5%B8%88%EF%BC%81/3.png" alt=""></p><h2 id="3-Python——北大陈斌老师">3. Python——北大陈斌老师</h2><p>陈斌老师全面而系统地讲述了Python的实质核心知识，课后测试. 作业和讲解分析都很到位，能很好地巩固学习。<br><img src="https://img.777nx.cn/Java/%E5%B8%8C%E6%9C%9B%E5%AD%A6%E7%BC%96%E7%A8%8B%E7%9A%84%E5%90%8C%E5%AD%A6%E9%83%BD%E7%9F%A5%E9%81%93%E8%BF%99%E4%BA%9B%E5%AE%9D%E8%97%8F%E8%80%81%E5%B8%88%EF%BC%81/4.png" alt=""></p><h2 id="4-Java——韩顺平老师">4.  Java——韩顺平老师</h2><p>韩老师毕业于清华大学，韩老师的这套课程对新手很 友好了， 韩老师在敲代码之前会先把概念捏的非常清楚，一定会举例说明！通俗易懂。<br><img src="https://img.777nx.cn/Java/%E5%B8%8C%E6%9C%9B%E5%AD%A6%E7%BC%96%E7%A8%8B%E7%9A%84%E5%90%8C%E5%AD%A6%E9%83%BD%E7%9F%A5%E9%81%93%E8%BF%99%E4%BA%9B%E5%AE%9D%E8%97%8F%E8%80%81%E5%B8%88%EF%BC%81/5.png" alt=""></p><h2 id="5-Linux——韩顺平老师">5.  Linux——韩顺平老师</h2><p>韩老师的Linux是非常经典的课程，他的图解式讲解我觉得特别易懂和舒服，韩老师的Linux课程包括基础篇,实操篇,高级篇,java定制篇,大数据定制篇, python定制篇, 企业面试题讲解篇。<br><img src="https://img.777nx.cn/Java/%E5%B8%8C%E6%9C%9B%E5%AD%A6%E7%BC%96%E7%A8%8B%E7%9A%84%E5%90%8C%E5%AD%A6%E9%83%BD%E7%9F%A5%E9%81%93%E8%BF%99%E4%BA%9B%E5%AE%9D%E8%97%8F%E8%80%81%E5%B8%88%EF%BC%81/6.png" alt=""></p><h2 id="6-数据结构——王卓老师，陈越老师">6.  数据结构——王卓老师，陈越老师</h2><p>青岛大学的王卓老师，老师讲的思路很清晰，零基础也没关系。<br><img src="https://img.777nx.cn/Java/%E5%B8%8C%E6%9C%9B%E5%AD%A6%E7%BC%96%E7%A8%8B%E7%9A%84%E5%90%8C%E5%AD%A6%E9%83%BD%E7%9F%A5%E9%81%93%E8%BF%99%E4%BA%9B%E5%AE%9D%E8%97%8F%E8%80%81%E5%B8%88%EF%BC%81/7.png" alt=""><br>浙大的陈越老师讲得蛮接地气的，但讲的比较快，用来巩固复习很不错。学完数据结构，建议刷题巩固。可以在牛客网上复习，有剑指offer和各类笔试题。<br><img src="https://img.777nx.cn/Java/%E5%B8%8C%E6%9C%9B%E5%AD%A6%E7%BC%96%E7%A8%8B%E7%9A%84%E5%90%8C%E5%AD%A6%E9%83%BD%E7%9F%A5%E9%81%93%E8%BF%99%E4%BA%9B%E5%AE%9D%E8%97%8F%E8%80%81%E5%B8%88%EF%BC%81/8.png" alt=""></p><h2 id="7-操作系统——哈工大李治军老师，南大蒋炎岩老师">7.  操作系统——哈工大李治军老师，南大蒋炎岩老师</h2><p>哈工大李治军老师每节课都带着回顾一下上一节内容；遇到问题先提出一个浅显直接的初级解法，然后在此基础逐渐优化。<br><img src="https://img.777nx.cn/Java/%E5%B8%8C%E6%9C%9B%E5%AD%A6%E7%BC%96%E7%A8%8B%E7%9A%84%E5%90%8C%E5%AD%A6%E9%83%BD%E7%9F%A5%E9%81%93%E8%BF%99%E4%BA%9B%E5%AE%9D%E8%97%8F%E8%80%81%E5%B8%88%EF%BC%81/9.png" alt=""><br>蒋炎岩老师的这门课整个课程从状态机的视角出发，像剥洋葱一样一层一层剥给你看，不仅有高质量的实验，还为学生开发了类似CMU课程中提到的代码抄袭检测工具。<br><img src="https://img.777nx.cn/Java/%E5%B8%8C%E6%9C%9B%E5%AD%A6%E7%BC%96%E7%A8%8B%E7%9A%84%E5%90%8C%E5%AD%A6%E9%83%BD%E7%9F%A5%E9%81%93%E8%BF%99%E4%BA%9B%E5%AE%9D%E8%97%8F%E8%80%81%E5%B8%88%EF%BC%81/10.png" alt=""></p><h2 id="8-计算机网络——中科大郑烇老师">8.  计算机网络——中科大郑烇老师</h2><p>郑老师不是照本宣科，讲的非常流畅，深入浅出，比起普通精品课要详细很多。小破站百分百的好评证明了一切。<br><img src="https://img.777nx.cn/Java/%E5%B8%8C%E6%9C%9B%E5%AD%A6%E7%BC%96%E7%A8%8B%E7%9A%84%E5%90%8C%E5%AD%A6%E9%83%BD%E7%9F%A5%E9%81%93%E8%BF%99%E4%BA%9B%E5%AE%9D%E8%97%8F%E8%80%81%E5%B8%88%EF%BC%81/11.png" alt=""></p><h2 id="9-计算机组成原理——哈工大刘宏伟老师">9. 计算机组成原理——哈工大刘宏伟老师</h2><p>配套的教材就是唐硕飞的教材，刘宏伟老师是唐朔飞老师的学生，如果有考哈工大的研究生配合这个视频相当不错。<br><img src="https://img.777nx.cn/Java/%E5%B8%8C%E6%9C%9B%E5%AD%A6%E7%BC%96%E7%A8%8B%E7%9A%84%E5%90%8C%E5%AD%A6%E9%83%BD%E7%9F%A5%E9%81%93%E8%BF%99%E4%BA%9B%E5%AE%9D%E8%97%8F%E8%80%81%E5%B8%88%EF%BC%81/12.png" alt=""></p><h2 id="10-数据库——哈工大战德臣">10. 数据库——哈工大战德臣</h2><p>战德臣老师大家都称他战神，战老师是教学名师，讲课很清晰，也很用心，每一节课都在标题里告诉你本节时长，讲解同时会告诉你怎么去思考，培养思维。<br><img src="https://img.777nx.cn/Java/%E5%B8%8C%E6%9C%9B%E5%AD%A6%E7%BC%96%E7%A8%8B%E7%9A%84%E5%90%8C%E5%AD%A6%E9%83%BD%E7%9F%A5%E9%81%93%E8%BF%99%E4%BA%9B%E5%AE%9D%E8%97%8F%E8%80%81%E5%B8%88%EF%BC%81/13.png" alt=""></p><h2 id="11-编译原理——哈工大陈鄞">11. 编译原理——哈工大陈鄞</h2><p>编译原理是计算机专业的进阶课，陈鄞老师的ppt做得很好，例题非常经典，教计算机很棒的美女老师真是少见呢。<br><img src="https://img.777nx.cn/Java/%E5%B8%8C%E6%9C%9B%E5%AD%A6%E7%BC%96%E7%A8%8B%E7%9A%84%E5%90%8C%E5%AD%A6%E9%83%BD%E7%9F%A5%E9%81%93%E8%BF%99%E4%BA%9B%E5%AE%9D%E8%97%8F%E8%80%81%E5%B8%88%EF%BC%81/14.png" alt=""></p><h2 id="12-机器学习——吴恩达老师，李宏毅老师">12.  机器学习——吴恩达老师，李宏毅老师</h2><p>吴恩达的机器学习课程是很多人的启蒙课程，难度适中且完全免费。Coursera平均得分4.9分，满分5分。学完这门课能够快速对整个机器学习知识点有比较整体的认识，便于快速入门。<br><img src="https://img.777nx.cn/Java/%E5%B8%8C%E6%9C%9B%E5%AD%A6%E7%BC%96%E7%A8%8B%E7%9A%84%E5%90%8C%E5%AD%A6%E9%83%BD%E7%9F%A5%E9%81%93%E8%BF%99%E4%BA%9B%E5%AE%9D%E8%97%8F%E8%80%81%E5%B8%88%EF%BC%81/15.png" alt=""><br>李老师的机器学习课程内容充实，讲解细致，会详细讲解DNN怎么来的，BP的推导过程！此课程配备大作业，且有详细的讲解和代码注释。<br><img src="https://img.777nx.cn/Java/%E5%B8%8C%E6%9C%9B%E5%AD%A6%E7%BC%96%E7%A8%8B%E7%9A%84%E5%90%8C%E5%AD%A6%E9%83%BD%E7%9F%A5%E9%81%93%E8%BF%99%E4%BA%9B%E5%AE%9D%E8%97%8F%E8%80%81%E5%B8%88%EF%BC%81/16.png" alt=""></p><h2 id="13-深度学习——李沐，李飞飞">13.  深度学习——李沐，李飞飞</h2><p>李沐老师是亚马逊AI主任科学家和 MXNet 的作者，李老师的课程偏实践，老师也会分享自己的心得，特别是课程后的答疑部分，真的能从大牛的思路中获得满满干货。<br><img src="https://img.777nx.cn/Java/%E5%B8%8C%E6%9C%9B%E5%AD%A6%E7%BC%96%E7%A8%8B%E7%9A%84%E5%90%8C%E5%AD%A6%E9%83%BD%E7%9F%A5%E9%81%93%E8%BF%99%E4%BA%9B%E5%AE%9D%E8%97%8F%E8%80%81%E5%B8%88%EF%BC%81/17.png" alt=""><br>斯坦福李飞飞的cs231n，是计算机视觉领域经典的入门课程。<br><img src="https://img.777nx.cn/Java/%E5%B8%8C%E6%9C%9B%E5%AD%A6%E7%BC%96%E7%A8%8B%E7%9A%84%E5%90%8C%E5%AD%A6%E9%83%BD%E7%9F%A5%E9%81%93%E8%BF%99%E4%BA%9B%E5%AE%9D%E8%97%8F%E8%80%81%E5%B8%88%EF%BC%81/18.png" alt=""><br>以上这些视频可以在小破站，大学mooc，YouTube搜到，搜老师人名就行！</p>]]></content>
      
      
      <categories>
          
          <category> 计算机基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机科学与技术 </tag>
            
            <tag> 软件工程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在线生成ascii字符画网站字符图案在线生成工具</title>
      <link href="/posts/2f3f0f05.html"/>
      <url>/posts/2f3f0f05.html</url>
      
        <content type="html"><![CDATA[<div class="tip home"><p>本文为 <a href="https://blog.csdn.net/qq_31708763/article/details/119712041">CSDN博主「JaneYork」</a>的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。</p></div><h2 id="前情提示">前情提示</h2><p>有时候会看到Redis或者其他软件，安装完成后会在控制台输出好看的文字图案。<br>这里记录一下字符画生成工具，用于定制Spring boot应用的启动画面。</p><p><a href="http://patorjk.com/software/taag">http://patorjk.com/software/taag</a><br><a href="http://www.network-science.de/ascii/">http://www.network-science.de/ascii/</a><br><a href="http://www.degraeve.com/img2txt.php">http://www.degraeve.com/img2txt.php</a><br><a href="http://life.chacuo.net/convertfont2char">http://life.chacuo.net/convertfont2char</a></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">███████╗ █████╗ ███╗   ██╗████████╗ █████╗ ███████╗██╗   ██╗</span><br><span class="line">██╔════╝██╔══██╗████╗  ██║╚══██╔══╝██╔══██╗██╔════╝╚██╗ ██╔╝</span><br><span class="line">█████╗  ███████║██╔██╗ ██║   ██║   ███████║███████╗ ╚████╔╝ </span><br><span class="line">██╔══╝  ██╔══██║██║╚██╗██║   ██║   ██╔══██║╚════██║  ╚██╔╝  </span><br><span class="line">██║     ██║  ██║██║ ╚████║   ██║   ██║  ██║███████║   ██║   </span><br><span class="line">╚═╝     ╚═╝  ╚═╝╚═╝  ╚═══╝   ╚═╝   ╚═╝  ╚═╝╚══════╝   ╚═╝   </span><br><span class="line">                                                            </span><br></pre></td></tr></table></figure><p>根据文字生成字符画：<br><a href="http://patorjk.com/software/taag">http://patorjk.com/software/taag</a><br><a href="http://www.network-science.de/ascii/">http://www.network-science.de/ascii/</a></p><p>根据图片生成字符画：<br><a href="http://www.degraeve.com/img2txt.php">http://www.degraeve.com/img2txt.php</a><br><a href="http://life.chacuo.net/convertphoto2char">http://life.chacuo.net/convertphoto2char</a></p><p>根据流程图生成字符画：<br><a href="http://asciiflow.com/">http://asciiflow.com/</a></p><p>idea插件<br><a href="https://github.com/OBKoro1/koro1FileHeader">https://github.com/OBKoro1/koro1FileHeader</a></p><h2 id="额外">额外</h2><p>参考：<a href="https://www.cnblogs.com/niumoo/p/10434746.html">https://www.cnblogs.com/niumoo/p/10434746.html</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring </tag>
            
            <tag> 字符图案 </tag>
            
            <tag> ascii </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>里程碑达成，10000次浏览</title>
      <link href="/posts/5f6deee1.html"/>
      <url>/posts/5f6deee1.html</url>
      
        <content type="html"><![CDATA[<h1>里程牌达成，10000次浏览</h1><p>时间过得真快，<br>一晃就来到了2022年的最后一天。<br>很遗憾，今年没有什么拿得出手的成绩。<br>如果非要说点什么的话，我倒有一份独享的里程牌式成就。<br>现在很骄傲地与你一起分享。</p><h2 id="1-10000浏览">1. 10000浏览</h2><p>这个里程碑式成就，就是：<br>自Fantasy的技术小站建站以来，博客文章的浏览量已经超过了10000次浏览。<br><img src="https://img.777nx.cn/%E5%8D%9A%E5%AE%A2/%E9%87%8C%E7%A8%8B%E7%A2%91%E8%BE%BE%E6%88%90%EF%BC%8C10000%E6%B5%8F%E8%A7%88/Snipaste_2022-12-31_19-31-00.png" alt=""></p><p>这个数据算多吗？</p><p>在中国这种人口量级的国家，任何一个热点新闻，又或者抖音爆款视频，浏览器都是1亿起步的。</p><p>我这还不到1/10000，何况前后我还用了半年时间，这个数据可以说是“无足轻重”。</p><p>但就我个人来说，我很满意，这是一份很不错的成绩。</p><p>我让更多的人加入了博客阵营。</p><p><strong>值得骄傲，值得炫耀。</strong></p><h2 id="2-十年之约">2. 十年之约</h2><p>我是在2021年12月份接触博客的，博客初期没有在意过文章内容，只是一味地寻找友情链接进行交换提高所谓的权重和知名度来满足自己的虚荣心。也正是这样误打误撞的点进了“十年之约”这个浪漫的联盟，被那句“即从加入这个活动起，我们的博客十年不关闭，保持更新和活力！”的slogan所吸引。</p><p>我高兴的点击了申请，在提交后故事就这样的开始了。</p><p><strong>望走出半生，归来仍是少年</strong></p><h2 id="3-捣鼓最新">3. 捣鼓最新</h2><p>在2022年的最后一天</p><p>我再次捣鼓了所有站点，站点再一次进化，也算是给了2022年一个交代。</p><ul><li><p><a href="https://www.777nx.cn/">Fantasy的技术小站</a>，由原来的<code>bolo</code>改成<code>hexo</code>，写一写 Markdown 文件然后直接推送到 github 仓库就会全自动部署，网站就可以将笔记渲染成十分好看的网页和布局，这种自动化部署和精美的页面是一种能让人十分愉快的体验 (当然前期得折腾很多东西啦😏)。</p></li><li><p><a href="https://vip.777nx.cn/">斯莱特林魔法学院</a>，增加了QQ登录和微信登录，同时设置了服务号推送，并且每天60秒读懂世界</p></li></ul><p><img src="https://img.777nx.cn/%E5%8D%9A%E5%AE%A2/%E9%87%8C%E7%A8%8B%E7%A2%91%E8%BE%BE%E6%88%90%EF%BC%8C10000%E6%B5%8F%E8%A7%88/Snipaste_2022-12-31_20-02-57.png" alt=""></p><p><img src="https://img.777nx.cn/%E5%8D%9A%E5%AE%A2/%E9%87%8C%E7%A8%8B%E7%A2%91%E8%BE%BE%E6%88%90%EF%BC%8C10000%E6%B5%8F%E8%A7%88/Snipaste_2022-12-31_20-21-47.png" alt=""></p><ul><li><a href="https://blue.777nx.cn/">爱情小站</a>，为网站添加灯笼</li></ul><p><img src="https://img.777nx.cn/%E5%8D%9A%E5%AE%A2/%E9%87%8C%E7%A8%8B%E7%A2%91%E8%BE%BE%E6%88%90%EF%BC%8C10000%E6%B5%8F%E8%A7%88/Snipaste_2022-12-31_20-11-00.png" alt=""></p><h2 id="4-遇到个女孩">4. 遇到个女孩</h2><p>今年没什么好事，就是遇到了个女孩子，动了想和她一辈子在一起的念头，她的出现让我放下以前，我很想一直陪着她</p><p><img src="https://image.777nx.cn/usr/uploads/2022/11/mmexport1664705720689.jpg" alt=""></p><p><img src="https://image.777nx.cn/usr/uploads/2022/11/3326814596.jpg" alt=""></p><h2 id="5-结尾">5. 结尾</h2><p>2023！</p><p>保持热爱，奔赴下一场山海。</p><p>我已经在期待100000次浏览了</p>]]></content>
      
      
      <categories>
          
          <category> 生活趣闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 里程碑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>瑞吉外卖项目剩余功能补充</title>
      <link href="/posts/a1e1aa91.html"/>
      <url>/posts/a1e1aa91.html</url>
      
        <content type="html"><![CDATA[<h1>瑞吉外卖项目剩余功能补充</h1><p>目录</p><ul><li>菜品启售和停售</li><li>菜品批量启售和批量停售</li><li>菜品的批量删除</li></ul><blockquote><p><strong>这个是自己基于学习B站 黑马瑞吉外卖项目，补充一些视频里面没有定义的功能或者是需要自己实现的功能。仅供学习参考，本人可能代码不太规范，但是功能自己测试是没有问题的。</strong></p></blockquote><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.bilibili.com/video/BV13a411q753?spm_id_from=333.337.search-card.all.click">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.bilibili.com/video/BV13a411q753?spm_id_from=333.337.search-card.all.click.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">黑马程序员Java项目实战《瑞吉外卖》</div>            <div class="tag-link-sitename">轻松掌握springboot + mybatis plus开发核心技术的真java实战项目_哔哩哔哩_bilibili</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h2 id="菜品启售和停售">菜品启售和停售</h2><p>前端发过来的请求（使用的是post方式）：<code>http://localhost:8080/dish/status/1?ids=1516568538387079169</code></p><p>后端接受的请求：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/status/&#123;status&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R&lt;String&gt; <span class="title function_">status</span><span class="params">(<span class="meta">@PathVariable(&quot;status&quot;)</span> Integer status,Long ids)</span>&#123;</span><br><span class="line">    log.info(<span class="string">&quot;status:&#123;&#125;&quot;</span>,status);</span><br><span class="line">    log.info(<span class="string">&quot;ids:&#123;&#125;&quot;</span>,ids);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现可以接收到前端参数后，开始补全controller层代码：在<code>DishController</code>中添加下面的接口代码；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 对菜品进行停售或者是起售</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/status/&#123;status&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R&lt;String&gt; <span class="title function_">status</span><span class="params">(<span class="meta">@PathVariable(&quot;status&quot;)</span> Integer status,Long ids)</span>&#123;</span><br><span class="line">    log.info(<span class="string">&quot;status:&#123;&#125;&quot;</span>,status);</span><br><span class="line">    log.info(<span class="string">&quot;ids:&#123;&#125;&quot;</span>,ids);</span><br><span class="line">    <span class="type">Dish</span> <span class="variable">dish</span> <span class="operator">=</span> dishService.getById(ids);</span><br><span class="line">    <span class="keyword">if</span> (dish != <span class="literal">null</span>)&#123;</span><br><span class="line">        dish.setStatus(status);</span><br><span class="line">        dishService.updateById(dish);</span><br><span class="line">        <span class="keyword">return</span> R.success(<span class="string">&quot;开始启售&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> R.error(<span class="string">&quot;售卖状态设置异常&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="菜品批量启售和批量停售">菜品批量启售和批量停售</h2><p>把上面对单个菜品的售卖状态的方法进行修改;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 对菜品批量或者是单个 进行停售或者是起售</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/status/&#123;status&#125;&quot;)</span></span><br><span class="line"><span class="comment">//这个参数这里一定记得加注解才能获取到参数，否则这里非常容易出问题</span></span><br><span class="line"><span class="keyword">public</span> R&lt;String&gt; <span class="title function_">status</span><span class="params">(<span class="meta">@PathVariable(&quot;status&quot;)</span> Integer status,<span class="meta">@RequestParam</span> List&lt;Long&gt; ids)</span>&#123;</span><br><span class="line">    <span class="comment">//log.info(&quot;status:&#123;&#125;&quot;,status);</span></span><br><span class="line">    <span class="comment">//log.info(&quot;ids:&#123;&#125;&quot;,ids);</span></span><br><span class="line">    LambdaQueryWrapper&lt;Dish&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>();</span><br><span class="line">    queryWrapper.in(ids !=<span class="literal">null</span>,Dish::getId,ids);</span><br><span class="line">    <span class="comment">//根据数据进行批量查询</span></span><br><span class="line">    List&lt;Dish&gt; list = dishService.list(queryWrapper);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span> (Dish dish : list) &#123;</span><br><span class="line">        <span class="keyword">if</span> (dish != <span class="literal">null</span>)&#123;</span><br><span class="line">            dish.setStatus(status);</span><br><span class="line">            dishService.updateById(dish);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> R.success(<span class="string">&quot;售卖状态修改成功&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>**注意：controller层的代码是不可以直接写业务的，建议把它抽离到service层，controller调用一下service的方法就行；**下面的<code>批量删除</code>功能是抽离的，controller没有写业务代码；</p></blockquote><h2 id="菜品的批量删除">菜品的批量删除</h2><p>前端发来的请求：</p><p><code>http://localhost:8080/dish?ids=1516568538387079169,1516568381817905154</code></p><p>在<code>DishController</code>中添加接口：</p><p>在<code>DishFlavor</code>实体类中，在<code>private Integer isDeleted;</code>字段上加上<code>@TableLogic</code>注解，表示删除是逻辑删除，由<code>mybatis-plus</code>提供的；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 套餐批量删除和单个删除</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@DeleteMapping</span></span><br><span class="line"><span class="keyword">public</span> R&lt;String&gt; <span class="title function_">delete</span><span class="params">(<span class="meta">@RequestParam(&quot;ids&quot;)</span> List&lt;Long&gt; ids)</span>&#123;</span><br><span class="line">        <span class="comment">//删除菜品  这里的删除是逻辑删除</span></span><br><span class="line">        dishService.deleteByIds(ids);</span><br><span class="line">        <span class="comment">//删除菜品对应的口味  也是逻辑删除</span></span><br><span class="line">        LambdaQueryWrapper&lt;DishFlavor&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">        queryWrapper.in(DishFlavor::getDishId,ids);</span><br><span class="line">        dishFlavorService.remove(queryWrapper);</span><br><span class="line">        <span class="keyword">return</span> R.success(<span class="string">&quot;菜品删除成功&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>DishService</code>中添加相关的方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据传过来的id批量或者是单个的删除菜品</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">deleteByIds</span><span class="params">(List&lt;Long&gt; ids)</span>;</span><br></pre></td></tr></table></figure><p>在实现类实现该方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *套餐批量删除和单个删除</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> ids</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteByIds</span><span class="params">(List&lt;Long&gt; ids)</span> &#123;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//构造条件查询器</span></span><br><span class="line">    LambdaQueryWrapper&lt;Dish&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">//先查询该菜品是否在售卖，如果是则抛出业务异常</span></span><br><span class="line">    queryWrapper.in(ids!=<span class="literal">null</span>,Dish::getId,ids);</span><br><span class="line">    List&lt;Dish&gt; list = <span class="built_in">this</span>.list(queryWrapper);</span><br><span class="line">    <span class="keyword">for</span> (Dish dish : list) &#123;</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">status</span> <span class="operator">=</span> dish.getStatus();</span><br><span class="line">        <span class="comment">//如果不是在售卖,则可以删除</span></span><br><span class="line">        <span class="keyword">if</span> (status == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">this</span>.removeById(dish.getId());</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//此时应该回滚,因为可能前面的删除了，但是后面的是正在售卖</span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">CustomException</span>(<span class="string">&quot;删除菜品中有正在售卖菜品,无法全部删除&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>功能测试：单个删除，批量删除，批量删除中有启售的…</p><p>测试成功！</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> idea </tag>
            
            <tag> mysql </tag>
            
            <tag> spring boot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tomcat</title>
      <link href="/posts/95ecbeba.html"/>
      <url>/posts/95ecbeba.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-Tomcat">1, Tomcat</h2><h3 id="1-1-简介">1.1 简介</h3><h4 id="1-1-1-什么是Web服务器">1.1.1 什么是Web服务器</h4><p>Web服务器是一个应用程序（==软件==），对HTTP协议的操作进行封装，使得程序员不必直接对协议进行操作，让Web开发更加便捷。主要功能是&quot;提供网上信息浏览服务&quot;。</p><p><img src="https://img.777nx.cn/Java/Tomcat/1627058356051.png" alt="1627058356051"></p><p>Web服务器是安装在服务器端的一款软件，将来我们把自己写的Web项目部署到Web Tomcat服务器软件中，当Web服务器软件启动后，部署在Web服务器软件中的页面就可以直接通过浏览器来访问了。</p><p><strong>Web服务器软件使用步骤</strong></p><ul><li>准备静态资源</li><li>下载安装Web服务器软件</li><li>将静态资源部署到Web服务器上</li><li>启动Web服务器使用浏览器访问对应的资源</li></ul><p>上述内容在演示的时候，使用的是Apache下的Tomcat软件，至于Tomcat软件如何使用，后面会详细的讲到。而对于Web服务器来说，实现的方案有很多，Tomcat只是其中的一种，而除了Tomcat以外，还有很多优秀的Web服务器，比如:</p><p><img src="https://img.777nx.cn/Java/Tomcat/1627060368806.png" alt="1627060368806"></p><p>Tomcat就是一款软件，我们主要是以学习如何去使用为主。具体我们会从以下这些方向去学习:</p><ol><li><p>简介: 初步认识下Tomcat</p></li><li><p>基本使用: 安装、卸载、启动、关闭、配置和项目部署，这些都是对Tomcat的基本操作</p></li><li><p>IDEA中如何创建Maven Web项目</p></li><li><p>IDEA中如何使用Tomcat,后面这两个都是我们以后开发经常会用到的方式</p></li></ol><p>首先我们来认识下Tomcat。</p><p><strong>Tomcat</strong></p><p>Tomcat的相关概念:</p><ul><li><p>Tomcat是Apache软件基金会一个核心项目，是一个开源免费的轻量级Web服务器，支持Servlet/JSP少量JavaEE规范。</p></li><li><p>概念中提到了JavaEE规范，那什么又是JavaEE规范呢?</p><p>JavaEE: Java Enterprise Edition,Java企业版。指Java企业级开发的技术规范总和。包含13项技术规范:JDBC、JNDI、EJB、RMI、JSP、Servlet、XML、JMS、Java IDL、JTS、JTA、JavaMail、JAF。</p></li><li><p>因为Tomcat支持Servlet/JSP规范，所以Tomcat也被称为Web容器、Servlet容器。Servlet需要依赖Tomcat才能运行。</p></li><li><p>Tomcat的官网: <a href="https://tomcat.apache.org/">https://tomcat.apache.org/</a> 从官网上可以下载对应的版本进行使用。</p></li></ul><p><strong>Tomcat的LOGO</strong></p><p><img src="https://img.777nx.cn/Java/Tomcat/1627176045795.png" alt="1627176045795"></p><p><strong>小结</strong></p><p>通过这一节的学习，我们需要掌握以下内容:</p><ol><li>Web服务器的作用</li></ol><blockquote><p>封装HTTP协议操作，简化开发</p><p>可以将Web项目部署到服务器中，对外提供网上浏览服务</p></blockquote><ol start="2"><li>Tomcat是一个轻量级的Web服务器，支持Servlet/JSP少量JavaEE规范，也称为Web容器，Servlet容器。</li></ol><h3 id="1-2-基本使用">1.2 基本使用</h3><p>Tomcat总共分两部分学习，先来学习Tomcat的基本使用，包括Tomcat的==下载、安装、卸载、启动和关闭==。</p><h4 id="1-2-1-下载">1.2.1 下载</h4><p>直接从官网下载</p><p><img src="https://img.777nx.cn/Java/Tomcat/1627178001030.png" alt="1627178001030"></p><p>大家可以自行下载，也可以直接使用资料中已经下载好的资源，</p><p>Tomcat的软件程序  资料/2. Tomcat/apache-tomcat-8.5.68-windows-x64.zip</p><p>Tomcat的源码资料/2. Tomcat/tomcat源码/apache-tomcat-8.5.68-src.zip</p><h4 id="1-2-2-安装">1.2.2 安装</h4><p>Tomcat是绿色版,直接解压即可</p><ul><li><p>在D盘的software目录下，将<code>apache-tomcat-8.5.68-windows-x64.zip</code>进行解压缩，会得到一个<code>apache-tomcat-8.5.68</code>的目录，Tomcat就已经安装成功。</p><p>==注意==，Tomcat在解压缩的时候，解压所在的目录可以任意，但最好解压到一个不包含中文和空格的目录，因为后期在部署项目的时候，如果路径有中文或者空格可能会导致程序部署失败。</p></li><li><p>打开<code>apache-tomcat-8.5.68</code>目录就能看到如下目录结构，每个目录中包含的内容需要认识下,</p><p><img src="https://img.777nx.cn/Java/Tomcat/1627178815892.png" alt="1627178815892"></p><p>bin:目录下有两类文件，一种是以<code>.bat</code>结尾的，是Windows系统的可执行文件，一种是以<code>.sh</code>结尾的，是Linux系统的可执行文件。</p><p>webapps:就是以后项目部署的目录</p><p>到此，Tomcat的安装就已经完成。</p></li></ul><h4 id="1-2-3-卸载">1.2.3 卸载</h4><p>卸载比较简单，可以直接删除目录即可</p><h4 id="1-2-4-启动">1.2.4 启动</h4><p>双击: bin\startup.bat</p><p><img src="https://img.777nx.cn/Java/Tomcat/1627179006011.png" alt="1627179006011"></p><p>启动后，通过浏览器访问 <code>http://localhost:8080</code>能看到Apache Tomcat的内容就说明Tomcat已经启动成功。</p><p><img src="https://img.777nx.cn/Java/Tomcat/1627199957728.png" alt="1627199957728"></p><p>==注意==: 启动的过程中，控制台有中文乱码，需要修改conf/logging.prooperties</p><p><img src="https://img.777nx.cn/Java/Tomcat/1627199827589.png" alt="1627199827589"></p><h4 id="1-2-5-关闭">1.2.5 关闭</h4><p>关闭有三种方式</p><ul><li>直接x掉运行窗口:强制关闭[不建议]</li><li>bin\shutdown.bat：正常关闭</li><li>ctrl+c： 正常关闭</li></ul><h4 id="1-2-6-配置">1.2.6 配置</h4><p><strong>修改端口</strong></p><ul><li>Tomcat默认的端口是8080，要想修改Tomcat启动的端口号，需要修改 conf/server.xml</li></ul><p><img src="https://img.777nx.cn/Java/Tomcat/1627200509883.png" alt="1627200509883"></p><blockquote><p>注: HTTP协议默认端口号为80，如果将Tomcat端口号改为80，则将来访问Tomcat时，将不用输入端口号。</p></blockquote><p><strong>启动时可能出现的错误</strong></p><ul><li><p>Tomcat的端口号取值范围是0-65535之间任意未被占用的端口，如果设置的端口号被占用，启动的时候就会包如下的错误</p><p><img src="https://img.777nx.cn/Java/Tomcat/1627200780590.png" alt="1627200780590"></p></li><li><p>Tomcat启动的时候，启动窗口一闪而过: 需要检查JAVA_HOME环境变量是否正确配置</p></li></ul><p><img src="https://img.777nx.cn/Java/Tomcat/1627201248802.png" alt="1627201248802"></p><h4 id="1-2-7-部署">1.2.7 部署</h4><ul><li><p>Tomcat部署项目： 将项目放置到webapps目录下，即部署完成。</p><p>但是呢随着项目的增大，项目中的资源也会越来越多，项目在拷贝的过程中也会越来越费时间，该如何解决呢?</p></li><li><p>一般JavaWeb项目会被打包称==war==包，然后将war包放到Webapps目录下，Tomcat会自动解压缩war文件</p></li></ul><p>至此，Tomcat的部署就已经完成了，至于如何获得项目对应的war包，后期我们会借助于IDEA工具来生成。</p><h3 id="1-3-Maven创建Web项目">1.3 Maven创建Web项目</h3><p>介绍完Tomcat的基本使用后，我们来学习在IDEA中如何创建Maven Web项目，学习这种方式的原因是以后Tomcat中运行的绝大多数都是Web项目，而使用Maven工具能更加简单快捷的把Web项目给创建出来，所以Maven的Web项目具体如何来构建呢?</p><p>在真正创建Maven Web项目之前，我们先要知道Web项目长什么样子，具体的结构是什么?</p><h4 id="1-3-1-Web项目结构">1.3.1 Web项目结构</h4><p>Web项目的结构分为:开发中的项目和开发完可以部署的Web项目,这两种项目的结构是不一样的，我们一个个来介绍下:</p><ul><li><p>Maven Web项目结构: 开发中的项目</p><p><img src="https://img.777nx.cn/Java/Tomcat/1627202865978.png" alt="1627202865978"></p></li><li><p>开发完成部署的Web项目</p><p><img src="https://img.777nx.cn/Java/Tomcat/1627202903750.png" alt="1627202903750"></p><ul><li>开发项目通过执行Maven打包命令==package==,可以获取到部署的Web项目目录</li><li>编译后的Java字节码文件和resources的资源文件，会被放到WEB-INF下的classes目录下</li><li>pom.xml中依赖坐标对应的jar包，会被放入WEB-INF下的lib目录下</li></ul></li></ul><h4 id="1-3-2-创建Maven-Web项目">1.3.2 创建Maven Web项目</h4><p>介绍完Maven Web的项目结构后，接下来使用Maven来创建Web项目，创建方式有两种:使用骨架和不使用骨架</p><p><strong>使用骨架</strong></p><blockquote><p>具体的步骤包含:</p><p>1.创建Maven项目</p><p>2.选择使用Web项目骨架</p><p>3.输入Maven项目坐标创建项目</p><p>4.确认Maven相关的配置信息后，完成项目创建</p><p>5.删除pom.xml中多余内容</p><p>6.补齐Maven Web项目缺失的目录结构</p></blockquote><ol><li><p>创建Maven项目</p><p><img src="https://img.777nx.cn/Java/Tomcat/1627227574092.png" alt="1627227574092"></p></li><li><p>选择使用Web项目骨架</p><p><img src="https://img.777nx.cn/Java/Tomcat/1627227650406.png" alt="1627227650406"></p></li><li><p>输入Maven项目坐标创建项目</p><p><img src="https://img.777nx.cn/Java/Tomcat/1627228065007.png" alt="1627228065007"></p></li><li><p>确认Maven相关的配置信息后，完成项目创建</p><p><img src="https://img.777nx.cn/Java/Tomcat/1627228413280.png" alt="1627228413280"></p></li><li><p>删除pom.xml中多余内容，只留下面的这些内容，注意打包方式 jar和war的区别</p><p><img src="https://img.777nx.cn/Java/Tomcat/1627228584625.png" alt="1627228584625"></p></li><li><p>补齐Maven Web项目缺失的目录结构，默认没有java和resources目录，需要手动完成创建补齐，最终的目录结果如下</p><p><img src="https://img.777nx.cn/Java/Tomcat/1627228673162.png" alt=""></p></li></ol><p><strong>不使用骨架</strong></p><blockquote><p>具体的步骤包含:</p><p>1.创建Maven项目</p><p>2.选择不使用Web项目骨架</p><p>3.输入Maven项目坐标创建项目</p><p>4.在pom.xml设置打包方式为war</p><p>5.补齐Maven Web项目缺失webapp的目录结构</p><p>6.补齐Maven Web项目缺失WEB-INF/web.xml的目录结构</p></blockquote><ol><li><p>创建Maven项目</p><p><img src="https://img.777nx.cn/Java/Tomcat/1627229111549.png" alt="1627229111549"></p></li><li><p>选择不使用Web项目骨架</p><p><img src="https://img.777nx.cn/Java/Tomcat/1627229137316.png" alt="1627229137316"></p></li><li><p>输入Maven项目坐标创建项目</p><p><img src="https://img.777nx.cn/Java/Tomcat/1627229371251.png" alt="1627229371251"></p></li><li><p>在pom.xml设置打包方式为war,默认是不写代表打包方式为jar</p><p><img src="https://img.777nx.cn/Java/Tomcat/1627229428161.png" alt="1627229428161"></p></li><li><p>补齐Maven Web项目缺失webapp的目录结构</p><p><img src="https://img.777nx.cn/Java/Tomcat/1627229584134.png" alt="1627229584134"></p></li><li><p>补齐Maven Web项目缺失WEB-INF/web.xml的目录结构</p><p><img src="https://img.777nx.cn/Java/Tomcat/1627229676800.png" alt="1627229676800"></p></li><li><p>补充完后，最终的项目结构如下:</p><p><img src="https://img.777nx.cn/Java/Tomcat/1627229478030.png" alt="1627229478030"></p></li></ol><p>上述两种方式，创建的web项目，都不是很全，需要手动补充内容，至于最终采用哪种方式来创建Maven Web项目，都是可以的，根据各自的喜好来选择使用即可。</p><p><strong>小结</strong></p><p>1.掌握Maven Web项目的目录结构</p><p>2.掌握使用骨架的方式创建Maven Web项目</p><p><img src="https://img.777nx.cn/Java/Tomcat/1627204022604.png" alt="1627204022604"></p><blockquote><p>3.掌握不使用骨架的方式创建Maven Web项目</p></blockquote><p><img src="https://img.777nx.cn/Java/Tomcat/1627204076090.png" alt="1627204076090"></p><h3 id="1-4-IDEA使用Tomcat">1.4 IDEA使用Tomcat</h3><ul><li>Maven Web项目创建成功后，通过Maven的package命令可以将项目打包成war包，将war文件拷贝到Tomcat的webapps目录下，启动Tomcat就可以将项目部署成功，然后通过浏览器进行访问即可。</li><li>然而我们在开发的过程中，项目中的内容会经常发生变化，如果按照上面这种方式来部署测试，是非常不方便的</li><li>如何在IDEA中能快速使用Tomcat呢?</li></ul><p>在IDEA中集成使用Tomcat有两种方式，分别是==集成本地Tomcat==和==Tomcat Maven插件==</p><h4 id="1-4-1-集成本地Tomcat">1.4.1 集成本地Tomcat</h4><p>目标: 将刚才本地安装好的Tomcat8集成到IDEA中，完成项目部署，具体的实现步骤</p><ol><li><p>打开添加本地Tomcat的面板</p><p><img src="https://img.777nx.cn/Java/Tomcat/1627229992900.png" alt="1627229992900"></p></li><li><p>指定本地Tomcat的具体路径</p></li></ol><p><img src="https://img.777nx.cn/Java/Tomcat/1627230313062.png" alt="1627230313062"></p><ol start="3"><li><p>修改Tomcat的名称，此步骤可以不改，只是让名字看起来更有意义，HTTP port中的端口也可以进行修改，比如把8080改成80</p><p><img src="https://img.777nx.cn/Java/Tomcat/1627230366658.png" alt="1627230366658"></p></li><li><p>将开发项目部署项目到Tomcat中</p><p><img src="https://img.777nx.cn/Java/Tomcat/1627230913259.png" alt="1627230913259"></p><p>扩展内容： xxx.war和 xxx.war exploded这两种部署项目模式的区别?</p><ul><li><p>war模式是将WEB工程打成war包，把war包发布到Tomcat服务器上</p></li><li><p>war exploded模式是将WEB工程以当前文件夹的位置关系发布到Tomcat服务器上</p></li><li><p>war模式部署成功后，Tomcat的webapps目录下会有部署的项目内容</p></li><li><p>war exploded模式部署成功后，Tomcat的webapps目录下没有，而使用的是项目的target目录下的内容进行部署</p></li><li><p>建议大家都选war模式进行部署，更符合项目部署的实际情况</p></li></ul></li><li><p>部署成功后，就可以启动项目，为了能更好的看到启动的效果，可以在webapp目录下添加a.html页面</p><p><img src="https://img.777nx.cn/Java/Tomcat/1627233265351.png" alt="1627233265351"></p></li><li><p>启动成功后，可以通过浏览器进行访问测试</p><p><img src="https://img.777nx.cn/Java/Tomcat/1627232743706.png" alt="1627232743706"></p></li><li><p>最终的注意事项</p><p><img src="https://img.777nx.cn/Java/Tomcat/1627232916624.png" alt="1627232916624"></p></li></ol><p>至此，IDEA中集成本地Tomcat进行项目部署的内容我们就介绍完了，整体步骤如下，大家需要按照流程进行部署操作练习。</p><p><img src="https://img.777nx.cn/Java/Tomcat/1627205657117.png" alt="1627205657117"></p><h4 id="1-4-2-Tomcat-Maven插件">1.4.2 Tomcat Maven插件</h4><p>在IDEA中使用本地Tomcat进行项目部署，相对来说步骤比较繁琐，所以我们需要一种更简便的方式来替换它，那就是直接使用Maven中的Tomcat插件来部署项目，具体的实现步骤，只需要两步，分别是:</p><ol><li><p>在pom.xml中添加Tomcat插件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--Tomcat插件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>使用Maven Helper插件快速启动项目，选中项目，右键–&gt;Run Maven --&gt; tomcat7:run</p></li></ol><p><img src="https://img.777nx.cn/Java/Tomcat/1627233963315.png" alt="1627233963315"></p><p>==注意:==</p><ul><li>如果选中项目并右键点击后，看不到Run Maven和Debug Maven，这个时候就需要在IDEA中下载Maven Helper插件，具体的操作方式为: File --&gt; Settings --&gt; Plugins --&gt; Maven Helper —&gt; Install,安装完后按照提示重启IDEA，就可以看到了。</li></ul><p><img src="https://img.777nx.cn/Java/Tomcat/1627234184076.png" alt="1627234184076"></p><ul><li>Maven Tomcat插件目前只有Tomcat7版本，没有更高的版本可以使用</li><li>使用Maven Tomcat插件，要想修改Tomcat的端口和访问路径，可以直接修改pom.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--Tomcat插件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">port</span>&gt;</span>80<span class="tag">&lt;/<span class="name">port</span>&gt;</span><span class="comment">&lt;!--访问端口号 --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--项目访问路径</span></span><br><span class="line"><span class="comment">未配置访问路径: http://localhost:80/tomcat-demo2/a.html</span></span><br><span class="line"><span class="comment">配置/后访问路径: http://localhost:80/a.html</span></span><br><span class="line"><span class="comment">如果配置成 /hello,访问路径会变成什么?</span></span><br><span class="line"><span class="comment">答案: http://localhost:80/hello/a.html</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">path</span>&gt;</span>/<span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>小结</strong></p><p>通过这一节的学习，大家要掌握在IDEA中使用Tomcat的两种方式，集成本地Tomcat和使用Maven的Tomcat插件。后者更简单，推荐大家使用，但是如果对于Tomcat的版本有比较高的要求，要在Tomcat7以上，这个时候就只能用前者了。</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tomcat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在大学如何避免脱单？</title>
      <link href="/posts/ad4a944a.html"/>
      <url>/posts/ad4a944a.html</url>
      
        <content type="html"><![CDATA[<p>从拿到录取通知书那一天起就有校区攻略、报到攻略、大学生活攻略等等，到了大学以后，会有转专业攻略、第二课堂学分攻略、选课攻略······</p><p>但是却从来没有前辈教过我们，<strong>在大学该如何才能保持单身</strong>。一不小心我们就容易陷入爱情的泥沼，不但浪费我们的精力和金钱，更容易耽误我们的时间，影响我们的学习</p><p>那么我们在大学该<strong>如何避免脱单</strong>呢？</p><p><strong>01</strong></p><p><strong>让自己沉浸在学习的世界</strong></p><p>要针对学校的男女比例，从根源上防止同学们的脱单。</p><p>但很多专业课程难度系数也是最大的。想要不挂科甚至取得好成绩，就要努力学习，这样就减少了自己脱单的几率。</p><p>总而言之，各位同学如果想要避免自己脱单，就要让自己沉浸在学习的世界里，两耳不闻窗外事，学完自己本专业的专业课后，也可以去其他学院蹭课，多选一些课时多难度大的选修课，有竞赛和加入实验室的机会一定不要放过，这样才能不荒废自己的大学时光。</p><p><strong>02</strong></p><p><strong>提高警惕，谨慎面对搭讪</strong></p><p>假如有好看的学弟/学妹向你搭讪，想加你的微信，一定要坚决拒绝，万一对方是微商，加了你以后向你推荐保健品，你要不要买？</p><p>在食堂遇到陌生的同学没法刷卡，然后说要加你的微信把钱转给你，一定要说“你扫我的收款码就可以了，不用加微信。”</p><p>假如有同班同学向你咨询问题，你也最好说你不清楚不知道，如果你帮对方解答了对方要请你吃饭，岂不是很难应对？</p><p>快到冬天了，如果你是男孩子，有女生想拿你当暖手宝，一定要理智拒绝，并告诉她这是体寒虚弱的缘故，平时要注意补充营养和加强锻炼。</p><p>总之，在遇到莫名的搭讪时，一定要保持清醒的头脑。用自己高冷的言行和态度告诉向你搭讪的人，你不是一个随便的人。</p><p><strong>03</strong></p><p><strong>学会收敛锋芒，隐藏实力</strong></p><p>一个人成熟的标志，就是他学会了收敛锋芒和隐藏实力。</p><p>如果你的歌唱的好，千万不要参加师大的校园歌手大赛，万一你动听的歌声被台下的听众听到了，岂不给自己惹麻烦？</p><p>如果你擅长组织活动，也不要加入学校里的各种社团，这样你杰出的组织能力就会被他人发现。</p><p><strong>04</strong></p><p><strong>多珍惜和室友的相处时光</strong></p><p>青春岁月不饶人，大学四年时光转瞬即逝，所以一定要珍惜和自己同宿舍室友们的相处时光，平时多呆在宿舍里陪室友打打游戏，一起上分，不要总是跑出去玩。</p><p>因为跑出去就容易到一些比较危险、脱单率很高的区域，比如篮球场（篮球场上有很多打篮球的帅帅的男孩子），比如远处的隔壁男女失衡的学校，比如操场（操场上有很多手拉手散步的情侣容易激起脱单欲望）等等。</p><p>记住，宿舍永远是你在大学里最温暖最安全的地方。</p><hr><p>以上就是某不愿透露姓名的学姐在大学<strong>保持单身的切身体验</strong>。方法都很简单，贵在落实。</p><p>每年都有很多的大学生因为沉迷于谈恋爱而荒废了自己大好的青春，学姐看到都痛心不已。希望你们能保持初心牢记使命，避免成为爱情的牺牲品</p>]]></content>
      
      
      <categories>
          
          <category> 生活趣闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大学 </tag>
            
            <tag> 脱单 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL安装文档</title>
      <link href="/posts/2b8bb09d.html"/>
      <url>/posts/2b8bb09d.html</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>安装环境:Win10 64位</strong><br><strong>软件版本:MySQL 5.7.24 解压版</strong></p></blockquote><h2 id="一、下载">一、下载</h2><p>点开下面的链接：</p><p><a href="https://downloads.mysql.com/archives/community/">https://downloads.mysql.com/archives/community/</a></p><p><img src="https://img.777nx.cn/Java/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/image-20210404200055449.png" alt="image-20210404200055449"></p><p>选择选择和自己<strong>系统位数</strong>相对应的版本点击右边的<code>Download</code>，此时会进到另一个页面，同样在接近页面底部的地方找到如下图所示的位置：</p><p><img src="https://img.777nx.cn/Java/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/1556823-20181220194715840-436169502.png" alt="img"></p><p>不用理会上面的登录和注册按钮，直接点击<code>No thanks, just start my download.</code>就可以下载。</p><p><img src="https://img.777nx.cn/Java/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/image-20201109134805641.png" alt="image-20201109134805641"></p><h2 id="二、安装-解压">二、安装(解压)</h2><p>下载完成后我们得到的是一个压缩包，将其解压，我们就可以得到MySQL 5.7.24的软件本体了(就是一个文件夹)，我们可以把它放在你想安装的位置。</p><p><img src="https://img.777nx.cn/Java/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/image-20201109134948046.png" alt="image-20201109134948046"></p><h2 id="三、配置">三、配置</h2><h3 id="1-添加环境变量">1. 添加环境变量</h3><blockquote><p>环境变量里面有很多选项，这里我们只用到<code>Path</code>这个参数。为什么在初始化的开始要添加环境变量呢？<br>在黑框(即CMD)中输入一个可执行程序的名字，Windows会先在环境变量中的<code>Path</code>所指的路径中寻找一遍，如果找到了就直接执行，没找到就在当前工作目录找，如果还没找到，就报错。我们添加环境变量的目的就是能够在任意一个黑框直接调用MySQL中的相关程序而不用总是修改工作目录，大大简化了操作。</p></blockquote><p>右键<code>此电脑</code>→<code>属性</code>，点击<code>高级系统设置</code></p><p><img src="https://img.777nx.cn/Java/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/1556823-20181220220242472-524708778.png" alt="img"></p><p>点击<code>环境变量</code></p><p><img src="https://img.777nx.cn/Java/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/1556823-20181220220359609-736422950.png" alt="img"></p><p>在<code>系统变量</code>中新建MYSQL_HOME</p><p><img src="https://img.777nx.cn/Java/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/image-20201109140222488.png" alt="image-20201109140222488"></p><p>在<code>系统变量</code>中找到并<strong>双击</strong><code>Path</code></p><p><img src="https://img.777nx.cn/Java/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/1556823-20181220220551145-1198958872.png" alt="img"></p><p>点击<code>新建</code></p><p><img src="https://img.777nx.cn/Java/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/image-20201109135248104.png" alt="image-20201109135248104"></p><p>最后点击确定。</p><p><strong>如何验证是否添加成功？</strong></p><p>右键开始菜单(就是屏幕左下角)，选择<code>命令提示符(管理员)</code>，打开黑框，敲入<code>mysql</code>，回车。<br>如果提示<code>Can't connect to MySQL server on 'localhost'</code>则证明添加成功；<br>如果提示<code>mysql不是内部或外部命令，也不是可运行的程序或批处理文件</code>则表示添加添加失败，请重新检查步骤并重试。</p><h3 id="2-新建配置文件">2. 新建配置文件</h3><p>新建一个文本文件，内容如下：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">[mysql]</span></span><br><span class="line"><span class="attr">default-character-set</span>=<span class="string">utf8</span></span><br><span class="line"></span><br><span class="line"><span class="attr">[mysqld]</span></span><br><span class="line"><span class="attr">character-set-server</span>=<span class="string">utf8</span></span><br><span class="line"><span class="attr">default-storage-engine</span>=<span class="string">INNODB</span></span><br><span class="line"><span class="attr">sql_mode</span>=<span class="string">STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</span></span><br></pre></td></tr></table></figure><p>把上面的文本文件另存为，在保存类型里选<code>所有文件 (*.*)</code>，文件名叫<code>my.ini</code>，存放的路径为MySQL的<code>根目录</code>(例如我的是<code>D:\software\mysql-5.7.24-winx64</code>,根据自己的MySQL目录位置修改)。</p><p><img src="https://img.777nx.cn/Java/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/image-20201109142704951.png" alt="image-20201109142704951"></p><p><img src="https://img.777nx.cn/Java/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/image-20201109142737584.png" alt="image-20201109142737584"></p><p>上面代码意思就是配置数据库的默认编码集为utf-8和默认存储引擎为INNODB。</p><h3 id="3-初始化MySQL">3. 初始化MySQL</h3><p>在刚才的黑框中敲入<code>mysqld --initialize-insecure</code>，回车，稍微等待一会，如果出现没有出现报错信息(如下图)则证明data目录初始化没有问题，此时再查看MySQL目录下已经有data目录生成。</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld <span class="comment">--initialize-insecure</span></span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/Java/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/image-20201109140955772.png" alt="image-20201109140955772"></p><p>tips：如果出现如下错误</p><p><img src="https://img.777nx.cn/Java/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/image-20201109135848054.png" alt="image-20201109135848054"></p><p>是由于权限不足导致的，去<code>C:\Windows\System32</code> 下以管理员方式运行 cmd.exe</p><p><img src="https://img.777nx.cn/Java/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/image-20201109140423691.png" alt="image-20201109140423691"></p><p><img src="https://img.777nx.cn/Java/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/image-20201109140001186.png" alt="image-20201109140001186"></p><h3 id="4-注册MySQL服务">4. 注册MySQL服务</h3><p>在黑框里敲入<code>mysqld -install</code>，回车。</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld -<span class="keyword">install</span></span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/Java/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/image-20201109141325810.png" alt="image-20201109141325810"></p><p>现在你的计算机上已经安装好了MySQL服务了。</p><p>MySQL服务器</p><h3 id="5-启动MySQL服务">5. 启动MySQL服务</h3><p>在黑框里敲入<code>net start mysql</code>，回车。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">net start mysql  <span class="comment">// 启动mysql服务</span></span><br><span class="line">    </span><br><span class="line">net stop mysql  <span class="comment">// 停止mysql服务</span></span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/Java/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/1556823-20181221093036851-1317238155.png" alt="img"></p><h3 id="6-修改默认账户密码">6. 修改默认账户密码</h3><p>在黑框里敲入<code>mysqladmin -u root password 1234</code>，这里的<code>1234</code>就是指默认管理员(即root账户)的密码，可以自行修改成你喜欢的。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">mysqladmin</span> -u root password <span class="number">1234</span></span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/Java/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/1556823-20181221093251250-819416425.png" alt="img"></p><p><strong>至此，MySQL 5.7 解压版安装完毕！</strong></p><h2 id="四、登录MySQL">四、登录MySQL</h2><p>右键开始菜单，选择<code>命令提示符</code>，打开黑框。<br>在黑框中输入，<code>mysql -uroot -p1234</code>，回车，出现下图且左下角为<code>mysql&gt;</code>，则登录成功。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">mysql</span> -uroot -p1234</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/Java/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/1556823-20181220222422178-61579658.png" alt="img"></p><p><strong>到这里你就可以开始你的MySQL之旅了！</strong></p><p>退出mysql：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">exit</span></span><br><span class="line">quit</span><br></pre></td></tr></table></figure><p>登陆参数：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">mysql</span> -u用户名 -p密码 -h要连接的mysql服务器的ip地址(默认<span class="number">127.0.0.1</span>) -P端口号(默认<span class="number">3306</span>)</span><br></pre></td></tr></table></figure><h2 id="五、卸载MySQL">五、卸载MySQL</h2><p>如果你想卸载MySQL，也很简单。</p><p>右键开始菜单，选择<code>命令提示符(管理员)</code>，打开黑框。</p><ol><li>敲入<code>net stop mysql</code>，回车。</li></ol><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net stop mysql</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/Java/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/1556823-20181220222924783-57600848.png" alt="img"></p><ol start="2"><li>再敲入<code>mysqld -remove mysql</code>，回车。</li></ol><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld -<span class="built_in">remove</span> mysql</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/Java/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/1556823-20181220223025128-587235464.png" alt="img"></p><ol start="3"><li>最后删除MySQL目录及相关的环境变量。</li></ol><p><strong>至此，MySQL卸载完成！</strong></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql基础</title>
      <link href="/posts/8e40d0ad.html"/>
      <url>/posts/8e40d0ad.html</url>
      
        <content type="html"><![CDATA[<div class="note success flat"><p>笔记来自于黑马程序员课程</p></div><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.bilibili.com/video/BV1Qf4y1T7Hx/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.bilibili.com/video/BV1Qf4y1T7Hx/.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">黑马程序员JavaWeb基础教程</div>            <div class="tag-link-sitename">Java web从入门到企业实战完整版</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h2 id="MySQL基础">MySQL基础</h2><p><strong>今日目标：</strong></p><blockquote><ul><li>完成MySQL的安装及登陆基本操作</li><li>能通过SQL对数据库进行CRUD</li><li>能通过SQL对表进行CRUD</li><li>能通过SQL对数据进行CRUD</li></ul></blockquote><h2 id="1，数据库相关概念">1，数据库相关概念</h2><p>以前我们做系统，数据持久化的存储采用的是文件存储。存储到文件中可以达到系统关闭数据不会丢失的效果，当然文件存储也有它的弊端。</p><p>假设在文件中存储以下的数据：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">姓名年龄性别住址</span><br><span class="line">张三23男北京西三旗</span><br><span class="line">李四24女北京西二旗</span><br><span class="line">王五25男西安软件新城</span><br></pre></td></tr></table></figure><p>现要修改李四这条数据的性别数据改为男，我们现学习的IO技术可以通过将所有的数据读取到内存中，然后进行修改再存到该文件中。通过这种方式操作存在很大问题，现在只有三条数据，如果文件中存储1T的数据，那么就会发现内存根本就存储不了。</p><p>现需要既能持久化存储数据，也要能避免上述问题的技术使用在我们的系统中。数据库就是这样的一门技术。</p><h3 id="1-1-数据库">1.1  数据库</h3><ul><li><p>==存储和管理数据的仓库，数据是有组织的进行存储。==</p></li><li><p>数据库英文名是 DataBase，简称DB。</p></li></ul><p>数据库就是将数据存储在硬盘上，可以达到持久化存储的效果。那又是如何解决上述问题的？使用数据库管理系统。</p><h3 id="1-2-数据库管理系统">1.2  数据库管理系统</h3><ul><li>==管理数据库的大型软件==</li><li>英文：DataBase Management System，简称 DBMS</li></ul><p>在电脑上安装了数据库管理系统后，就可以通过数据库管理系统创建数据库来存储数据，也可以通过该系统对数据库中的数据进行数据的增删改查相关的操作。我们平时说的MySQL数据库其实是MySQL数据库管理系统。</p><img src="https://img.777nx.cn/test/image-20210721185923635.png" alt="image-20210721185923635" style="zoom:80%;" /><p>通过上面的描述，大家应该已经知道了 <code>数据库管理系统</code> 和 <code>数据库</code> 的关系。那么有有哪些常见的数据库管理系统呢？</p><h3 id="1-3-常见的数据库管理系统">1.3  常见的数据库管理系统</h3><img src="https://img.777nx.cn/test/image-20210721184354001.png" alt="image-20210721184354001" style="zoom:70%;" /><p>接下来对上面列举的数据库管理系统进行简单的介绍：</p><ul><li>Oracle：收费的大型数据库，Oracle 公司的产品</li><li>==MySQL==： 开源免费的中小型数据库。后来 Sun公司收购了 MySQL，而 Sun 公司又被 Oracle 收购</li><li>SQL Server：MicroSoft 公司收费的中型的数据库。C#、.net 等语言常使用</li><li>PostgreSQL：开源免费中小型的数据库</li><li>DB2：IBM 公司的大型收费数据库产品</li><li>SQLite：嵌入式的微型数据库。如：作为 Android 内置数据库</li><li>MariaDB：开源免费中小型的数据库</li></ul><p>我们课程上学习的是MySQL数据库管理系统，PostgreSQL在一些公司也有使用，此时大家肯定会想以后在公司中如果使用我们没有学习过程的PostgreSQL数据库管理系统怎么办？这点大家大可不必担心，如下图所示：</p><img src="https://img.777nx.cn/test/image-20210721185303106.png" alt="image-20210721185303106" style="zoom:80%;" /><p>我们可以通过数据库管理系统操作数据库，对数据库中的数据进行增删改查操作，而怎么样让用户跟数据库管理系统打交道呢？就可以通过一门编程语言（SQL）来实现。</p><h3 id="1-4-SQL">1.4  SQL</h3><ul><li>英文：Structured Query Language，简称 SQL，结构化查询语言</li><li>操作关系型数据库的编程语言</li><li>定义操作所有关系型数据库的统一标准，可以使用SQL操作所有的关系型数据库管理系统，以后工作中如果使用到了其他的数据库管理系统，也同样的使用SQL来操作。</li></ul><h2 id="2，MySQL">2，MySQL</h2><h3 id="2-1-MySQL安装">2.1  MySQL安装</h3><blockquote><p><strong>安装环境:Win10 64位</strong><br><strong>软件版本:MySQL 5.7.24 解压版</strong></p></blockquote><h4 id="2-1-1-下载">2.1.1  下载</h4><p><a href="https://downloads.mysql.com/archives/community/">https://downloads.mysql.com/archives/community/</a></p><p>点开上面的链接就能看到如下界面：</p><img src="https://img.777nx.cn/test/image-20210404200055449.png" alt="image-20210404200055449" style="zoom:80%;" /><p>选择选择和自己<strong>系统位数</strong>相对应的版本点击右边的<code>Download</code>，此时会进到另一个页面，同样在接近页面底部的地方找到如下图所示的位置：</p><img src="https://img.777nx.cn/test/1556823-20181220194715840-436169502.png" alt="img" style="zoom:80%;" /><p>不用理会上面的登录和注册按钮，直接点击 <code>No thanks, just start my download.</code> 就可以下载。</p><p><img src="https://img.777nx.cn/test/image-20201109134805641.png" alt="image-20201109134805641"></p><h4 id="2-1-2-安装-解压">2.1.2  安装(解压)</h4><p>下载完成后我们得到的是一个压缩包，将其解压，我们就可以得到MySQL 5.7.24的软件本体了(就是一个文件夹)，我们可以把它放在你想安装的位置。</p><p><img src="https://img.777nx.cn/test/image-20201109134948046.png" alt="image-20201109134948046"></p><h3 id="2-2-MySQL卸载">2.2  MySQL卸载</h3><p>如果你想卸载MySQL，也很简单。</p><p>右键开始菜单，选择<code>命令提示符(管理员)</code>，打开黑框。</p><ol><li>敲入<code>net stop mysql</code>，回车。</li></ol><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net stop mysql</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/1556823-20181220222924783-57600848.png" alt="img"></p><ol start="2"><li>再敲入<code>mysqld -remove mysql</code>，回车。</li></ol><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld -<span class="built_in">remove</span> mysql</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/1556823-20181220223025128-587235464.png" alt="img"></p><ol start="3"><li>最后删除MySQL目录及相关的环境变量。</li></ol><p><strong>至此，MySQL卸载完成！</strong></p><h3 id="2-3-MySQL配置">2.3  MySQL配置</h3><h4 id="2-3-1-添加环境变量">2.3.1  添加环境变量</h4><blockquote><p>环境变量里面有很多选项，这里我们只用到<code>Path</code>这个参数。为什么在初始化的开始要添加环境变量呢？<br>在黑框(即CMD)中输入一个可执行程序的名字，Windows会先在环境变量中的<code>Path</code>所指的路径中寻找一遍，如果找到了就直接执行，没找到就在当前工作目录找，如果还没找到，就报错。我们添加环境变量的目的就是能够在任意一个黑框直接调用MySQL中的相关程序而不用总是修改工作目录，大大简化了操作。</p></blockquote><p>右键<code>此电脑</code>→<code>属性</code>，点击<code>高级系统设置</code></p><img src="https://img.777nx.cn/test/1556823-20181220220242472-524708778.png" alt="img" style="zoom:90%;" /><p>点击<code>环境变量</code></p><img src="https://img.777nx.cn/test/1556823-20181220220359609-736422950.png" alt="img" style="zoom:90%;" /><p>在<code>系统变量</code>中新建MYSQL_HOME</p><img src="https://img.777nx.cn/test/image-20201109140222488.png" alt="image-20201109140222488" style="zoom:80%;" /><p>在<code>系统变量</code>中找到并<strong>双击</strong><code>Path</code></p><img src="https://img.777nx.cn/test/1556823-20181220220551145-1198958872.png" alt="img" style="zoom:80%;" /><p>点击<code>新建</code></p><img src="https://img.777nx.cn/test/image-20201109135248104.png" alt="image-20201109135248104" style="zoom:80%;" /><p>最后点击确定。</p><p><strong>如何验证是否添加成功？</strong></p><p>右键开始菜单(就是屏幕左下角)，选择<code>命令提示符(管理员)</code>，打开黑框，敲入<code>mysql</code>，回车。<br>如果提示<code>Can't connect to MySQL server on 'localhost'</code>则证明添加成功；<br>如果提示<code>mysql不是内部或外部命令，也不是可运行的程序或批处理文件</code>则表示添加添加失败，请重新检查步骤并重试。</p><h4 id="2-3-2-新建配置文件">2.3.2  新建配置文件</h4><p>新建一个文本文件，内容如下：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">[mysql]</span></span><br><span class="line"><span class="attr">default-character-set</span>=<span class="string">utf8</span></span><br><span class="line"></span><br><span class="line"><span class="attr">[mysqld]</span></span><br><span class="line"><span class="attr">character-set-server</span>=<span class="string">utf8</span></span><br><span class="line"><span class="attr">default-storage-engine</span>=<span class="string">INNODB</span></span><br><span class="line"><span class="attr">sql_mode</span>=<span class="string">STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</span></span><br></pre></td></tr></table></figure><p>把上面的文本文件另存为，在保存类型里选<code>所有文件 (*.*)</code>，文件名叫<code>my.ini</code>，存放的路径为MySQL的<code>根目录</code>(例如我的是<code>D:\software\mysql-5.7.24-winx64</code>,根据自己的MySQL目录位置修改)。</p><p><img src="https://img.777nx.cn/test/image-20201109142704951.png" alt="image-20201109142704951"></p><p><img src="https://img.777nx.cn/test/image-20201109142737584.png" alt="image-20201109142737584"></p><p>上面代码意思就是配置数据库的默认编码集为utf-8和默认存储引擎为INNODB。</p><h4 id="2-3-3-初始化MySQL">2.3.3  初始化MySQL</h4><p>在刚才的黑框中敲入<code>mysqld --initialize-insecure</code>，回车，稍微等待一会，如果出现没有出现报错信息(如下图)则证明data目录初始化没有问题，此时再查看MySQL目录下已经有data目录生成。</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld <span class="comment">--initialize-insecure</span></span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/image-20201109140955772.png" alt="image-20201109140955772"></p><p>tips：如果出现如下错误</p><p><img src="https://img.777nx.cn/test/image-20201109135848054.png" alt="image-20201109135848054"></p><p>是由于权限不足导致的，去<code>C:\Windows\System32</code> 下以管理员方式运行 cmd.exe</p><p><img src="https://img.777nx.cn/test/image-20201109140423691.png" alt="image-20201109140423691"></p><p><img src="https://img.777nx.cn/test/image-20201109140001186.png" alt="image-20201109140001186"></p><h4 id="2-3-4-注册MySQL服务">2.3.4  注册MySQL服务</h4><p>在黑框里敲入<code>mysqld -install</code>，回车。</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld -<span class="keyword">install</span></span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/image-20201109141325810.png" alt="image-20201109141325810"></p><p>现在你的计算机上已经安装好了MySQL服务了。</p><p>MySQL服务器</p><h4 id="2-3-5-启动MySQL服务">2.3.5  启动MySQL服务</h4><p>在黑框里敲入<code>net start mysql</code>，回车。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">net start mysql  <span class="comment">// 启动mysql服务</span></span><br><span class="line">    </span><br><span class="line">net stop mysql  <span class="comment">// 停止mysql服务</span></span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/1556823-20181221093036851-1317238155.png" alt="img"></p><h4 id="2-3-6-修改默认账户密码">2.3.6  修改默认账户密码</h4><p>在黑框里敲入<code>mysqladmin -u root password 1234</code>，这里的<code>1234</code>就是指默认管理员(即root账户)的密码，可以自行修改成你喜欢的。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">mysqladmin</span> -u root password <span class="number">1234</span></span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/1556823-20181221093251250-819416425.png" alt="img"></p><p><strong>至此，MySQL 5.7 解压版安装完毕！</strong></p><h3 id="2-4-MySQL登陆和退出">2.4  MySQL登陆和退出</h3><h4 id="2-4-1-登陆">2.4.1  登陆</h4><p>右键开始菜单，选择<code>命令提示符</code>，打开黑框。<br>在黑框中输入，<code>mysql -uroot -p1234</code>，回车，出现下图且左下角为<code>mysql&gt;</code>，则登录成功。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">mysql</span> -uroot -p1234</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/1556823-20181220222422178-61579658.png" alt="img"></p><p><strong>到这里你就可以开始你的MySQL之旅了！</strong></p><p>登陆参数：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">mysql</span> -u用户名 -p密码 -h要连接的mysql服务器的ip地址(默认<span class="number">127.0.0.1</span>) -P端口号(默认<span class="number">3306</span>)</span><br></pre></td></tr></table></figure><h4 id="2-4-2-退出">2.4.2  退出</h4><p>退出mysql：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">exit</span></span><br><span class="line">quit</span><br></pre></td></tr></table></figure><h3 id="2-5-MySQL数据模型">2.5  MySQL数据模型</h3><p><strong>关系型数据库：</strong></p><blockquote><p>关系型数据库是建立在关系模型基础上的数据库，简单说，关系型数据库是由多张能互相连接的 二维表 组成的数据库</p></blockquote><p>如下图，<code>订单信息表</code> 和 <code>客户信息表</code> 都是有行有列二维表我们将这样的称为关系型数据库。</p><p><img src="https://img.777nx.cn/test/image-20210721205130231.png" alt="image-20210721205130231"></p><p>接下来看关系型数据库的优点：</p><ul><li>都是使用表结构，格式一致，易于维护。</li><li>使用通用的 SQL 语言操作，使用方便，可用于复杂查询。<ul><li>关系型数据库都可以通过SQL进行操作，所以使用方便。</li><li>复杂查询。现在需要查询001号订单数据，我们可以看到该订单是1号客户的订单，而1号订单是李聪这个客户。以后也可以在一张表中进行统计分析等操作。</li></ul></li><li>数据存储在磁盘中，安全。</li></ul><p><strong>数据模型：</strong></p><img src="https://img.777nx.cn/test/image-20210721212754568.png" alt="image-20210721212754568" style="zoom:70%;" /><p>如上图，我们通过客户端可以通过数据库管理系统创建数据库，在数据库中创建表，在表中添加数据。创建的每一个数据库对应到磁盘上都是一个文件夹。比如可以通过SQL语句创建一个数据库（数据库名称为db1），语句如下。该语句咱们后面会学习。</p><img src="https://img.777nx.cn/test/image-20210721213349761.png" alt="image-20210721213349761" style="zoom:80%;" /><p>我们可以在数据库安装目录下的data目录下看到多了一个 <code>db1</code> 的文件夹。所以，<strong>在MySQL中一个数据库对应到磁盘上的一个文件夹。</strong></p><p>而一个数据库下可以创建多张表，我们到MySQL中自带的mysql数据库的文件夹目录下：</p><img src="https://img.777nx.cn/test/image-20210721214029913.png" alt="image-20210721214029913" style="zoom:80%;" /><p>而上图中右边的 <code>db.frm</code> 是表文件，<code>db.MYD</code> 是数据文件，通过这两个文件就可以查询到数据展示成二维表的效果。</p><p><strong>小结：</strong></p><ul><li>MySQL中可以创建多个数据库，每个数据库对应到磁盘上的一个文件夹</li><li>在每个数据库中可以创建多个表，每张都对应到磁盘上一个 frm 文件</li><li>每张表可以存储多条数据，数据会被存储到磁盘中  MYD 文件中</li></ul><h2 id="3，SQL概述">3，SQL概述</h2><p>了解了数据模型后，接下来我们就学习SQL语句，通过SQL语句对数据库、表、数据进行增删改查操作。</p><h3 id="3-1-SQL简介">3.1  SQL简介</h3><ul><li>英文：Structured Query Language，简称 SQL</li><li>结构化查询语言，一门操作关系型数据库的编程语言</li><li>定义操作所有关系型数据库的统一标准</li><li>对于同一个需求，每一种数据库操作的方式可能会存在一些不一样的地方，我们称为“方言”</li></ul><h3 id="3-2-通用语法">3.2  通用语法</h3><ul><li><p>SQL 语句可以单行或多行书写，以分号结尾。</p><img src="https://img.777nx.cn/test/image-20210721215223872.png" alt="image-20210721215223872" style="zoom:80%;" /> <p>如上，以分号结尾才是一个完整的sql语句。</p></li><li><p>MySQL 数据库的 SQL 语句不区分大小写，关键字建议使用大写。</p><p>同样的一条sql语句写成下图的样子，一样可以运行处结果。</p><img src="https://img.777nx.cn/test/image-20210721215328410.png" alt="image-20210721215328410" style="zoom:80%;" /> </li><li><p>注释</p><ul><li><p>单行注释: – 注释内容 或 #注释内容(MySQL 特有)</p><img src="https://img.777nx.cn/test/image-20210721215517293.png" alt="image-20210721215517293" style="zoom:80%;" /> <img src="https://img.777nx.cn/test/image-20210721215556885.png" alt="image-20210721215556885" style="zoom:80%;" /> <blockquote><p>注意：使用-- 添加单行注释时，–后面一定要加空格，而#没有要求。</p></blockquote></li><li><p>多行注释: /* 注释 */</p></li></ul></li></ul><h3 id="3-3-SQL分类">3.3  SQL分类</h3><ul><li><p>DDL(Data Definition Language) ： 数据定义语言，用来定义数据库对象：数据库，表，列等</p><p>DDL简单理解就是用来操作数据库，表等</p><img src="https://img.777nx.cn/test/image-20210721220032047.png" alt="image-20210721220032047" style="zoom:60%;" /></li><li><p>DML(Data Manipulation Language) 数据操作语言，用来对数据库中表的数据进行增删改</p><p>DML简单理解就对表中数据进行增删改</p><img src="https://img.777nx.cn/test/image-20210721220132919.png" alt="image-20210721220132919" style="zoom:60%;" /></li><li><p>DQL(Data Query Language) 数据查询语言，用来查询数据库中表的记录(数据)</p><p>DQL简单理解就是对数据进行查询操作。从数据库表中查询到我们想要的数据。</p></li><li><p>DCL(Data Control Language) 数据控制语言，用来定义数据库的访问权限和安全级别，及创建用户</p><p>DML简单理解就是对数据库进行权限控制。比如我让某一个数据库表只能让某一个用户进行操作等。</p></li></ul><blockquote><p>注意： 以后我们最常操作的是 <code>DML</code> 和 <code>DQL</code>  ，因为我们开发中最常操作的就是数据。</p></blockquote><h2 id="4，DDL-操作数据库">4，DDL:操作数据库</h2><p>我们先来学习DDL来操作数据库。而操作数据库主要就是对数据库的增删查操作。</p><h3 id="4-1-查询">4.1  查询</h3><p>查询所有的数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> DATABASES;</span><br></pre></td></tr></table></figure><p>运行上面语句效果如下：</p><img src="https://img.777nx.cn/test/image-20210721221107014.png" alt="image-20210721221107014" style="zoom:80%;" /><p>上述查询到的是的这些数据库是mysql安装好自带的数据库，我们以后不要操作这些数据库。</p><h3 id="4-2-创建数据库">4.2  创建数据库</h3><ul><li><strong>创建数据库</strong>：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE 数据库名称;</span><br></pre></td></tr></table></figure><p>运行语句效果如下：</p><img src="https://img.777nx.cn/test/image-20210721223450755.png" alt="image-20210721223450755" style="zoom:80%;" /><p>而在创建数据库的时候，我并不知道db1数据库有没有创建，直接再次创建名为db1的数据库就会出现错误。</p><img src="https://img.777nx.cn/test/image-20210721223745490.png" alt="image-20210721223745490" style="zoom:80%;" /><p>为了避免上面的错误，在创建数据库的时候先做判断，如果不存在再创建。</p><ul><li><strong>创建数据库(判断，如果不存在则创建)</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> 数据库名称;</span><br></pre></td></tr></table></figure><p>运行语句效果如下：</p><img src="https://img.777nx.cn/test/image-20210721224056476.png" alt="image-20210721224056476" style="zoom:80%;" /><p>从上面的效果可以看到虽然db1数据库已经存在，再创建db1也没有报错，而创建db2数据库则创建成功。</p><h3 id="4-3-删除数据库">4.3  删除数据库</h3><ul><li><strong>删除数据库</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> DATABASE 数据库名称;</span><br></pre></td></tr></table></figure><ul><li><strong>删除数据库(判断，如果存在则删除)</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> DATABASE IF <span class="keyword">EXISTS</span> 数据库名称;</span><br></pre></td></tr></table></figure><p>运行语句效果如下：</p><img src="https://img.777nx.cn/test/image-20210721224435251.png" alt="image-20210721224435251" style="zoom:80%;" /><h3 id="4-4-使用数据库">4.4  使用数据库</h3><p>数据库创建好了，要在数据库中创建表，得先明确在哪儿个数据库中操作，此时就需要使用数据库。</p><ul><li><strong>使用数据库</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">USE 数据库名称;</span><br></pre></td></tr></table></figure><ul><li><strong>查看当前使用的数据库</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> DATABASE();</span><br></pre></td></tr></table></figure><p>运行语句效果如下：</p><img src="https://img.777nx.cn/test/image-20210721224720841.png" alt="image-20210721224720841" style="zoom:80%;" /><h2 id="5，DDL-操作表">5，DDL:操作表</h2><p>操作表也就是对表进行增（Create）删（Retrieve）改（Update）查（Delete）。</p><h3 id="5-1-查询表">5.1  查询表</h3><ul><li><strong>查询当前数据库下所有表名称</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> TABLES;</span><br></pre></td></tr></table></figure><p>我们创建的数据库中没有任何表，因此我们进入mysql自带的mysql数据库，执行上述语句查看</p><p><img src="https://img.777nx.cn/test/image-20210721230202814.png" alt="image-20210721230202814"></p><ul><li><strong>查询表结构</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DESC</span> 表名称;</span><br></pre></td></tr></table></figure><p>查看mysql数据库中func表的结构，运行语句如下：</p><img src="https://img.777nx.cn/test/image-20210721230332428.png" alt="image-20210721230332428" style="zoom:80%;" /><h3 id="5-2-创建表">5.2  创建表</h3><ul><li><strong>创建表</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名 (</span><br><span class="line">字段名<span class="number">1</span>  数据类型<span class="number">1</span>,</span><br><span class="line">字段名<span class="number">2</span>  数据类型<span class="number">2</span>,</span><br><span class="line">…</span><br><span class="line">字段名n  数据类型n</span><br><span class="line">);</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>注意：最后一行末尾，不能加逗号</p></blockquote><p>知道了创建表的语句，那么我们创建创建如下结构的表</p><img src="https://img.777nx.cn/test/image-20210721230824097.png" alt="image-20210721230824097" style="zoom:80%;" /><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tb_user (</span><br><span class="line">id <span class="type">int</span>,</span><br><span class="line">    username <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    password <span class="type">varchar</span>(<span class="number">32</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>运行语句如下：</p><img src="https://img.777nx.cn/test/image-20210721231142326.png" alt="image-20210721231142326" style="zoom:80%;" /><h3 id="5-3-数据类型">5.3  数据类型</h3><p>MySQL 支持多种类型，可以分为三类：</p><ul><li><p>数值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tinyint : 小整数型，占一个字节</span><br><span class="line"><span class="type">int</span>： 大整数类型，占四个字节</span><br><span class="line">eg ： age <span class="type">int</span></span><br><span class="line"><span class="keyword">double</span> ： 浮点类型</span><br><span class="line">使用格式： 字段名 <span class="keyword">double</span>(总长度,小数点后保留的位数)</span><br><span class="line">eg ： score <span class="keyword">double</span>(<span class="number">5</span>,<span class="number">2</span>)   </span><br></pre></td></tr></table></figure></li><li><p>日期</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">date</span> ： 日期值。只包含年月日</span><br><span class="line">eg ：birthday <span class="type">date</span> ： </span><br><span class="line">datetime ： 混合日期和时间值。包含年月日时分秒</span><br></pre></td></tr></table></figure></li><li><p>字符串</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> ： 定长字符串。</span><br><span class="line">优点：存储性能高</span><br><span class="line">缺点：浪费空间</span><br><span class="line">eg ： name <span class="type">char</span>(<span class="number">10</span>)  如果存储的数据字符个数不足<span class="number">10</span>个，也会占<span class="number">10</span>个的空间</span><br><span class="line"><span class="type">varchar</span> ： 变长字符串。</span><br><span class="line">优点：节约空间</span><br><span class="line">缺点：存储性能底</span><br><span class="line">eg ： name <span class="type">varchar</span>(<span class="number">10</span>) 如果存储的数据字符个数不足<span class="number">10</span>个，那就数据字符个数是几就占几个的空间</span><br></pre></td></tr></table></figure></li></ul><p><strong>案例：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">需求：设计一张学生表，请注重数据类型、长度的合理性</span><br><span class="line"><span class="bullet">1.</span> 编号</span><br><span class="line"><span class="bullet">2.</span> 姓名，姓名最长不超过10个汉字</span><br><span class="line"><span class="bullet">3.</span> 性别，因为取值只有两种可能，因此最多一个汉字</span><br><span class="line"><span class="bullet">4.</span> 生日，取值为年月日</span><br><span class="line"><span class="bullet">5.</span> 入学成绩，小数点后保留两位</span><br><span class="line"><span class="bullet">6.</span> 邮件地址，最大长度不超过 64</span><br><span class="line"><span class="bullet">7.</span> 家庭联系电话，不一定是手机号码，可能会出现 - 等字符</span><br><span class="line"><span class="bullet">8.</span> 学生状态（用数字表示，正常、休学、毕业...）</span><br></pre></td></tr></table></figure><p>语句设计如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student (</span><br><span class="line">id <span class="type">int</span>,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">10</span>),</span><br><span class="line">    gender <span class="type">char</span>(<span class="number">1</span>),</span><br><span class="line">    birthday <span class="type">date</span>,</span><br><span class="line">    score <span class="keyword">double</span>(<span class="number">5</span>,<span class="number">2</span>),</span><br><span class="line">    email <span class="type">varchar</span>(<span class="number">15</span>),</span><br><span class="line">    tel <span class="type">varchar</span>(<span class="number">15</span>),</span><br><span class="line">    status tinyint</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="5-4-删除表">5.4  删除表</h3><ul><li><strong>删除表</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> 表名;</span><br></pre></td></tr></table></figure><ul><li><strong>删除表时判断表是否存在</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> 表名;</span><br></pre></td></tr></table></figure><p>运行语句效果如下：</p><img src="https://img.777nx.cn/test/image-20210721235108267.png" alt="image-20210721235108267" style="zoom:80%;" /><h3 id="5-5-修改表">5.5  修改表</h3><ul><li><strong>修改表名</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 RENAME <span class="keyword">TO</span> 新的表名;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 将表名student修改为stu</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student rename <span class="keyword">to</span> stu;</span><br></pre></td></tr></table></figure><ul><li><strong>添加一列</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">ADD</span> 列名 数据类型;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 给stu表添加一列address，该字段类型是varchar(50)</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> stu <span class="keyword">add</span> address <span class="type">varchar</span>(<span class="number">50</span>);</span><br></pre></td></tr></table></figure><ul><li><strong>修改数据类型</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 MODIFY 列名 新数据类型;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 将stu表中的address字段的类型改为 char(50)</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> stu modify address <span class="type">char</span>(<span class="number">50</span>);</span><br></pre></td></tr></table></figure><ul><li><strong>修改列名和数据类型</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 CHANGE 列名 新列名 新数据类型;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 将stu表中的address字段名改为 addr，类型改为varchar(50)</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> stu change address addr <span class="type">varchar</span>(<span class="number">50</span>);</span><br></pre></td></tr></table></figure><ul><li><strong>删除列</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">DROP</span> 列名;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 将stu表中的addr字段 删除</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> stu <span class="keyword">drop</span> addr;</span><br></pre></td></tr></table></figure><h2 id="6，navicat使用">6，navicat使用</h2><p>通过上面的学习，我们发现在命令行中写sql语句特别不方便，尤其是编写创建表的语句，我们只能在记事本上写好后直接复制到命令行进行执行。那么有没有刚好的工具提供给我们进行使用呢？ 有。</p><h3 id="6-1-navicat概述">6.1  navicat概述</h3><ul><li>Navicat for MySQL 是管理和开发 MySQL 或 MariaDB 的理想解决方案。</li><li>这套全面的前端工具为数据库管理、开发和维护提供了一款直观而强大的图形界面。</li><li>官网： <a href="http://www.navicat.com.cn/">http://www.navicat.com.cn</a></li></ul><h3 id="6-2-navicat安装">6.2  navicat安装</h3><h3 id="6-3-navicat使用">6.3  navicat使用</h3><h4 id="6-3-1-建立和mysql服务的连接">6.3.1  建立和mysql服务的连接</h4><p>第一步： 点击连接，选择MySQL</p><img src="https://img.777nx.cn/test/image-20210721235928346.png" alt="image-20210721235928346" style="zoom:70%;" /><p>第二步：填写连接数据库必要的信息</p><img src="https://img.777nx.cn/test/image-20210722000116080.png" alt="image-20210722000116080" style="zoom:80%;" /><p>以上操作没有问题就会出现如下图所示界面：</p><img src="https://img.777nx.cn/test/image-20210722000345349.png" alt="image-20210722000345349" style="zoom:80%;" /><h4 id="6-3-2-操作">6.3.2  操作</h4><p>连接成功后就能看到如下图界面：</p><img src="https://img.777nx.cn/test/image-20210722000521997.png" alt="image-20210722000521997" style="zoom:80%;" /><ul><li><strong>修改表结构</strong></li></ul><p>通过下图操作修改表结构：</p><img src="https://img.777nx.cn/test/image-20210722000740661.png" alt="image-20210722000740661" style="zoom:80%;" /><p>点击了设计表后即出现如下图所示界面，在图中红框中直接修改字段名，类型等信息：</p><img src="https://img.777nx.cn/test/image-20210722000929075.png" alt="image-20210722000929075" style="zoom:80%;" /><ul><li><strong>编写SQL语句并执行</strong></li></ul><p>按照如下图所示进行操作即可书写SQL语句并执行sql语句。</p><img src="https://img.777nx.cn/test/image-20210722001333817.png" alt="image-20210722001333817" style="zoom:80%;" /><h2 id="7，DML">7，DML</h2><p>DML主要是对数据进行增（insert）删（delete）改（update）操作。</p><h3 id="7-1-添加数据">7.1  添加数据</h3><ul><li><strong>给指定列添加数据</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> 表名(列名<span class="number">1</span>,列名<span class="number">2</span>,…) <span class="keyword">VALUES</span>(值<span class="number">1</span>,值<span class="number">2</span>,…);</span><br></pre></td></tr></table></figure><ul><li><strong>给全部列添加数据</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> 表名 <span class="keyword">VALUES</span>(值<span class="number">1</span>,值<span class="number">2</span>,…);</span><br></pre></td></tr></table></figure><ul><li><strong>批量添加数据</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> 表名(列名<span class="number">1</span>,列名<span class="number">2</span>,…) <span class="keyword">VALUES</span>(值<span class="number">1</span>,值<span class="number">2</span>,…),(值<span class="number">1</span>,值<span class="number">2</span>,…),(值<span class="number">1</span>,值<span class="number">2</span>,…)…;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> 表名 <span class="keyword">VALUES</span>(值<span class="number">1</span>,值<span class="number">2</span>,…),(值<span class="number">1</span>,值<span class="number">2</span>,…),(值<span class="number">1</span>,值<span class="number">2</span>,…)…;</span><br></pre></td></tr></table></figure><ul><li><strong>练习</strong></li></ul><p>为了演示以下的增删改操作是否操作成功，故先将查询所有数据的语句介绍给大家：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stu;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 给指定列添加数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu (id, NAME) <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;张三&#x27;</span>);</span><br><span class="line"><span class="comment">-- 给所有列添加数据，列名的列表可以省略的</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu (id,NAME,sex,birthday,score,email,tel,STATUS) <span class="keyword">VALUES</span> (<span class="number">2</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1999-11-11&#x27;</span>,<span class="number">88.88</span>,<span class="string">&#x27;lisi@itcast.cn&#x27;</span>,<span class="string">&#x27;13888888888&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu <span class="keyword">VALUES</span> (<span class="number">2</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1999-11-11&#x27;</span>,<span class="number">88.88</span>,<span class="string">&#x27;lisi@itcast.cn&#x27;</span>,<span class="string">&#x27;13888888888&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 批量添加数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu <span class="keyword">VALUES</span> </span><br><span class="line">(<span class="number">2</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1999-11-11&#x27;</span>,<span class="number">88.88</span>,<span class="string">&#x27;lisi@itcast.cn&#x27;</span>,<span class="string">&#x27;13888888888&#x27;</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="number">2</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1999-11-11&#x27;</span>,<span class="number">88.88</span>,<span class="string">&#x27;lisi@itcast.cn&#x27;</span>,<span class="string">&#x27;13888888888&#x27;</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="number">2</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1999-11-11&#x27;</span>,<span class="number">88.88</span>,<span class="string">&#x27;lisi@itcast.cn&#x27;</span>,<span class="string">&#x27;13888888888&#x27;</span>,<span class="number">1</span>);</span><br></pre></td></tr></table></figure><h3 id="7-2-修改数据">7.2  修改数据</h3><ul><li><strong>修改表数据</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> 表名 <span class="keyword">SET</span> 列名<span class="number">1</span><span class="operator">=</span>值<span class="number">1</span>,列名<span class="number">2</span><span class="operator">=</span>值<span class="number">2</span>,… [<span class="keyword">WHERE</span> 条件] ;</span><br></pre></td></tr></table></figure><blockquote><p>注意：</p><ol><li>修改语句中如果不加条件，则将所有数据都修改！</li><li>像上面的语句中的中括号，表示在写sql语句中可以省略这部分</li></ol></blockquote><ul><li><p><strong>练习</strong></p><ul><li>将张三的性别改为女</li></ul>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> stu <span class="keyword">set</span> sex <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span> <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;张三&#x27;</span>;</span><br></pre></td></tr></table></figure><ul><li><p>将张三的生日改为 1999-12-12 分数改为99.99</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> stu <span class="keyword">set</span> birthday <span class="operator">=</span> <span class="string">&#x27;1999-12-12&#x27;</span>, score <span class="operator">=</span> <span class="number">99.99</span> <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;张三&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>注意：如果update语句没有加where条件，则会将表中所有数据全部修改！</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> stu <span class="keyword">set</span> sex <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span>;</span><br></pre></td></tr></table></figure><p>上面语句的执行完后查询到的结果是：</p><p><img src="https://img.777nx.cn/test/image-20210722204233305.png" alt="image-20210722204233305"></p></li></ul></li></ul><h3 id="7-3-删除数据">7.3  删除数据</h3><ul><li><strong>删除数据</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> 表名 [<span class="keyword">WHERE</span> 条件] ;</span><br></pre></td></tr></table></figure><ul><li><strong>练习</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除张三记录</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> stu <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;张三&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除stu表中所有的数据</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> stu;</span><br></pre></td></tr></table></figure><h2 id="8，DQL">8，DQL</h2><p>下面是黑马程序员展示试题库数据的页面</p><img src="https://img.777nx.cn/test/image-20210722215838144.png" alt="image-20210722215838144" style="zoom:80%;" /><p>页面上展示的数据肯定是在数据库中的试题库表中进行存储，而我们需要将数据库中的数据查询出来并展示在页面给用户看。上图中的是最基本的查询效果，那么数据库其实是很多的，不可能在将所有的数据在一页进行全部展示，而页面上会有分页展示的效果，如下：</p><p><img src="https://img.777nx.cn/test/image-20210722220139174.png" alt="image-20210722220139174"></p><p>当然上图中的难度字段当我们点击也可以实现排序查询操作。从这个例子我们就可以看出，对于数据库的查询时灵活多变的，需要根据具体的需求来实现，而数据库查询操作也是最重要的操作，所以此部分需要大家重点掌握。</p><p>接下来我们先介绍查询的完整语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    字段列表</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">    表名列表 </span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">    条件列表</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">    分组字段</span><br><span class="line"><span class="keyword">HAVING</span></span><br><span class="line">    分组后条件</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">    排序字段</span><br><span class="line">LIMIT</span><br><span class="line">    分页限定</span><br></pre></td></tr></table></figure><p>为了给大家演示查询的语句，我们需要先准备表及一些数据：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除stu表</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> stu;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建stu表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> stu (</span><br><span class="line"> id <span class="type">int</span>, <span class="comment">-- 编号</span></span><br><span class="line"> name <span class="type">varchar</span>(<span class="number">20</span>), <span class="comment">-- 姓名</span></span><br><span class="line"> age <span class="type">int</span>, <span class="comment">-- 年龄</span></span><br><span class="line"> sex <span class="type">varchar</span>(<span class="number">5</span>), <span class="comment">-- 性别</span></span><br><span class="line"> address <span class="type">varchar</span>(<span class="number">100</span>), <span class="comment">-- 地址</span></span><br><span class="line"> math <span class="keyword">double</span>(<span class="number">5</span>,<span class="number">2</span>), <span class="comment">-- 数学成绩</span></span><br><span class="line"> english <span class="keyword">double</span>(<span class="number">5</span>,<span class="number">2</span>), <span class="comment">-- 英语成绩</span></span><br><span class="line"> hire_date <span class="type">date</span> <span class="comment">-- 入学时间</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu(id,NAME,age,sex,address,math,english,hire_date) </span><br><span class="line"><span class="keyword">VALUES</span> </span><br><span class="line">(<span class="number">1</span>,<span class="string">&#x27;马运&#x27;</span>,<span class="number">55</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;杭州&#x27;</span>,<span class="number">66</span>,<span class="number">78</span>,<span class="string">&#x27;1995-09-01&#x27;</span>),</span><br><span class="line">(<span class="number">2</span>,<span class="string">&#x27;马花疼&#x27;</span>,<span class="number">45</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;深圳&#x27;</span>,<span class="number">98</span>,<span class="number">87</span>,<span class="string">&#x27;1998-09-01&#x27;</span>),</span><br><span class="line">(<span class="number">3</span>,<span class="string">&#x27;马斯克&#x27;</span>,<span class="number">55</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;香港&#x27;</span>,<span class="number">56</span>,<span class="number">77</span>,<span class="string">&#x27;1999-09-02&#x27;</span>),</span><br><span class="line">(<span class="number">4</span>,<span class="string">&#x27;柳白&#x27;</span>,<span class="number">20</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;湖南&#x27;</span>,<span class="number">76</span>,<span class="number">65</span>,<span class="string">&#x27;1997-09-05&#x27;</span>),</span><br><span class="line">(<span class="number">5</span>,<span class="string">&#x27;柳青&#x27;</span>,<span class="number">20</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;湖南&#x27;</span>,<span class="number">86</span>,<span class="keyword">NULL</span>,<span class="string">&#x27;1998-09-01&#x27;</span>),</span><br><span class="line">(<span class="number">6</span>,<span class="string">&#x27;刘德花&#x27;</span>,<span class="number">57</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;香港&#x27;</span>,<span class="number">99</span>,<span class="number">99</span>,<span class="string">&#x27;1998-09-01&#x27;</span>),</span><br><span class="line">(<span class="number">7</span>,<span class="string">&#x27;张学右&#x27;</span>,<span class="number">22</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;香港&#x27;</span>,<span class="number">99</span>,<span class="number">99</span>,<span class="string">&#x27;1998-09-01&#x27;</span>),</span><br><span class="line">(<span class="number">8</span>,<span class="string">&#x27;德玛西亚&#x27;</span>,<span class="number">18</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;南京&#x27;</span>,<span class="number">56</span>,<span class="number">65</span>,<span class="string">&#x27;1994-09-02&#x27;</span>);</span><br></pre></td></tr></table></figure><p>接下来咱们从最基本的查询语句开始学起。</p><h3 id="8-1-基础查询">8.1  基础查询</h3><h4 id="8-1-1-语法">8.1.1  语法</h4><ul><li><strong>查询多个字段</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 字段列表 <span class="keyword">FROM</span> 表名;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> 表名; <span class="comment">-- 查询所有数据</span></span><br></pre></td></tr></table></figure><ul><li><strong>去除重复记录</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> 字段列表 <span class="keyword">FROM</span> 表名;</span><br></pre></td></tr></table></figure><ul><li><strong>起别名</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">AS</span>: <span class="keyword">AS</span> 也可以省略</span><br></pre></td></tr></table></figure><h4 id="8-1-2-练习">8.1.2  练习</h4><ul><li><p>查询name、age两列</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> name,age <span class="keyword">from</span> stu;</span><br></pre></td></tr></table></figure></li><li><p>查询所有列的数据，列名的列表可以使用*替代</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stu;</span><br></pre></td></tr></table></figure><p>上面语句中的*不建议大家使用，因为在这写*不方便我们阅读sql语句。我们写字段列表的话，可以添加注释对每一个字段进行说明</p><img src="https://img.777nx.cn/test/image-20210722221534870.png" alt="image-20210722221534870" style="zoom:80%;" /><p>而在上课期间为了简约课程的时间，老师很多地方都会写*。</p></li><li><p>查询地址信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> address <span class="keyword">from</span> stu;</span><br></pre></td></tr></table></figure><p>执行上面语句结果如下：</p><p><img src="https://img.777nx.cn/test/image-20210722221756380.png" alt="image-20210722221756380"></p><p>从上面的结果我们可以看到有重复的数据，我们也可以使用 <code>distinct</code> 关键字去重重复数据。</p></li><li><p>去除重复记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> address <span class="keyword">from</span> stu;</span><br></pre></td></tr></table></figure></li><li><p>查询姓名、数学成绩、英语成绩。并通过as给math和english起别名（as关键字可以省略）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> name,math <span class="keyword">as</span> 数学成绩,english <span class="keyword">as</span> 英文成绩 <span class="keyword">from</span> stu;</span><br><span class="line"><span class="keyword">select</span> name,math 数学成绩,english 英文成绩 <span class="keyword">from</span> stu;</span><br></pre></td></tr></table></figure></li></ul><h3 id="8-2-条件查询">8.2  条件查询</h3><h4 id="8-2-1-语法">8.2.1  语法</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 字段列表 <span class="keyword">FROM</span> 表名 <span class="keyword">WHERE</span> 条件列表;</span><br></pre></td></tr></table></figure><ul><li><strong>条件</strong></li></ul><p>条件列表可以使用以下运算符</p><img src="https://img.777nx.cn/test/image-20210722190508272.png" alt="image-20210722190508272" style="zoom:60%;" /><h4 id="8-2-2-条件查询练习">8.2.2  条件查询练习</h4><ul><li><p>查询年龄大于20岁的学员信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stu <span class="keyword">where</span> age <span class="operator">&gt;</span> <span class="number">20</span>;</span><br></pre></td></tr></table></figure></li><li><p>查询年龄大于等于20岁的学员信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stu <span class="keyword">where</span> age <span class="operator">&gt;=</span> <span class="number">20</span>;</span><br></pre></td></tr></table></figure></li><li><p>查询年龄大于等于20岁 并且 年龄 小于等于 30岁 的学员信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stu <span class="keyword">where</span> age <span class="operator">&gt;=</span> <span class="number">20</span> <span class="operator">&amp;&amp;</span>  age <span class="operator">&lt;=</span> <span class="number">30</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stu <span class="keyword">where</span> age <span class="operator">&gt;=</span> <span class="number">20</span> <span class="keyword">and</span>  age <span class="operator">&lt;=</span> <span class="number">30</span>;</span><br></pre></td></tr></table></figure><blockquote><p>上面语句中 &amp;&amp;  和  and  都表示并且的意思。建议使用 and 。</p><p>也可以使用  between … and 来实现上面需求</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stu <span class="keyword">where</span> age <span class="keyword">BETWEEN</span> <span class="number">20</span> <span class="keyword">and</span> <span class="number">30</span>;</span><br></pre></td></tr></table></figure></li><li><p>查询入学日期在’1998-09-01’ 到 ‘1999-09-01’  之间的学员信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stu <span class="keyword">where</span> hire_date <span class="keyword">BETWEEN</span> <span class="string">&#x27;1998-09-01&#x27;</span> <span class="keyword">and</span> <span class="string">&#x27;1999-09-01&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>查询年龄等于18岁的学员信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stu <span class="keyword">where</span> age <span class="operator">=</span> <span class="number">18</span>;</span><br></pre></td></tr></table></figure></li><li><p>查询年龄不等于18岁的学员信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stu <span class="keyword">where</span> age <span class="operator">!=</span> <span class="number">18</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stu <span class="keyword">where</span> age <span class="operator">&lt;&gt;</span> <span class="number">18</span>;</span><br></pre></td></tr></table></figure></li><li><p>查询年龄等于18岁 或者 年龄等于20岁 或者 年龄等于22岁的学员信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stu <span class="keyword">where</span> age <span class="operator">=</span> <span class="number">18</span> <span class="keyword">or</span> age <span class="operator">=</span> <span class="number">20</span> <span class="keyword">or</span> age <span class="operator">=</span> <span class="number">22</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stu <span class="keyword">where</span> age <span class="keyword">in</span> (<span class="number">18</span>,<span class="number">20</span> ,<span class="number">22</span>);</span><br></pre></td></tr></table></figure></li><li><p>查询英语成绩为 null的学员信息</p><p>null值的比较不能使用 =  或者 != 。需要使用 is  或者 is not</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stu <span class="keyword">where</span> english <span class="operator">=</span> <span class="keyword">null</span>; <span class="comment">-- 这个语句是不行的</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stu <span class="keyword">where</span> english <span class="keyword">is</span> <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stu <span class="keyword">where</span> english <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure></li></ul><h4 id="8-2-3-模糊查询练习">8.2.3  模糊查询练习</h4><blockquote><p>模糊查询使用like关键字，可以使用通配符进行占位:</p><p>（1）_ : 代表单个任意字符</p><p>（2）% : 代表任意个数字符</p></blockquote><ul><li><p>查询姓’马’的学员信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stu <span class="keyword">where</span> name <span class="keyword">like</span> <span class="string">&#x27;马%&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>查询第二个字是’花’的学员信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stu <span class="keyword">where</span> name <span class="keyword">like</span> <span class="string">&#x27;_花%&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>查询名字中包含 ‘德’ 的学员信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stu <span class="keyword">where</span> name <span class="keyword">like</span> <span class="string">&#x27;%德%&#x27;</span>;</span><br></pre></td></tr></table></figure></li></ul><h3 id="8-3-排序查询">8.3  排序查询</h3><h4 id="8-3-1-语法">8.3.1  语法</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 字段列表 <span class="keyword">FROM</span> 表名 <span class="keyword">ORDER</span> <span class="keyword">BY</span> 排序字段名<span class="number">1</span> [排序方式<span class="number">1</span>],排序字段名<span class="number">2</span> [排序方式<span class="number">2</span>] …;</span><br></pre></td></tr></table></figure><p>上述语句中的排序方式有两种，分别是：</p><ul><li>ASC ： 升序排列 <strong>（默认值）</strong></li><li>DESC ： 降序排列</li></ul><blockquote><p>注意：如果有多个排序条件，当前边的条件值一样时，才会根据第二条件进行排序</p></blockquote><h4 id="8-3-2-练习">8.3.2  练习</h4><ul><li><p>查询学生信息，按照年龄升序排列</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stu <span class="keyword">order</span> <span class="keyword">by</span> age ;</span><br></pre></td></tr></table></figure></li><li><p>查询学生信息，按照数学成绩降序排列</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stu <span class="keyword">order</span> <span class="keyword">by</span> math <span class="keyword">desc</span> ;</span><br></pre></td></tr></table></figure></li><li><p>查询学生信息，按照数学成绩降序排列，如果数学成绩一样，再按照英语成绩升序排列</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stu <span class="keyword">order</span> <span class="keyword">by</span> math <span class="keyword">desc</span> , english <span class="keyword">asc</span> ;</span><br></pre></td></tr></table></figure></li></ul><h3 id="8-4-聚合函数">8.4  聚合函数</h3><h4 id="8-4-1-概念">8.4.1  概念</h4><p>==将一列数据作为一个整体，进行纵向计算。==</p><p>如何理解呢？假设有如下表</p><img src="https://img.777nx.cn/test/image-20210722194410628.png" alt="image-20210722194410628" style="zoom:80%;" /><p>现有一需求让我们求表中所有数据的数学成绩的总和。这就是对math字段进行纵向求和。</p><h4 id="8-4-2-聚合函数分类">8.4.2  聚合函数分类</h4><table><thead><tr><th>函数名</th><th>功能</th></tr></thead><tbody><tr><td>count(列名)</td><td>统计数量（一般选用不为null的列）</td></tr><tr><td>max(列名)</td><td>最大值</td></tr><tr><td>min(列名)</td><td>最小值</td></tr><tr><td>sum(列名)</td><td>求和</td></tr><tr><td>avg(列名)</td><td>平均值</td></tr></tbody></table><h4 id="8-4-3-聚合函数语法">8.4.3  聚合函数语法</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 聚合函数名(列名) <span class="keyword">FROM</span> 表;</span><br></pre></td></tr></table></figure><blockquote><p>注意：null 值不参与所有聚合函数运算</p></blockquote><h4 id="8-4-4-练习">8.4.4  练习</h4><ul><li><p>统计班级一共有多少个学生</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(id) <span class="keyword">from</span> stu;</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(english) <span class="keyword">from</span> stu;</span><br></pre></td></tr></table></figure><p>上面语句根据某个字段进行统计，如果该字段某一行的值为null的话，将不会被统计。所以可以在count(*) 来实现。* 表示所有字段数据，一行中也不可能所有的数据都为null，所以建议使用 count(*)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> stu;</span><br></pre></td></tr></table></figure></li><li><p>查询数学成绩的最高分</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">max</span>(math) <span class="keyword">from</span> stu;</span><br></pre></td></tr></table></figure></li><li><p>查询数学成绩的最低分</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">min</span>(math) <span class="keyword">from</span> stu;</span><br></pre></td></tr></table></figure></li><li><p>查询数学成绩的总分</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(math) <span class="keyword">from</span> stu;</span><br></pre></td></tr></table></figure></li><li><p>查询数学成绩的平均分</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(math) <span class="keyword">from</span> stu;</span><br></pre></td></tr></table></figure></li><li><p>查询英语成绩的最低分</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">min</span>(english) <span class="keyword">from</span> stu;</span><br></pre></td></tr></table></figure></li></ul><h3 id="8-5-分组查询">8.5  分组查询</h3><h4 id="8-5-1-语法">8.5.1  语法</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 字段列表 <span class="keyword">FROM</span> 表名 [<span class="keyword">WHERE</span> 分组前条件限定] <span class="keyword">GROUP</span> <span class="keyword">BY</span> 分组字段名 [<span class="keyword">HAVING</span> 分组后条件过滤];</span><br></pre></td></tr></table></figure><blockquote><p>注意：分组之后，查询的字段为聚合函数和分组字段，查询其他字段无任何意义</p></blockquote><h4 id="8-5-2-练习">8.5.2  练习</h4><ul><li><p>查询男同学和女同学各自的数学平均分</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sex, <span class="built_in">avg</span>(math) <span class="keyword">from</span> stu <span class="keyword">group</span> <span class="keyword">by</span> sex;</span><br></pre></td></tr></table></figure><blockquote><p>注意：分组之后，查询的字段为聚合函数和分组字段，查询其他字段无任何意义</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> name, sex, <span class="built_in">avg</span>(math) <span class="keyword">from</span> stu <span class="keyword">group</span> <span class="keyword">by</span> sex;  <span class="comment">-- 这里查询name字段就没有任何意义</span></span><br></pre></td></tr></table></figure></li><li><p>查询男同学和女同学各自的数学平均分，以及各自人数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sex, <span class="built_in">avg</span>(math),<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> stu <span class="keyword">group</span> <span class="keyword">by</span> sex;</span><br></pre></td></tr></table></figure></li><li><p>查询男同学和女同学各自的数学平均分，以及各自人数，要求：分数低于70分的不参与分组</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sex, <span class="built_in">avg</span>(math),<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> stu <span class="keyword">where</span> math <span class="operator">&gt;</span> <span class="number">70</span> <span class="keyword">group</span> <span class="keyword">by</span> sex;</span><br></pre></td></tr></table></figure></li><li><p>查询男同学和女同学各自的数学平均分，以及各自人数，要求：分数低于70分的不参与分组，分组之后人数大于2个的</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sex, <span class="built_in">avg</span>(math),<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> stu <span class="keyword">where</span> math <span class="operator">&gt;</span> <span class="number">70</span> <span class="keyword">group</span> <span class="keyword">by</span> sex <span class="keyword">having</span> <span class="built_in">count</span>(<span class="operator">*</span>)  <span class="operator">&gt;</span> <span class="number">2</span>;</span><br></pre></td></tr></table></figure></li></ul><p><strong>where 和 having 区别：</strong></p><ul><li><p>执行时机不一样：where 是分组之前进行限定，不满足where条件，则不参与分组，而having是分组之后对结果进行过滤。</p></li><li><p>可判断的条件不一样：where 不能对聚合函数进行判断，having 可以。</p></li></ul><h3 id="8-6-分页查询">8.6  分页查询</h3><p>如下图所示，大家在很多网站都见过类似的效果，如京东、百度、淘宝等。分页查询是将数据一页一页的展示给用户看，用户也可以通过点击查看下一页的数据。</p><img src="https://img.777nx.cn/test/image-20210722230330366.png" alt="image-20210722230330366" style="zoom:80%;" /><p>接下来我们先说分页查询的语法。</p><h4 id="8-6-1-语法">8.6.1  语法</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 字段列表 <span class="keyword">FROM</span> 表名 LIMIT  起始索引 , 查询条目数;</span><br></pre></td></tr></table></figure><blockquote><p>注意： 上述语句中的起始索引是从0开始</p></blockquote><h4 id="8-6-2-练习">8.6.2  练习</h4><ul><li><p>从0开始查询，查询3条数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stu limit <span class="number">0</span> , <span class="number">3</span>;</span><br></pre></td></tr></table></figure></li><li><p>每页显示3条数据，查询第1页数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stu limit <span class="number">0</span> , <span class="number">3</span>;</span><br></pre></td></tr></table></figure></li><li><p>每页显示3条数据，查询第2页数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stu limit <span class="number">3</span> , <span class="number">3</span>;</span><br></pre></td></tr></table></figure></li><li><p>每页显示3条数据，查询第3页数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stu limit <span class="number">6</span> , <span class="number">3</span>;</span><br></pre></td></tr></table></figure></li></ul><p>从上面的练习推导出起始索引计算公式：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">起始索引 <span class="operator">=</span> (当前页码 <span class="operator">-</span> <span class="number">1</span>) <span class="operator">*</span> 每页显示的条数</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JDK、IDEA等安装详解</title>
      <link href="/posts/e7bf99e2.html"/>
      <url>/posts/e7bf99e2.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-JDK的下载和安装">1. JDK的下载和安装</h2><h4 id="1-1-Java的发展历史">1.1 Java的发展历史</h4><ul><li>1995年Sun公司推出Java语言</li><li>1996年发布Java 1.0版本</li><li>1997年发布Java 1.1版本</li><li>1998年发布Java 1.2版本</li><li>2000年发布Java 1.3版本</li><li>2002年发布Java 1.4版本</li><li>2004年发布Java 5.0版本</li><li>2006年发布Java 6.0版本</li><li>2009年Oracle甲骨文公司收购Sun公司</li><li>2011年发布Java 7.0版本</li><li>2014年发布Java 8.0版本</li><li>2017年9月发布Java 9.0版本</li><li>2018年3月发布Java 10.0版本</li><li>2018年9月发布Java 11.0版本</li><li>2019年3月发布Java 12.0版本</li><li>2019年9月发布Java 13.0版本</li><li>2020年3月发布Java 14.0版本</li></ul><blockquote><p>小贴士：</p><p>Java5.0：里程碑性质的版本，也是第一个大版本号更新。</p><p>Java8.0：企业中用的最多的版本。</p><p>Java14.0：目前最新的，也是学习的版本。</p></blockquote><h4 id="1-2-下载">1.2 下载</h4><ul><li><p>通过官方网站获取JDK</p><pre><code>  网址：http://www.oracle.com</code></pre></li></ul><p><img src="https://img.777nx.cn/Java/jdk%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/oracle.png" alt="计算机发展"></p><ul><li>拖动到页面的最下方，点击&quot;JAVA SE14 download&quot;</li></ul><p><img src="https://img.777nx.cn/Java/jdk%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/%E4%B8%8B%E8%BD%BD1.png" alt="计算机发展"></p><ul><li>点击下载</li></ul><p><img src="https://img.777nx.cn/Java/jdk%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/%E4%B8%8B%E8%BD%BD2.png" alt="计算机发展"></p><ul><li>针对不同的操作系统，需要下载对应版本的JDK。</li></ul><p>如果是windows64位的操作系统，可以点击下方红框的连接进行下载</p><p><img src="https://img.777nx.cn/Java/jdk%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/%E4%B8%8B%E8%BD%BD3.png" alt="计算机发展"></p><h4 id="1-3-安装">1.3 安装</h4><ul><li>在资料文件夹中，已经下载好了，双击打开安装包</li></ul><p><img src="https://img.777nx.cn/Java/jdk%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/%E5%AE%89%E8%A3%850.png" alt="计算机发展"></p><ul><li>双击打开之后，直接点击下一步</li></ul><p><img src="https://img.777nx.cn/Java/jdk%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/%E5%AE%89%E8%A3%851.png" alt="计算机发展"></p><ul><li>选择安装路径，再点击下一步</li></ul><p><img src="https://img.777nx.cn/Java/jdk%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/%E5%AE%89%E8%A3%852.png" alt="计算机发展"></p><ul><li>等待进度条完成</li></ul><p><img src="https://img.777nx.cn/Java/jdk%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/%E5%AE%89%E8%A3%853.png" alt="计算机发展"></p><ul><li>点击关闭，安装成功。</li></ul><p><img src="https://img.777nx.cn/Java/jdk%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/%E5%AE%89%E8%A3%854.png" alt="计算机发展"></p><blockquote><p>小贴士：<br>安装路径不要有中文，不要有空格<br>找一个固定的文件夹专门安装所有跟开发相关的软件，方便管理。</p></blockquote><h4 id="1-4-JDK的安装目录介绍">1.4 JDK的安装目录介绍</h4><table><thead><tr><th>目录名称</th><th>说明</th></tr></thead><tbody><tr><td>bin</td><td>该路径下存放了JDK的各种工具命令。javac和java就放在这个目录。</td></tr><tr><td>conf</td><td>该路径下存放了 JDK 的相关配置文件</td></tr><tr><td>include</td><td>该路径下存放了一些平台特定的头文件</td></tr><tr><td>jmods</td><td>该路径下存放了 JDK 的各种模块</td></tr><tr><td>legal</td><td>该路径下存放了 JDK 各模块的授权文档</td></tr><tr><td>lib</td><td>该路径下存放了 JDK 工具的一些补充 JAR 包</td></tr></tbody></table><h3 id="1-2-HelloWorld">1.2 HelloWorld</h3><h4 id="1-2-1-HelloWorld的仪式感">1.2.1 HelloWorld的仪式感</h4><pre><code>HelloWorld中文意思是『你好世界』。该程序的效果就是在让程序帮我们展示一段文字，内容为 HelloWorld。程序员在学习任何一门编程语言，第一个入门案例，都是 HelloWorld。</code></pre><h4 id="1-2-2-书写步骤">1.2.2 书写步骤</h4><ul><li>新建一个Java文件，修改名称为HelloWorld.java</li><li>用记事本打开HelloWorld.java文件，输写程序内容</li></ul><p><img src="https://img.777nx.cn/Java/jdk%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/helloworld.png" alt="计算机发展"></p><ul><li><p>保存（快捷键<strong>Ctrl+s</strong>）</p></li><li><p>编译文件</p><p>javac HelloWorld.java</p></li><li><p>运行文件</p><p>java HelloWorld</p></li></ul><blockquote><p>小贴士：</p><p>新建的HelloWorld.java文件一定要放在JDK安装目录的bin目录下面。</p></blockquote><h4 id="1-2-3-HelloWorld代码详解">1.2.3 HelloWorld代码详解</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;HelloWorld&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>class : 定义一个类，后面跟上的是类名名称。类是Java中最基本的组成单元。</p><p>第二行代码：程序执行时的入口点，main方法称之为主方法。</p><p>第三行代码：使程序能够输出打印双引号中包裹的内容。</p><h3 id="2-3-Path环境变量的配置">2.3 Path环境变量的配置</h3><h4 id="2-3-1配置环境变量的目的">2.3.1配置环境变量的目的</h4><pre><code>在刚刚写的代码中，只能存放在bin目录下，才能使用 javac 和 java 工具。如果我想把代码存放在任意的目录下，在任意的目录下都可以使用javac 和 java 工具该怎么办呢？</code></pre><p>就可以把 javac 和 java配置到环境变量当中。</p><h4 id="2-2-2-配置步骤">2.2.2 配置步骤</h4><ul><li>按下 Win键 + E ，找到计算机</li></ul><p><img src="https://img.777nx.cn/Java/jdk%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F1.png" alt="计算机发展"></p><ul><li>右键点击计算机，选择属性</li></ul><p><img src="https://img.777nx.cn/Java/jdk%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F2.png" alt="计算机发展"></p><ul><li>点击高级系统设置</li></ul><p><img src="https://img.777nx.cn/Java/jdk%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F3.png" alt="计算机发展"></p><ul><li>选择高级，再点击下面的环境变量</li></ul><p><img src="https://img.777nx.cn/Java/jdk%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F4.png" alt="计算机发展"></p><ul><li>点击系统变量下面的新建</li></ul><p><img src="https://img.777nx.cn/Java/jdk%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F5.png" alt="计算机发展"></p><ul><li>会弹出这样的界面</li></ul><p><img src="https://img.777nx.cn/Java/jdk%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F6.png" alt="计算机发展"></p><ul><li><p>变量名后面输入：JAVA_HOME</p><p>变量值后面：将JDK的安装路径复制过来，</p><p>注意：不带bin目录</p><p>操作完毕点击确定</p></li></ul><p><img src="https://img.777nx.cn/Java/jdk%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F7.png" alt="计算机发展"></p><ul><li><p>选择Path。</p><p>此处还是要选择下方系统变量中的Path。</p><p>点击编辑</p></li></ul><p><img src="https://img.777nx.cn/Java/jdk%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F8.png" alt="计算机发展"></p><ul><li>在弹出的页面中点击编辑文本</li></ul><p><img src="https://img.777nx.cn/Java/jdk%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F9.png" alt="计算机发展"></p><ul><li><p>点击完毕之后会弹出这样的界面。</p><p>注意：里面的内容不能删除。</p></li></ul><p><img src="https://img.777nx.cn/Java/jdk%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F10.png" alt="计算机发展"></p><ul><li><p>在变量值的最前面输入：</p><p>%JAVA_HOME%\bin; 输入完毕确定。</p><p>其中使用两个百分号包住JAVA_HOME，表示引用了JAVA_HOME里面的值。</p><p>分号，表示多个环境变量之间的间隔。</p><p>注意：所有符号一定要是英文状态下的。</p></li></ul><p><img src="https://img.777nx.cn/Java/jdk%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F11.png" alt="计算机发展"></p><ul><li><p>打开CMD，输入java回车。</p><p>如果出现一长串很多的白色文字，表示配置成功。</p></li></ul><p><img src="https://img.777nx.cn/Java/jdk%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F13.png" alt="计算机发展"></p><h2 id="2-IDEA">2. IDEA</h2><h3 id="2-1-IDEA概述">2.1 IDEA概述</h3><p>​IDEA全称IntelliJ IDEA，是用于Java语言开发的集成环境，它是业界公认的目前用于Java程序开发最好的工具。</p><p><strong>集成环境：</strong></p><p>​把代码编写，编译，执行，调试等多种功能综合到一起的开发工具。</p><h3 id="2-2-IDEA的下载和安装">2.2 IDEA的下载和安装</h3><h4 id="2-2-1-下载">2.2.1 下载</h4><p>​可以到官方网站自行下载，网址为：<a href="https://www.jetbrains.com/idea">https://www.jetbrains.com/idea</a></p><h4 id="2-2-2-安装">2.2.2 安装</h4><ul><li>到官网下载，双击安装包。</li><li>点击next，准备安装</li></ul><p><img src="https://img.777nx.cn/Java/jdk%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/idea%E5%AE%89%E8%A3%851.png" alt="计算机发展"></p><ul><li><p>点击Browse修改安装路径。</p><p>修改完毕点击next</p></li></ul><p><img src="https://img.777nx.cn/Java/jdk%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/idea%E5%AE%89%E8%A3%852.png" alt="计算机发展"></p><ul><li><p>勾选64-bit launcher。表示在桌面新建一个64位的快捷方式。</p><p>其他的不要勾选。</p><p>点击next。</p></li></ul><p><img src="https://img.777nx.cn/Java/jdk%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/idea%E5%AE%89%E8%A3%854.png" alt="计算机发展"></p><ul><li>点击Install，准备安装。</li></ul><p><img src="https://img.777nx.cn/Java/jdk%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/idea%E5%AE%89%E8%A3%855.png" alt="计算机发展"></p><ul><li><p>等进度条读取完毕之后，会有最终界面提示。</p><p>点击finish即可。</p></li></ul><p><img src="https://img.777nx.cn/Java/jdk%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/idea%E5%AE%89%E8%A3%856.png" alt="计算机发展"></p><ul><li><p>第一次启动会询问，是否导入一些设置。</p><p>选择第二个不导入，保持默认设置，再点击OK。</p></li></ul><p><img src="https://img.777nx.cn/Java/jdk%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/idea%E5%AE%89%E8%A3%857.png" alt="计算机发展"></p><ul><li><p>选择背景主题</p><p>左边是黑色背景。右边是白色背景。</p><p>这个可以根据自己的喜好来选择。</p><p>选择完毕点击右下角的next</p></li></ul><p><img src="https://img.777nx.cn/Java/jdk%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/idea%E5%AE%89%E8%A3%858.png" alt="计算机发展"></p><ul><li><p>在本界面让我们购买idea。</p><p>因为我们是学习阶段，所以可以使用免费使用30天。</p><p>点击第一排第二个。Evaluate for free</p></li></ul><p><img src="https://img.777nx.cn/Java/jdk%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/idea%E5%AE%89%E8%A3%859.png" alt="计算机发展"></p><ul><li>点击蓝色的Evaluate，就可以开始免费试用30天了。</li></ul><p><img src="https://img.777nx.cn/Java/jdk%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/idea%E5%AE%89%E8%A3%8510.png" alt="计算机发展"></p><ul><li><p>当看到这个界面，就表示idea已经成功安装完毕</p><p>可以点击右上角关闭。</p></li></ul><p><img src="https://img.777nx.cn/Java/jdk%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/idea%E5%AE%89%E8%A3%8511.png" alt="计算机发展"></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JDK </tag>
            
            <tag> idea </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/4a17b156.html"/>
      <url>/posts/4a17b156.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="55280416a49eba835aaa2de0737bdf6c6d35ed1aefc547ab59386b09cfe33e32">10d79030e8222445804370796b90fca1cf7dd2ee01010d95413afa643c36d75c6da7dc8584583c53132d123565a83bc482d57efe09dbb13f6be1ebadf67b396c5e9af14ae37a94b87d779719bc8c1cd1a95420a6d53586101970b6bd1e11383c5fb9eb6a2afd2dfd764940c736e232c31819ba63da4a7c6eb6c1003cc6443dcf2082b9f749ca03a1484b87b08c908b3c310d7b631064a7fc3f9ca36177e4c3059978875c3caa78a7dceb6037a9522caf5c4adf858dd97440561f76a5ba5e4fd77e9898dfeb4cad54c4bb643f9c0ecbaef49a3431bdd2455830a88255232397afbbe9b23eb9395dfae6f0824e03416bc0b3804386abdc6c923976a913424fdbf1ba89bde972822239ac5e9109f398b65ae65ef00629508a203d30649f6408e1f61f5f6e73d99349907d745bd4c4ef0763621826913a2677273e3b66ae19439d1940d9ebcc45d324738506f0ac5dca5093adf45b82a24da2d49432e9f7cea3b56d73ea8b80628014008c75e6df0aa070ccdaa53907f1adc5e6234b2ab2f7f8485fb9383dc64927d631e20713c7d719815e20c9d6247aa120998e681a19e43d40caa1cffecc633de0f65973940379b539c29d8073c3e55983103fa3d133529a63da90198b90456ee081a1c8d4437acbad7d480889da0c4cc6fb33ebdc58cc0dcd479679771e49e05328541a5ca90d2c1cf4067962b88d48e612e143372c70f6f6d4c97908c3311ff4810f4ae6f969befea917206b1467101a5fdc851b19721ae5fef8bd58be7fd02bbed98f020de77fb2ca670b8b2e2c99a63a108ba2ea0b836964334b595206a6edfd885b0a4037cbc676aa9954b072f694888074985ae0afa8619b83daf9bc993a064764feb331d4dc17b25cf838cc2cc08df5575b964205558b65cbce62b389196b998ecbb95f37b0fb0f161e47de46bf8acaa49145c36743ad35e9e3472ab2d3ea48063239f41c045ae49beee2c795d59842df67182dbfdd81628fcd858d5f2e33d3a77a153175dfaa2a78477a700e1e2cfc04bf9cd125691469ff4ba49ef214249eb8d02ee4795bdd57bd9b6fc6374be673d0e579849cde0e0d7c9f3fae1626ac629d65376d7b74fe8e4a7aa9562d0ed594f357ad63a538fdfcd44aad998f10a1b8e1c83a4883bc7cd95a482f78d713d7e469fb9ba9ea167cb9482a5793631fa3cf889b99391bf0ea7295a593b036d3074d630c5ee7ef5be4a70f4551795506f11d9b26de5873a366fac6a71220e07d450f64d85e6077c3963cda29563a809c41b5f0f5f1d8511a8180004a48b9bda9b3cb8f4fe72b68fc86ec40877a35e8cc96074487baf0518800878a306968e52f5f2ff4a05c4fd680c639cd3755fa03a01dac82cd538e4e681c5de9022cf594fabca9f3f3f0f733574ee7712c4dfa5e8da4d9b4984e484337abcb6b655f1d1e6af1e20abaec7907ad0b20f2de80ff58eb42b863cb0538dc1d33285fb4ed4c1acd1886b85f86bf4c760edca21fb079d9b791e60801a3232d0b56cf7d377a644d12a86798d27d65200d58c48d62c2a5dd697bf0047050581fa24a6312a4d52e90460100bf8b2dc0599978d890f2efc1dd535f3c7ad2e40ee160cb1d1f1a509b8e266f4742d55fba253107a89d9ce833abe04cc4b94069c37af2f3d0253647d21406c978a42e1e0df68f1634ed6b4b1c632d664a5efa2df78f613b4cb6ada4402ec2c4cad05df10a3af04c8dca2f82f5a4e9bf5fb6959e167603999a006fb64222368d09d9476e1f68714b41608ee21570fbe414a9e123bda0148e6c9f85f03a692e3cf6a119059650d9baed6a3b193e3edf543c8a9aee2f348f78dd9086cb071f9d1caf040d75fe3e7d15a261458aa6ed29984015364b64205669398de1782646e35a22270a6c0d38d2a6cf8724b573204c581f3f4404e48c4ca75dcfab00b33c443bf25ec5ee9d80b1d8e09d813b8d61173917eb93c0e81273a1bc00741cfc6ca38004e1856800ee9afbfeaadfc1cfac6154cf339d55f029afa8fc8d45e1f8b873a9f7a0946f8d93e30bc0ea5eb38db3f25f92c6c05b8f33285543bc1491b1637d1f1c04999b86446202c46a04e6498c4b37a3a46666dec2258e1721653af379342247d761f461d9b4e7e65c187930439b5c317417272e3c71e14f61c26a9f8ee921d8de26f8f23d5b2279c784192506223604fdc57b3ce6d01986bdb60c7bfc83b126ec4f65fda18619f8048a6f8155c9cfcb10e63a84ca9c108a7f0320913934be9d6ca6593a33e10aac2c08ea8eebc22c5976e88c4e3b17ce8b0f385bf3dd5f69690b9aaf9d41704f80a840e94e1a7ebeab93c8b26c895ec4bb3bcf61a8d0e2ef005c5aae81f54ce60d5e49dfd0e8c3bbe430e7355a34a8017bb5d0651b0408e342bbc357e84e2e3195344dfb2b6bf809119d482239742ceb3a44514510ed70a47390fab83b2e2ef04a50650022479b2490817309710b57079acc3bb4486cb4cb6e9479acbca3a68af8d64dc54243a6291b8be3c73273450068535205d041a6a6abc868830643074f4d38677a5089d401c3413a24aa58a29ce6bc8c1064ffece680130a80b9fc0a1aa1bbcc03b52e8697b0385b3c2bcd98fbf4c2c2d78d19281ce544c5db9b00a167</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 作为日记加密 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黑马ATM综合案例</title>
      <link href="/posts/73a73fbd.html"/>
      <url>/posts/73a73fbd.html</url>
      
        <content type="html"><![CDATA[<h2 id="黑马ATM综合案例">黑马ATM综合案例</h2><ul><li>主菜单效果</li></ul><p><img src="https://img.777nx.cn/python/%E9%BB%91%E9%A9%ACATM/%E5%9B%BE%E7%89%871.png" alt="主菜单效果"></p><ul><li>查询余额效果</li></ul><p><img src="https://img.777nx.cn/python/%E9%BB%91%E9%A9%ACATM/%E5%9B%BE%E7%89%872.png" alt="查询余额效果"></p><ul><li>存、取款效果</li></ul><p><img src="https://img.777nx.cn/python/%E9%BB%91%E9%A9%ACATM/%E5%9B%BE%E7%89%873.png" alt="存、取款效果"></p><p><img src="https://img.777nx.cn/python/%E9%BB%91%E9%A9%ACATM/%E5%9B%BE%E7%89%874.png" alt="存、取款效果"></p><ul><li><p>定义一个全局变量：money，用来记录银行卡余额（默认5000000）</p></li><li><p>定义一个全局变量：name，用来记录客户姓名（启动程序时输入）</p></li><li><p>定义如下的函数：</p><ul><li>查询余额函数</li><li>存款函数</li><li>取款函数</li><li>主菜单函数</li></ul></li><li><p>要求</p></li><li><p>程序启动后要求输入客户姓名</p></li><li><p>查询余额、存款、取款后都会返回主菜单</p></li><li><p>存款、取款后，都应显示一下当前余额</p></li><li><p>客户选择退出或输入错误，程序会退出，否则一直运行</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">money = <span class="number">2000</span></span><br><span class="line">name = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">name = <span class="built_in">input</span>(<span class="string">&quot;请输入您的姓名：&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询余额函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">query</span>(<span class="params">show_hender</span>):</span><br><span class="line">    <span class="keyword">if</span> show_hender:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;--------查询余额--------&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;name&#125;</span>先生/女士您好，您的余额剩余<span class="subst">&#123;money&#125;</span>元&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 存款函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">saving</span>(<span class="params">num</span>):</span><br><span class="line">    <span class="keyword">global</span> money</span><br><span class="line">    money += num</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;--------存款--------&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;name&#125;</span>先生/女士，存款<span class="subst">&#123;money&#125;</span>成功&quot;</span>)</span><br><span class="line">    query(<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 取款函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_money</span>(<span class="params">num</span>):</span><br><span class="line">    <span class="keyword">global</span> money</span><br><span class="line">    money -= num</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;--------取款--------&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;name&#125;</span>先生/女士，存款<span class="subst">&#123;money&#125;</span>成功&quot;</span>)</span><br><span class="line">    query(<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 主菜单函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;--------主菜单--------&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;name&#125;</span>先生/女士，欢迎来到ATM存取款机&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;查询余额\t[输入1]&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;存款\t\t[输入2]&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;取款\t\t[输入3]&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;退出\t\t[输入4]&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">input</span>(<span class="string">&quot;请输入您的选择：&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    keyboard_input = main()</span><br><span class="line">    <span class="keyword">if</span> keyboard_input == <span class="string">&quot;1&quot;</span>:</span><br><span class="line">        query(<span class="literal">True</span>)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">elif</span> keyboard_input == <span class="string">&quot;2&quot;</span>:</span><br><span class="line">        num = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入你要存款的金额：&quot;</span>))</span><br><span class="line">        saving(num)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">elif</span> keyboard_input == <span class="string">&quot;3&quot;</span>:</span><br><span class="line">        num = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入你要取款的金额：&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> num &lt;= money:</span><br><span class="line">            get_money(num)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;您的余额不足&quot;</span>)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;程序结束&quot;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pycharm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>打印九九乘法表</title>
      <link href="/posts/5851f7f6.html"/>
      <url>/posts/5851f7f6.html</url>
      
        <content type="html"><![CDATA[<h1>打印九九乘法表</h1><h2 id="1-知识点">1. 知识点</h2><h3 id="1-1-print换行不输出">1.1 print换行不输出</h3><p>默认print语句输出内容会自动换行，如下图：<br><img src="https://img.777nx.cn/python/%E4%B9%9D%E4%B9%9D%E4%B9%98%E6%B3%95%E8%A1%A8/%E5%9B%BE%E7%89%871.png" alt="图片1"></p><p>在九九乘法表案例中，我们需要使用print语句，输出不换行的功能，非常简单，实现方式如下：<br><img src="https://img.777nx.cn/python/%E4%B9%9D%E4%B9%9D%E4%B9%98%E6%B3%95%E8%A1%A8/%E5%9B%BE%E7%89%872.png" alt="图片2"></p><p>如图，在print语句中，加上 end=’’ 即可输出不换行了</p><blockquote><p>ps: end=’’ 是使用的方法传参功能，我们在后面会详细讲解。</p></blockquote><h3 id="1-2-制表符-t">1.2 制表符\t</h3><p>在字符串中，有一个特殊符号：\t，效果等同于在键盘上按下：tab键。<br>它可以让我们的多行字符串进行对齐。</p><p>比如：<br><img src="https://img.777nx.cn/python/%E4%B9%9D%E4%B9%9D%E4%B9%98%E6%B3%95%E8%A1%A8/%E5%9B%BE%E7%89%873.png" alt="图片3"></p><h2 id="2-while循环打印九九乘法表">2. while循环打印九九乘法表</h2><p>通过while循环，输出如下九九乘法表内容<br><img src="https://img.777nx.cn/python/%E4%B9%9D%E4%B9%9D%E4%B9%98%E6%B3%95%E8%A1%A8/%E5%9B%BE%E7%89%874.png" alt="图片4"></p><p>提示：</p><ul><li>2层循环，外层控制行，内层控制列</li><li>外层循环和内存循环的累加数字变量，用以辅助输出乘法表的数值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">i = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> i &lt;= <span class="number">9</span>:</span><br><span class="line"></span><br><span class="line">    j = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> j &lt;= i:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;i&#125;</span> * <span class="subst">&#123;j&#125;</span> = <span class="subst">&#123;i * j&#125;</span>\t&quot;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        j += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span>()</span><br></pre></td></tr></table></figure><h2 id="3-for循环打印九九乘法表">3. for循环打印九九乘法表</h2><p>通过for循环，输出如下九九乘法表内容<br><img src="https://img.777nx.cn/python/%E4%B9%9D%E4%B9%9D%E4%B9%98%E6%B3%95%E8%A1%A8/%E5%9B%BE%E7%89%875.png" alt="图片5"></p><p>提示：</p><ul><li>2层循环，外层控制行，内层控制列</li><li>可使用range语句来得到数字序列进行for循环</li><li>内层for循环的range最大范围，取决于当前外层循环的数字</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">10</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, i + <span class="number">1</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;j&#125;</span> * <span class="subst">&#123;i&#125;</span> = <span class="subst">&#123;i * j&#125;</span>\t&quot;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pycharm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>猜拳游戏</title>
      <link href="/posts/ac0a2a38.html"/>
      <url>/posts/ac0a2a38.html</url>
      
        <content type="html"><![CDATA[<h1>猜拳游戏</h1><h2 id="1-需求分析：">1. 需求分析：</h2><ul><li>参与游戏的角色<ul><li>玩家<ul><li>手动出拳</li></ul></li><li>电脑<ul><li>随机出拳</li></ul></li></ul></li><li>判断输赢<ul><li>玩家获胜<br>| 玩家 | 电脑 |<br>|:—:|:—:|<br>| 石头 | 剪刀 |<br>| 剪刀 | 布  |<br>| 布  | 石头 |</li><li>平局<ul><li>玩家出拳 和 电脑出拳相同</li></ul></li><li>电脑获胜</li></ul></li></ul><h2 id="2-随机做法">2. 随机做法</h2><h3 id="2-1-导入random模块">2.1 导入random模块</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> 模块名</span><br></pre></td></tr></table></figure><h3 id="2-2-使用random模块中的随机整数功能">2.2 使用random模块中的随机整数功能</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">random.randint(开始,结束)</span><br></pre></td></tr></table></figure><h2 id="3-参考代码-python代码实现">3. 参考代码(python代码实现)</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个玩家变量，玩家输入0,1,2分别代表石头，剪刀，布</span></span><br><span class="line">player = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请出拳：0--石头，1--剪刀，2--布：&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个电脑变量，电脑使用随机数随机生成0-2之间的数出拳</span></span><br><span class="line">computer = random.randint(<span class="number">0</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">使用if语句判断</span></span><br><span class="line"><span class="string">玩家 and 电脑</span></span><br><span class="line"><span class="string">石头 and 剪刀 ==&gt; 玩家获胜</span></span><br><span class="line"><span class="string">剪刀 and 布 ==&gt; 玩家获胜</span></span><br><span class="line"><span class="string">布 and 石头 ==&gt; 玩家获胜</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">if</span> ((player == <span class="number">0</span>) <span class="keyword">and</span> (computer == <span class="number">1</span>)) <span class="keyword">or</span> ((player == <span class="number">1</span>) <span class="keyword">and</span> (computer == <span class="number">2</span>)) <span class="keyword">or</span> ((player == <span class="number">2</span>) <span class="keyword">and</span> (computer == <span class="number">0</span>)):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;玩家获胜&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 平局的情况</span></span><br><span class="line"><span class="keyword">elif</span> player == computer:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;平局，再来一把&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 玩家获胜和平局情况都列举出来，剩下的就是电脑获胜</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;电脑获胜&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="4-附录-Java代码实现">4. 附录(Java代码实现)</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.777nx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 定义一个扫描器对象</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 提示玩家出拳</span></span><br><span class="line">        System.out.println(<span class="string">&quot;请出拳：0--石头，1--剪刀，2--布：&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 接玩家输入的数据</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">player</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 定义一个电脑对象使用随机数随机出拳</span></span><br><span class="line">        <span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">        <span class="type">int</span> <span class="variable">computer</span> <span class="operator">=</span> r.nextInt(<span class="number">3</span>);    <span class="comment">// 随机生成 0-2 之间的随机数</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 使用if语句判断</span></span><br><span class="line"><span class="comment">         * 玩家 and 电脑</span></span><br><span class="line"><span class="comment">         * 石头 and 剪刀 ==&gt; 玩家获胜</span></span><br><span class="line"><span class="comment">         * 剪刀 and 布 ==&gt; 玩家获胜</span></span><br><span class="line"><span class="comment">         * 布 and 石头 ==&gt; 玩家获胜</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">if</span> ((player == <span class="number">0</span>) &amp;&amp; (computer == <span class="number">1</span>) || (player == <span class="number">1</span>) &amp;&amp; (computer == <span class="number">2</span>) || (player == <span class="number">2</span>) &amp;&amp; (computer == <span class="number">0</span>)) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;玩家获胜&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (player == computer) &#123;</span><br><span class="line">            <span class="comment">// 平局的情况</span></span><br><span class="line">            System.out.println(<span class="string">&quot;平局，再来一把&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 玩家获胜和平局情况都列举出来，剩下的就是电脑获胜</span></span><br><span class="line">            System.out.println(<span class="string">&quot;电脑获胜&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> idea </tag>
            
            <tag> pycharm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>添加恋爱计时小组件</title>
      <link href="/posts/e6d4ba92.html"/>
      <url>/posts/e6d4ba92.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>一个可以让你网站侧栏不在那么孤单的代码，自定义恋爱计时</p><h2 id="实现效果">实现效果</h2><p><img src="https://img.777nx.cn/html/loveTime.png" alt=""></p><h2 id="代码">代码</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 恋爱计时 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;header_slideout-count&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;lovesyl&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 100%; height: 100%; text-align: center; font-size: 1rem;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;lovesylImage&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 220px; margin: 0 auto;&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 左边的头像 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://img.777nx.cn/%E6%83%85%E5%A4%B4/%E6%83%85%E5%A4%B411.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;love&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">style</span>=<span class="string">&quot;width: 60px; border-radius: 50%;&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 中间的图片 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://img.777nx.cn/lovesyl.gif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;love&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 60px; border-radius: 50%;&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 右边的头像 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://img.777nx.cn/%E6%83%85%E5%A4%B4/%E6%83%85%E5%A4%B412.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;love&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">style</span>=<span class="string">&quot;width: 60px; border-radius: 50%;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;loveSitetime&quot;</span> <span class="attr">style</span>=<span class="string">&quot;font-size: 1.0rem;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">javascript</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">loveSitetime</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">window</span>.<span class="built_in">setTimeout</span>(<span class="string">&quot;loveSitetime()&quot;</span>, <span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> seconds = <span class="number">1000</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> minutes = seconds * <span class="number">60</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> hours = minutes * <span class="number">60</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> days = hours * <span class="number">24</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> years = days * <span class="number">365</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> today = <span class="keyword">new</span> <span class="title class_">Date</span>()</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> todayYear = today.<span class="title function_">getFullYear</span>()</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> todayMonth = today.<span class="title function_">getMonth</span>() + <span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> todayDate = today.<span class="title function_">getDate</span>()</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> todayHour = today.<span class="title function_">getHours</span>()</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> todayMinute = today.<span class="title function_">getMinutes</span>()</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> todaySecond = today.<span class="title function_">getSeconds</span>()</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 时间设置</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> t1 = <span class="title class_">Date</span>.<span class="title function_">UTC</span>(<span class="number">2022</span>, <span class="number">06</span>, <span class="number">01</span>, <span class="number">00</span>, <span class="number">00</span>, <span class="number">00</span>)</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> t2 = <span class="title class_">Date</span>.<span class="title function_">UTC</span>(todayYear, todayMonth, todayDate, todayHour, todayMinute, todaySecond)</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> diff = t2 - t1</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> diffYears = <span class="title class_">Math</span>.<span class="title function_">floor</span>(diff / years)</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> diffDays = <span class="title class_">Math</span>.<span class="title function_">floor</span>((diff / days) - diffYears * <span class="number">365</span>)</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> diffHours = <span class="title class_">Math</span>.<span class="title function_">floor</span>((diff - (diffYears * <span class="number">365</span> + diffDays) * days) / hours)</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> diffMinutes = <span class="title class_">Math</span>.<span class="title function_">floor</span>((diff - (diffYears * <span class="number">365</span> + diffDays) * days - diffHours * hours) / minutes)</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> diffSeconds = <span class="title class_">Math</span>.<span class="title function_">floor</span>((diff - (diffYears * <span class="number">365</span> + diffDays) * days - diffHours * hours -</span></span><br><span class="line"><span class="language-javascript">                    diffMinutes * minutes) / seconds)</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;loveSitetime&quot;</span>).<span class="property">innerHTML</span> = <span class="string">&quot;我们相恋了：&lt;/br&gt;&quot;</span> + diffYears + <span class="string">&quot;年&quot;</span> + diffDays + <span class="string">&quot;天&quot;</span> +</span></span><br><span class="line"><span class="language-javascript">                    diffHours + <span class="string">&quot;时&quot;</span> + diffMinutes + <span class="string">&quot;分&quot;</span> + diffSeconds + <span class="string">&quot;秒啦&lt;/br&gt;&quot;</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">loveSitetime</span>()</span></span><br><span class="line"><span class="language-javascript">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法与外挂标签写法汇总</title>
      <link href="/posts/2013454d.html"/>
      <url>/posts/2013454d.html</url>
      
        <content type="html"><![CDATA[<h1>1.Markdown 语法自带格式</h1><div class="note info flat"><p>参考：<a href="https://blog.csdn.net/u014061630/article/details/81359144">Markdown 语法图文全面详解(10 分钟学会)</a></p></div><div class="note warning flat"><p>注意：此页面偶尔会存在 CSS 冲突问题!</p></div><h2 id="1-1-代码块">1.1 代码块</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">\```shell</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">VSCode终端</span></span><br><span class="line">hexo clean; hexo s</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;npm publish&quot;; npm version patch;</span><br><span class="line">git push</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Cmder终端</span></span><br><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line">git add . &amp;&amp; git commit -m &quot;npm publish&quot; &amp;&amp; npm version patch</span><br><span class="line">git push</span><br><span class="line">\```</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">VSCode终端</span></span><br><span class="line">hexo clean; hexo s</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;npm publish&quot;; npm version patch;</span><br><span class="line">git push</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Cmder终端</span></span><br><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line">git add . &amp;&amp; git commit -m &quot;npm publish&quot; &amp;&amp; npm version patch</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-2-多级标题">1.2 多级标题</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># H1</span></span><br><span class="line"><span class="section">## H2</span></span><br><span class="line"><span class="section">### H3</span></span><br><span class="line"><span class="section">#### H4</span></span><br><span class="line"><span class="section">##### H5</span></span><br><span class="line"><span class="section">###### H6</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>见本文章标题!</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-3-文字样式">1.3 文字样式</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>下划线演示<span class="language-xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">文字<span class="strong">**加粗**</span>演示</span><br><span class="line"></span><br><span class="line">文字<span class="emphasis">*斜体*</span>演示</span><br><span class="line"></span><br><span class="line">文本<span class="code">`高亮`</span>演示</span><br><span class="line"></span><br><span class="line">文本~~删除~~线演示</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span> = <span class="string">5</span>&gt;</span></span>5号字<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;黑体&quot;</span>&gt;</span></span>黑体<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">blue</span>&gt;</span></span>蓝色<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">MistyRose</span>&gt;</span></span>这里的背景色是：MistyRosen，此处输入任意想输入的内容<span class="language-xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p><u>下划线演示</u></p><p>文字<strong>加粗</strong>演示</p><p>文字<em>斜体</em>演示</p><p>文本<code>高亮</code>演示</p><p>文本<s>删除</s>线演示</p><p><font size = 5>5 号字</font><br><font face="黑体">黑体</font><br><font color=blue>蓝色</font></p><table><tr><td bgcolor=MistyRose>这里的背景色是：MistyRosen，此处输入任意想输入的内容</td></tr></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="note info flat"><p>上述要点可参考:<a href="https://blog.csdn.net/qq_43732429/article/details/108034518">【Markdown 语法】字体颜色大小及文字底色设置</a></p></div><h2 id="1-4-引用">1.4 引用</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt;  Java</span></span><br><span class="line"><span class="quote">&gt; 二级引用演示</span></span><br><span class="line"><span class="quote">&gt; MySQL</span></span><br><span class="line"><span class="quote">&gt; &gt;外键</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;事务</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;<span class="strong">**行级锁**</span>(引用内部一样可以用格式)</span></span><br><span class="line"><span class="quote">&gt;</span></span><br><span class="line"><span class="quote">&gt; ....</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><blockquote><p>Java<br>二级引用演示<br>MySQL</p><blockquote><p>外键</p><p>事务</p><p><strong>行级锁</strong>(引用内部一样可以用格式)</p></blockquote><p>…</p></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-5-分割线">1.5 分割线</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="strong">**<span class="emphasis">*</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><hr><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-6-列表-跟空格都可以">1.6 列表(*,+,-跟空格都可以)</h2><h3 id="1-6-1-无序列表">1.6.1 无序列表</h3><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">*</span> Java</span><br><span class="line"><span class="bullet">*</span> Python</span><br><span class="line"><span class="bullet">*</span> ...</span><br><span class="line"></span><br><span class="line"><span class="bullet">+</span> Java</span><br><span class="line"><span class="bullet">+</span> Python</span><br><span class="line"><span class="bullet">+</span> ...</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> Java</span><br><span class="line"><span class="bullet">-</span> Python</span><br><span class="line"><span class="bullet">-</span> ...</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ul><li>Java</li><li>Python</li><li>…</li></ul><ul><li>Java</li><li>Python</li><li>…</li></ul><ul><li>Java</li><li>Python</li><li>…</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="1-6-2-有序列表">1.6.2 有序列表</h3><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 注意后面有空格</span></span><br><span class="line"><span class="bullet">1.</span></span><br><span class="line"><span class="bullet">2.</span></span><br><span class="line"><span class="bullet">3.</span></span><br><span class="line">4.</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li></li><li></li><li></li><li></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-7-图片">1.7 图片</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 本地图片</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/assets/pusheencode.webp&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;示例图片&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:50%;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="section"># 在线图片</span></span><br><span class="line">![<span class="string">code</span>](<span class="link">https://cdn.jsdelivr.net/gh/fomalhaut1998/markdown_pic/img/code.png</span>)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>本地图片:<br><img src="/assets/pusheencode.webp" alt="示例图片" style="zoom:50%;" /><br>在线图片:<br><img src="https://cdn.jsdelivr.net/gh/fomalhaut1998/markdown_pic/img/code.png" alt="code"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-8-表格">1.8 表格</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| 项目标号 | 资金     | 备注 |</span><br><span class="line">| -------- | -------- | ---- |</span><br><span class="line">| 1        | 100，000 | 无   |</span><br><span class="line">| 2        | 200，000 | 无   |</span><br><span class="line">| 3        | 300,600  | 重要 |</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><table><thead><tr><th>项目标号</th><th>资金</th><th>备注</th></tr></thead><tbody><tr><td>1</td><td>100，000</td><td>无</td></tr><tr><td>2</td><td>200，000</td><td>无</td></tr><tr><td>3</td><td>300,600</td><td>重要</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-9-公式">1.9 公式</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\Gamma(z)=\int<span class="emphasis">_0^\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt.</span></span><br><span class="line"><span class="emphasis">$$</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>$$<br>\Gamma(z)=\int_0^\infty t^{z-1}e^{-t}dt.<br>$$</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1>2.Butterfly 外挂标签</h1><div class="note info flat"><p>这部分参考安知鱼:<a href="https://anzhiy.cn/posts/7d58.html">基于 Butterfly 的外挂标签引入</a></p></div><h2 id="2-1-行内文本样式-text">2.1 行内文本样式 text</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% u 文本内容 %&#125;</span><br><span class="line">&#123;% emp 文本内容 %&#125;</span><br><span class="line">&#123;% wavy 文本内容 %&#125;</span><br><span class="line">&#123;% del 文本内容 %&#125;</span><br><span class="line">&#123;% kbd 文本内容 %&#125;</span><br><span class="line">&#123;% psw 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 带 &#123;% u 下划线 %&#125; 的文本</span><br><span class="line"><span class="bullet">2.</span> 带 &#123;% emp 着重号 %&#125; 的文本</span><br><span class="line"><span class="bullet">3.</span> 带 &#123;% wavy 波浪线 %&#125; 的文本</span><br><span class="line"><span class="bullet">4.</span> 带 &#123;% del 删除线 %&#125; 的文本</span><br><span class="line"><span class="bullet">5.</span> 键盘样式的文本 &#123;% kbd command %&#125; + &#123;% kbd D %&#125;</span><br><span class="line"><span class="bullet">6.</span> 密码样式的文本：&#123;% psw 这里没有验证码 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><ol><li>带 <u>下划线</u> 的文本</li><li>带 <emp>着重号</emp> 的文本</li><li>带 <wavy>波浪线</wavy> 的文本</li><li>带 <del>删除线</del> 的文本</li><li>键盘样式的文本 <kbd>command</kbd> + <kbd>D</kbd></li><li>密码样式的文本：<psw>这里没有验证码</psw></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-2-行内文本-span">2.2 行内文本 span</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% span 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>字体</code>: logo, code</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>大小</code>: small, h4, h3, h2, h1, large, huge, ultra</li><li><code>对齐方向</code>: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% span red, 红色 %&#125;、&#123;% span yellow, 黄色 %&#125;、&#123;% span green, 绿色 %&#125;、&#123;% span cyan, 青色 %&#125;、&#123;% span blue, 蓝色 %&#125;、&#123;% span gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% span center logo large, Volantis %&#125;</span><br><span class="line">&#123;% span center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<span class='p red'>红色</span>、<span class='p yellow'>黄色</span>、<span class='p green'>绿色</span>、<span class='p cyan'>青色</span>、<span class='p blue'>蓝色</span>、<span class='p gray'>灰色</span>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<br><span class='p center logo large'>Volantis</span><br><span class='p center small'>A Wonderful Theme for Hexo</span></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-3-段落文本-p">2.3 段落文本 p</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% p 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>字体</code>: logo, code</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>大小</code>: small, h4, h3, h2, h1, large, huge, ultra</li><li><code>对齐方向</code>: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% p red, 红色 %&#125;、&#123;% p yellow, 黄色 %&#125;、&#123;% p green, 绿色 %&#125;、&#123;% p cyan, 青色 %&#125;、&#123;% p blue, 蓝色 %&#125;、&#123;% p gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% p center logo large, Volantis %&#125;</span><br><span class="line">&#123;% p center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<p class='p red'>红色</p>、<p class='p yellow'>黄色</p>、<p class='p green'>绿色</p>、<p class='p cyan'>青色</p>、<p class='p blue'>蓝色</p>、<p class='p gray'>灰色</p>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。</li></ul><p class='p center logo large'>Volantis</p><p class='p center small'>A Wonderful Theme for Hexo</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-4-引用-note">2.4 引用 note</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">通用配置</button></li><li class="tab"><button type="button" data-href="#分栏-2">语法格式</button></li><li class="tab"><button type="button" data-href="#分栏-3">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-4">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-5">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">note:</span><br><span class="line">  # Note tag style values:</span><br><span class="line">  #  - simple    bs-callout old alert style. Default.</span><br><span class="line">  #  - modern    bs-callout new (v2-v3) alert style.</span><br><span class="line">  #  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span><br><span class="line">  #  - disabled  disable all CSS styles import of note tag.</span><br><span class="line">  style: simple</span><br><span class="line">  icons: false</span><br><span class="line">  border<span class="emphasis">_radius: 3</span></span><br><span class="line"><span class="emphasis">  # Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span></span><br><span class="line"><span class="emphasis">  # Offset also applied to label tag variables. This option can work with disabled note tag.</span></span><br><span class="line"><span class="emphasis">  light_</span>bg<span class="emphasis">_offset: 0</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 自带icon</span></span><br><span class="line">&#123;% note [class] [no-icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"><span class="section"># 外部icon</span></span><br><span class="line">&#123;% note [color] [icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.自带 icon</p><table><thead><tr><th>参数</th><th style="text-align:center">用法</th></tr></thead><tbody><tr><td>class</td><td style="text-align:center">【可选】标识，不同的标识有不同的配色 （ default / primary / success / info / warning / danger ）</td></tr><tr><td>no-icon</td><td style="text-align:center">【可选】不显示 icon</td></tr><tr><td>style</td><td style="text-align:center">【可选】可以覆盖配置中的 style （simple/modern/flat/disabled）</td></tr></tbody></table><p>2.外部 icon</p><table><thead><tr><th>参数</th><th style="text-align:center">用法</th></tr></thead><tbody><tr><td>class</td><td style="text-align:center">【可选】标识，不同的标识有不同的配色 （ default / blue / pink / red / purple / orange / green ）</td></tr><tr><td>no-icon</td><td style="text-align:center">【可选】可配置自定义 icon (只支持 fontawesome 图标, 也可以配置 no-icon )</td></tr><tr><td>style</td><td style="text-align:center">【可选】可以覆盖配置中的 style （simple/modern/flat/disabled）</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><details class="folding-tag" blue><summary> 1.自带icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note simple %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default simple %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary simple %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success simple %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info simple %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning simple %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger simple %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>2.<code>modern</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note modern %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default modern %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary modern %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success modern %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info modern %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning modern %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger modern %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>3.<code>flat</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note flat %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default flat %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary flat %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success flat %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info flat %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning flat %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger flat %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>4.<code>disabled</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note disabled %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default disabled %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary disabled %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success disabled %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info disabled %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning disabled %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger disabled %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>5.<code>no-icon</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default no-icon %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary no-icon %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success no-icon %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info no-icon %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning no-icon %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger no-icon %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><details class="folding-tag" blue><summary> 2.外部icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; simple %&#125;2021 年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; simple %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; simple%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; simple %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; simple %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>2.<code>modern</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern %&#125;2021 年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; modern %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; modern%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; modern %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; modern %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>3.<code>flat</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; flat %&#125;2021 年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; flat %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; flat%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; flat %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; flat %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>4.<code>disabled</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; disabled %&#125;2021 年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; disabled %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; disabled %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; disabled %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; disabled %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>5.<code>no-icon</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue no-icon %&#125;2021 年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink no-icon %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red no-icon %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple no-icon %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green no-icon %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-5"><details class="folding-tag" blue><summary> 1.自带icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><div class="note simple"><p>默认 提示块标签</p></div><div class="note default simple"><p>default 提示块标签</p></div><div class="note primary simple"><p>primary 提示块标签</p></div><div class="note success simple"><p>success 提示块标签</p></div><div class="note info simple"><p>info 提示块标签</p></div><div class="note warning simple"><p>warning 提示块标签</p></div><div class="note danger simple"><p>danger 提示块标签</p></div> 2.`modern`样式<div class="note modern"><p>默认 提示块标签</p></div><div class="note default modern"><p>default 提示块标签</p></div><div class="note primary modern"><p>primary 提示块标签</p></div><div class="note success modern"><p>success 提示块标签</p></div><div class="note info modern"><p>info 提示块标签</p></div><div class="note warning modern"><p>warning 提示块标签</p></div><div class="note danger modern"><p>danger 提示块标签</p></div><p>3.<code>flat</code>样式</p><div class="note flat"><p>默认 提示块标签</p></div><div class="note default flat"><p>default 提示块标签</p></div><div class="note primary flat"><p>primary 提示块标签</p></div><div class="note success flat"><p>success 提示块标签</p></div><div class="note info flat"><p>info 提示块标签</p></div><div class="note warning flat"><p>warning 提示块标签</p></div><div class="note danger flat"><p>danger 提示块标签</p></div><p>4.<code>disabled</code>样式</p><div class="note disabled"><p>默认 提示块标签</p></div><div class="note default disabled"><p>default 提示块标签</p></div><div class="note primary disabled"><p>primary 提示块标签</p></div><div class="note success disabled"><p>success 提示块标签</p></div><div class="note info disabled"><p>info 提示块标签</p></div><div class="note warning disabled"><p>warning 提示块标签</p></div><div class="note danger disabled"><p>danger 提示块标签</p></div><p>5.<code>no-icon</code>样式</p><div class="note no-icon flat"><p>默认 提示块标签</p></div><div class="note default no-icon flat"><p>default 提示块标签</p></div><div class="note primary no-icon flat"><p>primary 提示块标签</p></div><div class="note success no-icon flat"><p>success 提示块标签</p></div><div class="note info no-icon flat"><p>info 提示块标签</p></div><div class="note warning no-icon flat"><p>warning 提示块标签</p></div><div class="note danger no-icon flat"><p>danger 提示块标签</p></div>              </div>            </details><details class="folding-tag" blue><summary> 2.外部icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><div class="note icon-padding simple"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>2021 年快到了…</p></div><div class="note pink icon-padding simple"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding simple"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding simple"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding simple"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding simple"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>2.<code>modern</code>样式</p><div class="note icon-padding modern"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>2021 年快到了…</p></div><div class="note pink icon-padding modern"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding modern"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>3.<code>flat</code>样式</p><div class="note icon-padding flat"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>2021 年快到了…</p></div><div class="note pink icon-padding flat"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding flat"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>4.<code>disabled</code>样式</p><div class="note icon-padding disabled"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding disabled"><i class="note-icon fas fa-bullhorn"></i><p>2021 年快到了…</p></div><div class="note pink icon-padding disabled"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding disabled"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding disabled"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding disabled"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding disabled"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>5.<code>no-icon</code>样式</p><div class="note no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue no-icon flat"><p>2021 年快到了…</p></div><div class="note pink no-icon flat"><p>小心开车 安全至上</p></div><div class="note red no-icon flat"><p>这是三片呢？还是四片？</p></div><div class="note orange no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple no-icon flat"><p>剪刀石头布</p></div><div class="note green no-icon flat"><p>前端最讨厌的浏览器</p></div>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-5-上标标签-tip">2.5 上标标签 tip</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>样式</code>: success,error,warning,bolt,ban,home,sync,cogs,key,bell</li><li><code>自定义图标</code>: 支持 fontawesome。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip %&#125;default&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip info %&#125;info&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip success %&#125;success&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip error %&#125;error&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip warning %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bolt %&#125;bolt&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban %&#125;ban&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip home %&#125;home&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip sync %&#125;sync&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip cogs %&#125;cogs&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip key %&#125;key&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bell %&#125;bell&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip fa-atom %&#125;自定义font awesome图标&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="tip "><p>default</p></div><div class="tip info"><p>info</p></div><div class="tip success"><p>success</p></div><div class="tip error"><p>error</p></div><div class="tip warning"><p>warning</p></div><div class="tip bolt"><p>bolt</p></div><div class="tip ban"><p>ban</p></div><div class="tip home"><p>home</p></div><div class="tip sync"><p>sync</p></div><div class="tip cogs"><p>cogs</p></div><div class="tip key"><p>key</p></div><div class="tip bell"><p>bell</p></div><div class="tip fa-atom"><p>自定义 font awesome 图标</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-6-动态标签-anima">2.6 动态标签 anima</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><div class="note info flat"><ol><li>将所需的 CSS 类添加到图标（或 DOM 中的任何元素）。</li><li>对于父级悬停样式，需要给目标元素添加指定 CSS 类，同时还要给目标元素的父级元素添加 CSS 类<code>faa-parent animated-hover</code>。（详情见示例及示例源码）<br>You can regulate the speed of the animation by adding the CSS class or . faa-fastfaa-slow</li><li>可以通过给目标元素添加 CSS 类<code>faa-fast</code>或<code>faa-slow</code>来控制动画快慢。</li></ol></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.On DOM load（当页面加载时显示动画）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>2.调整动画速度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated faa-fast %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated faa-slow %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>3.On hover（当鼠标悬停时显示动画）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated-hover %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated-hover %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>4.On parent hover（当鼠标悬停在父级元素时显示动画）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-parent animated-hover %&#125;<span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-horizontal&quot;</span>&gt;</span></span>warning<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-parent animated-hover %&#125;<span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-flash&quot;</span>&gt;</span></span>ban<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.On DOM load（当页面加载时显示动画）</p><div class="tip warning faa-horizontal animated"><p>warning</p></div><div class="tip ban faa-flash animated"><p>ban</p></div> 2.调整动画速度<div class="tip warning faa-horizontal animated faa-fast"><p>warning</p></div><div class="tip ban faa-flash animated faa-slow"><p>ban</p></div>3.On hover（当鼠标悬停时显示动画）<div class="tip warning faa-horizontal animated-hover"><p>warning</p></div><div class="tip ban faa-flash animated-hover"><p>ban</p></div>4.On parent hover（当鼠标悬停在父级元素时显示动画）<div class="tip warning faa-parent animated-hover"><p class="faa-horizontal">warning</p></div><div class="tip ban faa-parent animated-hover"><p class="faa-flash">ban</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-7-复选列表-checkbox">2.7 复选列表 checkbox</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>样式</code>: plus, minus, times</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>选中状态</code>: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 纯文本测试 %&#125;</span><br><span class="line">&#123;% checkbox checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% checkbox red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% checkbox green checked, 绿色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox yellow checked, 黄色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox cyan checked, 青色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox blue checked, 蓝色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox plus green checked, 增加 %&#125;</span><br><span class="line">&#123;% checkbox minus yellow checked, 减少 %&#125;</span><br><span class="line">&#123;% checkbox times red checked, 叉 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class='checkbox'><input type="checkbox" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>支持自定义颜色</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>绿色 + 默认选中</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>黄色 + 默认选中</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>青色 + 默认选中</p>            </div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>蓝色 + 默认选中</p>            </div><div class='checkbox plus green checked'><input type="checkbox" checked="checked"/>            <p>增加</p>            </div><div class='checkbox minus yellow checked'><input type="checkbox" checked="checked"/>            <p>减少</p>            </div><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>叉</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-8-单选列表-radio">2.8 单选列表 radio</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>选中状态</code>: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 纯文本测试 %&#125;</span><br><span class="line">&#123;% radio checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% radio red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% radio green, 绿色 %&#125;</span><br><span class="line">&#123;% radio yellow, 黄色 %&#125;</span><br><span class="line">&#123;% radio cyan, 青色 %&#125;</span><br><span class="line">&#123;% radio blue, 蓝色 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class='checkbox'><input type="radio" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="radio" />            <p>支持自定义颜色</p>            </div><div class='checkbox green'><input type="radio" />            <p>绿色</p>            </div><div class='checkbox yellow'><input type="radio" />            <p>黄色</p>            </div><div class='checkbox cyan'><input type="radio" />            <p>青色</p>            </div><div class='checkbox blue'><input type="radio" />            <p>蓝色</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-9-时间轴-timeline">2.9 时间轴 timeline</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 时间线标题（可选）[,color] %&#125;</span><br><span class="line">&lt;!-- timeline 时间节点（标题） --&gt;</span><br><span class="line">正文内容</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&lt;!-- timeline 时间节点（标题） --&gt;</span><br><span class="line">正文内容</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>title</code>:标题/时间线</li><li><code>color</code>:<code>timeline</code>颜色:default(留空) / blue / pink / red / purple / orange / green</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 时间轴样式,blue %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-07-24 [<span class="string">2.6.6 -&gt; 3.0</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases</span>) --&gt;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 如果有 <span class="code">`hexo-lazyload-image`</span> 插件，需要删除并重新安装最新版本，设置 <span class="code">`lazyload.isSPA: true`</span>。</span><br><span class="line"><span class="bullet">2.</span> 2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <span class="code">`use_cdn: true`</span> 则需要删除。</span><br><span class="line"><span class="bullet">3.</span> 2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</span><br><span class="line"><span class="bullet">4.</span> 2.x 版本的置顶 <span class="code">`top: true`</span> 改为了 <span class="code">`pin: true`</span>，并且同样适用于 <span class="code">`layout: page`</span> 的页面。</span><br><span class="line"><span class="bullet">5.</span> 如果使用了 <span class="code">`hexo-offline`</span> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-05-15 [<span class="string">2.6.3 -&gt; 2.6.6</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6</span>) --&gt;</span><br><span class="line"></span><br><span class="line">不需要额外处理。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-04-20 [<span class="string">2.6.2 -&gt; 2.6.3</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3</span>) --&gt;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 全局搜索 <span class="code">`seotitle`</span> 并替换为 <span class="code">`seo_title`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的索引规则有变，使用 group 组件的文章内，<span class="code">`group: group_name`</span> 对应的组件名必须是 <span class="code">`group_name`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的列表名优先显示文章的 <span class="code">`short_title`</span> 其次是 <span class="code">`title`</span>。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>时间轴样式</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-07-24 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases">2.6.6 -&gt; 3.0</a></p></div></div><div class='timeline-item-content'><ol><li>如果有 <code>hexo-lazyload-image</code> 插件，需要删除并重新安装最新版本，设置 <code>lazyload.isSPA: true</code>。</li><li>2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <code>use_cdn: true</code> 则需要删除。</li><li>2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</li><li>2.x 版本的置顶 <code>top: true</code> 改为了 <code>pin: true</code>，并且同样适用于 <code>layout: page</code> 的页面。</li><li>如果使用了 <code>hexo-offline</code> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</li></ol></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-05-15 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6">2.6.3 -&gt; 2.6.6</a></p></div></div><div class='timeline-item-content'><p>不需要额外处理。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-04-20 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3">2.6.2 -&gt; 2.6.3</a></p></div></div><div class='timeline-item-content'><ol><li>全局搜索 <code>seotitle</code> 并替换为 <code>seo_title</code>。</li><li>group 组件的索引规则有变，使用 group 组件的文章内，<code>group: group_name</code> 对应的组件名必须是 <code>group_name</code>。</li><li>group 组件的列表名优先显示文章的 <code>short_title</code> 其次是 <code>title</code>。</li></ol></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-10-链接卡片-link">2.10 链接卡片 link</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link 标题, 链接, 图片链接（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link Akilarの糖果屋,糖果屋教程贴,https://akilar.top/ %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://akilar.top/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/akilar.top/.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Akilarの糖果屋</div>            <div class="tag-link-sitename">糖果屋教程贴</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-11-按钮-btns">2.11 按钮 btns</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns 样式参数 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li>圆角样式：rounded, circle</li><li>增加文字样式：可以在容器内增加 <code>&lt;b&gt;</code>标题<code>&lt;/b&gt;</code>和<code>&lt;p&gt;</code>描述文字<code>&lt;/p&gt;</code></li><li>布局方式：<br>默认为自动宽度，适合视野内只有一两个的情况。</li></ol><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>wide</td><td>宽一点的按钮</td></tr><tr><td>fill</td><td>填充布局，自动铺满至少一行，多了会换行</td></tr><tr><td>center</td><td>居中，按钮之间是固定间距</td></tr><tr><td>around</td><td>居中分散</td></tr><tr><td>grid2</td><td>等宽最多 2 列，屏幕变窄会适当减少列数</td></tr><tr><td>grid3</td><td>等宽最多 3 列，屏幕变窄会适当减少列数</td></tr><tr><td>grid4</td><td>等宽最多 4 列，屏幕变窄会适当减少列数</td></tr><tr><td>grid5</td><td>等宽最多 5 列，屏幕变窄会适当减少列数</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.如果需要显示类似「团队成员」之类的一组含有头像的链接</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns circle grid5 %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><p>2.或者含有图标的按钮</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns rounded grid5 %&#125;</span><br><span class="line">&#123;% cell 下载源码, /, fas fa-download %&#125;</span><br><span class="line">&#123;% cell 查看文档, /, fas fa-book-open %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><p>3.圆形图标 + 标题 + 描述 + 图片 + 网格 5 列 + 居中</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns circle center grid5 %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="language-xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">&#123;% p red, 专业版 %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_pro.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="language-xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">&#123;% p green, 免费版 %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_lite.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.如果需要显示类似「团队成员」之类的一组含有头像的链接</p><div class="btns circle grid5">            <a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>          </div> 2.或者含有图标的按钮<div class="btns rounded grid5">            <a class="button" href='/' title='下载源码'><i class='fas fa-download'></i>下载源码</a><a class="button" href='/' title='查看文档'><i class='fas fa-book-open'></i>查看文档</a>          </div> 3.圆形图标 + 标题 + 描述 + 图片 + 网格 5 列 + 居中<div class="btns circle center grid5">            <a href='https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1'><i class='fab fa-apple'></i><b>心率管家</b><p class='p red'>专业版</p><img src='https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_pro.png'></a><a href='https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1'><i class='fab fa-apple'></i><b>心率管家</b><p class='p green'>免费版</p><img src='https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_lite.png'></a>          </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-12-github-卡片-ghcard">2.12 github 卡片 ghcard</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% ghcard 用户名, 其它参数（可选） %&#125;</span><br><span class="line">&#123;% ghcard 用户名/仓库, 其它参数（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>使用<code>,</code>分割各个参数。写法为：<code>参数名=参数值</code><br>以下只写几个常用参数值。</p><table><thead><tr><th><strong>参数名</strong></th><th>取值</th><th>释义</th></tr></thead><tbody><tr><td>hide</td><td>stars,commits,prs,issues,contribs</td><td>隐藏指定统计</td></tr><tr><td>count_private</td><td>true</td><td>将私人项目贡献添加到总提交计数中</td></tr><tr><td>show_icons</td><td>true</td><td>显示图标</td></tr><tr><td>theme</td><td>查阅:<a href="https://github.com/anuraghazra/github-readme-stats/blob/master/themes/README.md">Available Themes</a></td><td>主题</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.用户信息卡片</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| &#123;% ghcard 777nx %&#125; | &#123;% ghcard 777nx, theme=vue %&#125; |</span><br><span class="line">| -- | -- |</span><br><span class="line">| &#123;% ghcard 777nx, theme=buefy %&#125; | &#123;% ghcard fomalhaut1998, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard 777nx, theme=onedark %&#125; | &#123;% ghcard 777nx, theme=solarized-dark %&#125; |</span><br><span class="line">| &#123;% ghcard 777nx, theme=algolia %&#125; | &#123;% ghcard 777nx, theme=calm %&#125; |</span><br></pre></td></tr></table></figure><p>2.仓库信息卡片</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis %&#125;                | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=vue %&#125;             |</span><br><span class="line">| ---------------------------------------------------------- | ------------------------------------------------------------------ |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=buefy %&#125;   | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=onedark %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=solarized-dark %&#125;  |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=algolia %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=calm %&#125;            |</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.用户信息卡片</p><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/777nx"><img src="https://github-readme-stats.vercel.app/api/?username=777nx&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/777nx"><img src="https://github-readme-stats.vercel.app/api/?username=777nx&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/777nx"><img src="https://github-readme-stats.vercel.app/api/?username=777nx&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/777nx"><img src="https://github-readme-stats.vercel.app/api/?username=777nx&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/777nx"><img src="https://github-readme-stats.vercel.app/api/?username=777nx&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/777nx"><img src="https://github-readme-stats.vercel.app/api/?username=777nx&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/777nx"><img src="https://github-readme-stats.vercel.app/api/?username=777nx&theme=calm&show_owner=true"/></a></td></tr></tbody></table><p>2.仓库信息卡片</p><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=calm&show_owner=true"/></a></td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-13-github-徽标-ghbdage">2.13 github 徽标 ghbdage</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage [right],[left],[logo]||[color],[link],[title]||[option] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>left</code>：徽标左边的信息，必选参数。</li><li><code>right</code>: 徽标右边的信息，必选参数，</li><li><code>logo</code>：徽标图标，图标名称详见<a href="https://simpleicons.org/">simpleicons</a>，可选参数。</li><li><code>color</code>：徽标右边的颜色，可选参数。</li><li><code>link</code>：指向的链接，可选参数。</li><li><code>title</code>：徽标的额外信息，可选参数。主要用于优化 SEO，但<code>object</code>标签不会像<code>a</code>标签一样在鼠标悬停显示<code>title</code>信息。</li><li><code>option</code>：自定义参数，支持<a href="https://shields.io/">shields.io</a>的全部 API 参数支持，具体参数可以参看上文中的拓展写法示例。形式为<code>name1=value2&amp;name2=value2</code>。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.基本参数,定义徽标左右文字和图标</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage Theme,Butterfly %&#125;</span><br><span class="line">&#123;% bdage Frame,Hexo,hexo %&#125;</span><br></pre></td></tr></table></figure><p>2.信息参数，定义徽标右侧内容背景色，指向链接</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage CDN,JsDelivr,jsDelivr||abcdef,https://metroui.org.ua/index.html,本站使用JsDelivr为静态资源提供CDN加速 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割</span><br><span class="line">&#123;% bdage Source,GitHub,GitHub||,https://github.com/ %&#125;</span><br></pre></td></tr></table></figure><p>3.拓展参数，支持 shields 的 API 的全部参数内容</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage Hosted,Vercel,Vercel||brightgreen,https://vercel.com/,本站采用双线部署，默认线路托管于Vercel||style=social&amp;logoWidth=20 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割</span><br><span class="line">&#123;% bdage Hosted,Vercel,Vercel||||style=social&amp;logoWidth=20&amp;logoColor=violet %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.基本参数,定义徽标左右文字和图标</p><p><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Butterfly-Theme-orange?logo=&color=orange&link=&"></object><br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Hexo-Frame-orange?logo=hexo&color=orange&link=&"></object></p><p>2.信息参数，定义徽标右侧内容背景色，指向链接</p><p><object class="ghbdage" style="margin-inline:5px" title="本站使用JsDelivr为静态资源提供CDN加速" standby="loading..." data="https://img.shields.io/badge/JsDelivr-CDN-orange?logo=jsDelivr&color=abcdef&link=https://metroui.org.ua/index.html&"></object><br>//如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割<br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/GitHub-Source-orange?logo=GitHub&color=orange&link=https://github.com/&"></object></p><p>3.拓展参数，支持 shields 的 API 的全部参数内容</p><p><object class="ghbdage" style="margin-inline:5px" title="本站采用双线部署，默认线路托管于Vercel" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=brightgreen&link=https://vercel.com/&style=social&logoWidth=20"></object><br>//如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割<br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=orange&link=&style=social&logoWidth=20&logoColor=violet"></object></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-14-网站卡片-sites">2.14 网站卡片 sites</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site xaoxuu, url=https://xaoxuu.com, screenshot=https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg, avatar=https://cdn.jsdelivr.net/gh/777nx/cdn-assets/avatar/avatar.png, description=简约风格 %&#125;</span><br><span class="line">&#123;% site inkss, url=https://inkss.cn, screenshot=https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg, avatar=https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site MHuiG, url=https://blog.mhuig.top, screenshot=https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png, avatar=https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site Colsrch, url=https://colsrch.top, screenshot=https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png, avatar=https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site Linhk1606, url=https://linhk1606.github.io, screenshot=https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png, avatar=https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class="site-card-group"><a class="site-card" href="https://www.777nx.cn"><div class="img"><img src="https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/777nx/cdn-assets/avatar/avatar.png"/><span class="title">777nx</span><span class="desc">简约风格</span></div></a><a class="site-card" href="https://inkss.cn"><div class="img"><img src="https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg"/><span class="title">inkss</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://blog.mhuig.top"><div class="img"><img src="https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png"/><span class="title">MHuiG</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://colsrch.top"><div class="img"><img src="https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg"/><span class="title">Colsrch</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://linhk1606.github.io"><div class="img"><img src="https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png"/></div><div class="info"><img src="https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png"/><span class="title">Linhk1606</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-15-行内图片-inlineimage">2.15 行内图片 inlineimage</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% inlineimage 图片链接, height=高度（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>高度</code>：height=20px</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif %&#125; 一段话。</span><br><span class="line"></span><br><span class="line">这又是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif, height=40px %&#125; 一段话。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>这是 <img no-lazy class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif" style="height:1.5em"/> 一段话。</p><p>这又是 <img no-lazy class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif" style="height:40px;"/> 一段话。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-16-单张图片-image">2.16 单张图片 image</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image 链接, width=宽度（可选）, height=高度（可选）, alt=描述（可选）, bg=占位颜色（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li>图片宽度高度：width=300px, height=32px</li><li>图片描述：alt=图片描述（butterfly 需要在主题配置文件中开启图片描述）</li><li>占位背景色：bg=#f2f2f2</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.添加描述：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, alt=每天下课回宿舍的路，没有什么故事。 %&#125;</span><br></pre></td></tr></table></figure><p>2.指定宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px %&#125;</span><br></pre></td></tr></table></figure><p>3.指定宽度并添加描述：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, alt=每天下课回宿舍的路，没有什么故事。 %&#125;</span><br></pre></td></tr></table></figure><p>4.设置占位背景色：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, bg=#1D0C04, alt=优化不同宽度浏览的观感 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.添加描述：</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。"/></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div>2..指定宽度<div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" style="width:400px;"/></div></div> 3.指定宽度并添加描述：<div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。" style="width:400px;"/></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div> 4.设置占位背景色：<div class="img-wrap"><div class="img-bg" style="background:#1D0C04"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="优化不同宽度浏览的观感" style="width:400px;"/></div><span class="image-caption">优化不同宽度浏览的观感</span></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-17-音频-audio">2.17 音频 audio</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% audio 音频链接 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% audio https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class="audio"><audio controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-18-视频-video">2.18 视频 video</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video 视频链接 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>对齐方向</code>：left, center, right</li><li><code>列数</code>：逗号后面直接写列数，支持 1 ～ 4 列。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.100%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br></pre></td></tr></table></figure><p>2.50%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% videos, 2 %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure><p>3.25%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% videos, 4 %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.100%宽度</p><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div>2.50%宽度<div class="videos" col='2'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div>3.25%宽度<div class="videos" col='4'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-19-相册-gallery">2.19 相册 gallery</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><p>1.gallerygroup 相册图库</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>2.gallery 相册</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">markdown 圖片格式</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ul><li>gallerygroup 相册图库</li></ul><table><thead><tr><th>参数名</th><th>释义</th></tr></thead><tbody><tr><td>name</td><td>图库名字</td></tr><tr><td>description</td><td>图库描述</td></tr><tr><td>link</td><td>链接到对应相册的地址</td></tr><tr><td>img-url</td><td>图库封面</td></tr></tbody></table><ul><li><p>gallery 相册</p><p>区别于旧版的 Gallery 相册,新的 Gallery 相册会自动根据图片长度进行排版，书写也更加方便，与 markdown 格式一样。可根据需要插入到相应的 md。无需再自己配置长宽。<strong>建议在粘贴时故意使用长短、大小、横竖不一的图片</strong>，会有更好的效果。（尺寸完全相同的图片只会平铺输出，效果很糟糕）</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.gallerygroup 相册图库</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup MC 在Rikkaの六花服务器里留下的足迹 &#x27;/gallery/MC/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/1.jpg %&#125;</span><br><span class="line">&#123;% galleryGroup Gundam 哦咧哇gundam哒！ &#x27;/gallery/Gundam/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907110508327.png %&#125;</span><br><span class="line">&#123;% galleryGroup I-am-Akilar 某种意义上也算自拍吧 &#x27;/gallery/I-am-Akilar/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907113116651.png %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>2.gallery 相册</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg</span>)</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.gallerygroup 相册图库</p><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/1.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">MC</div>  <p>在Rikkaの六花服务器里留下的足迹</p>  <a href='/gallery/MC/'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907110508327.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Gundam</div>  <p>哦咧哇gundam哒！</p>  <a href='/gallery/Gundam/'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907113116651.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">I-am-Akilar</div>  <p>某种意义上也算自拍吧</p>  <a href='/gallery/I-am-Akilar/'></a>  </figcaption>  </figure></div>2.gallery 相册<div class="fj-gallery"><p><img src="https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg" alt=""></p>          </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-20-折叠框-folding">2.20 折叠框 folding</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><p>1.gallerygroup 相册图库</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 参数（可选）, 标题 %&#125;</span><br><span class="line">![](<span class="link">https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg</span>)</span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><!-- tab 参数配置 --><ol><li><p><code>颜色</code>：blue, cyan, green, yellow, red</p></li><li><p><code>状态</code>：状态填写 open 代表默认打开。</p></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 查看图片测试 %&#125;</span><br><span class="line"></span><br><span class="line">![](<span class="link">https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg</span>)</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding cyan open, 查看默认打开的折叠框 %&#125;</span><br><span class="line"></span><br><span class="line">这是一个默认打开的折叠框。</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding green, 查看代码测试 %&#125;</span><br><span class="line">假装这里有代码块（代码块没法嵌套代码块）</span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding yellow, 查看列表测试 %&#125;</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> haha</span><br><span class="line"><span class="bullet">-</span> hehe</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding red, 查看嵌套测试 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding blue, 查看嵌套测试2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding 查看嵌套测试3 %&#125;</span><br><span class="line"></span><br><span class="line">hahaha <span class="language-xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png&#x27;</span> <span class="attr">style</span>=<span class="string">&#x27;height:24px&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><details class="folding-tag" ><summary> 查看图片测试 </summary>              <div class='content'>              <p><img src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg" alt=""></p>              </div>            </details><details class="folding-tag" cyan open><summary> 查看默认打开的折叠框 </summary>              <div class='content'>              <p>这是一个默认打开的折叠框。</p>              </div>            </details><details class="folding-tag" green><summary> 查看代码测试 </summary>              <div class='content'>              <p>假装这里有代码块（代码块没法嵌套代码块）</p>              </div>            </details><details class="folding-tag" yellow><summary> 查看列表测试 </summary>              <div class='content'>              <ul><li>haha</li><li>hehe</li></ul>              </div>            </details><details class="folding-tag" red><summary> 查看嵌套测试 </summary>              <div class='content'>              <details class="folding-tag" blue><summary> 查看嵌套测试2 </summary>              <div class='content'>              <details class="folding-tag" ><summary> 查看嵌套测试3 </summary>              <div class='content'>              <p>hahaha <span><img src='https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png' style='height:24px'></span></p>              </div>            </details>              </div>            </details>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-21-分栏-tab">2.21 分栏 tab</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab [Tab caption] [@icon] --&gt;</span><br><span class="line"></span><br><span class="line">Any content (support inline tags too).</span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><p>Unique name :</p><ul><li><p>选项卡块标签的唯一名称，不带逗号。</p></li><li><p>将在#id 中用作每个标签及其索引号的前缀。</p></li><li><p>如果名称中包含空格，则对于生成#id，所有空格将由破折号代替。</p></li><li><p>仅当前帖子/页面的 URL 必须是唯一的！</p></li></ul></li><li><p>[index]:</p><ul><li><p>活动选项卡的索引号。</p></li><li><p>如果未指定，将选择第一个标签（1）。</p></li><li><p>如果 index 为-1，则不会选择任何选项卡。</p></li><li><p>可选参数。</p></li></ul></li><li><p>[Tab caption]:</p><ul><li><p>当前选项卡的标题。</p></li><li><p>如果未指定标题，则带有制表符索引后缀的唯一名称将用作制表符的标题。</p></li><li><p>如果未指定标题，但指定了图标，则标题将为空。</p></li><li><p>可选参数。</p></li></ul></li><li><p>[@icon]:</p><ul><li><p>FontAwesome 图标名称（全名，看起来像“ fas fa-font”）</p></li><li><p>可以指定带空格或不带空格；</p></li><li><p>例如’Tab caption @icon’ 和 ‘Tab caption@icon’.</p></li><li><p>可选参数。</p></li></ul></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.Demo 1 - 预设选择第一个【默认】</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test1 %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"></span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"></span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"></span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>2.Demo 2 - 预设选择 tabs</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test2, 3 %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"></span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"></span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"></span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>3.Demo 3 - 没有预设值</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test3, -1 %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"></span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"></span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"></span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>4.Demo 4 - 自定义 Tab 名 + 只有 icon + icon 和 Tab 名</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test4 %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 第一个Tab --&gt;</span><br><span class="line"></span><br><span class="line"><span class="strong">**tab 名字为第一个 Tab**</span></span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab @fab fa-apple-pay --&gt;</span><br><span class="line"></span><br><span class="line"><span class="strong">**只有图标 没有 Tab 名字**</span></span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 炸弹@fas fa-bomb --&gt;</span><br><span class="line"></span><br><span class="line"><span class="strong">**名字+icon**</span></span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.Demo 1 - 预设选择第一个【默认】</p><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>2.Demo 2 - 预设选择 tabs</p><div class="tabs" id="test2"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test2-1">test2 1</button></li><li class="tab"><button type="button" data-href="#test2-2">test2 2</button></li><li class="tab active"><button type="button" data-href="#test2-3">test2 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test2-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test2-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>3.Demo 3 - 没有预设值</p><div class="tabs" id="test3"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test3-1">test3 1</button></li><li class="tab"><button type="button" data-href="#test3-2">test3 2</button></li><li class="tab"><button type="button" data-href="#test3-3">test3 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test3-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>4.Demo 4 - 自定义 Tab 名 + 只有 icon + icon 和 Tab 名</p><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">第一个Tab</button></li><li class="tab"><button type="button" data-href="#test4-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button></li><li class="tab"><button type="button" data-href="#test4-3"><i class="fas fa-bomb"></i>炸弹</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>tab 名字为第一个 Tab</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p><strong>只有图标 没有 Tab 名字</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p><strong>名字+icon</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-22-诗词标签-poem">2.22 诗词标签 poem</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><ol><li><code>title</code>：诗词标题</li><li><code>author</code>：作者，可以不写</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;% poem 水调歌头,苏轼 %&#125;</span><br><span class="line">丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。</span><br><span class="line">明月几时有？把酒问青天。</span><br><span class="line">不知天上宫阙，今夕是何年？</span><br><span class="line">我欲乘风归去，又恐琼楼玉宇，高处不胜寒。</span><br><span class="line">起舞弄清影，何似在人间？</span><br><span class="line"></span><br><span class="line">转朱阁，低绮户，照无眠。</span><br><span class="line">不应有恨，何事长向别时圆？</span><br><span class="line">人有悲欢离合，月有阴晴圆缺，此事古难全。</span><br><span class="line">但愿人长久，千里共婵娟。</span><br><span class="line">&#123;% endpoem %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class='poem'><div class='poem-title'>水调歌头</div><div class='poem-author'>苏轼</div><p>丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。<br>明月几时有？把酒问青天。<br>不知天上宫阙，今夕是何年？<br>我欲乘风归去，又恐琼楼玉宇，高处不胜寒。<br>起舞弄清影，何似在人间？</p><p>转朱阁，低绮户，照无眠。<br>不应有恨，何事长向别时圆？<br>人有悲欢离合，月有阴晴圆缺，此事古难全。<br>但愿人长久，千里共婵娟。</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-23-阿里图标-icon">2.23 阿里图标 icon</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% icon [icon-xxxx],[font-size] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>icon-xxxx</code>：表示图标<code>font-class</code>,可以在自己的阿里矢量图标库项目的<code>font-class</code>引用方案内查询并复制。</li><li><code>font-size</code>：表示图标大小，直接填写数字即可，单位为<code>em</code>。图标大小默认值为<code>1em</code>。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;% icon icon-rat<span class="emphasis">_zi %&#125;&#123;% icon icon-rat,2 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-ox_</span>chou,3 %&#125;&#123;% icon icon-ox,4 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-tiger<span class="emphasis">_yin,5 %&#125;&#123;% icon icon-tiger,6 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-rabbit_</span>mao,1 %&#125;&#123;% icon icon-rabbit,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-dragon<span class="emphasis">_chen,3 %&#125;&#123;% icon icon-dragon,4 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-snake_</span>si,5 %&#125;&#123;% icon icon-snake,6 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-horse<span class="emphasis">_wu %&#125;&#123;% icon icon-horse,2 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-goat_</span>wei,3 %&#125;&#123;% icon icon-goat,4 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-monkey<span class="emphasis">_shen,5 %&#125;&#123;% icon icon-monkey,6 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-rooster_</span>you %&#125;&#123;% icon icon-rooster,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-dog<span class="emphasis">_xu,3 %&#125;&#123;% icon icon-dog,4 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-boar_</span>hai,5 %&#125;&#123;% icon icon-boar,6 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rat_zi"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rat"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-ox_chou"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-ox"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-tiger_yin"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-tiger"></use></svg></p><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rabbit_mao"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rabbit"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dragon_chen"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dragon"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-snake_si"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-snake"></use></svg></p><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-horse_wu"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-horse"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-goat_wei"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-goat"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-monkey_shen"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-monkey"></use></svg></p><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rooster_you"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rooster"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dog_xu"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dog"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-boar_hai"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-boar"></use></svg></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-24-特效标签-wow">2.24 特效标签 wow</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow [animete],[duration],[delay],[offset],[iteration] %&#125;</span><br><span class="line">内容</span><br><span class="line">&#123;% endwow %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>animate</code>: 动画样式，效果详见<a href="https://animate.style/">animate.css 参考文档</a></li><li><code>duration</code>: 选填项，动画持续时间，单位可以是<code>ms</code>也可以是<code>s</code>。例如<code>3s</code>，<code>700ms</code>。</li><li><code>delay</code>: 选填项，动画开始的延迟时间，单位可以是<code>ms</code>也可以是<code>s</code>。例如<code>3s</code>，<code>700ms</code>。</li><li><code>offset</code>: 选填项，开始动画的距离（相对浏览器底部）</li><li><code>iteration</code>: 选填项，动画重复的次数</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.flip 动画效果。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__zoomIn,5s,5s,100,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`zoomIn`动画效果，持续`5s`，延时`5s`，离底部`100`距离时启动，重复`10`次</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><p>2.zoomIn 动画效果，持续 5s，延时 5s，离底部 100 距离时启动，重复 10 次</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__zoomIn,5s,5s,100,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`zoomIn`动画效果，持续`5s`，延时`5s`，离底部`100`距离时启动，重复`10`次</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><p>3.slideInRight 动画效果，持续 5s，延时 5s</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__slideInRight,5s,5s %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note orange &#x27;fas fa-car&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`slideInRight`动画效果，持续`5s`，延时`5s`。</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><p>4.heartBeat 动画效果，延时 5s，重复 10 次。此处注意不用的参数位置要留空，用逗号间隔。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__heartBeat,,5s,,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note red &#x27;fas fa-battery-half&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`heartBeat`动画效果，延时`5s`，重复`10`次。</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.flip 动画效果。</p><div class='wow animate__zoomIn' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset='100'  data-wow-iteration='10' ><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>10</code>次</p></div></div><p>2.zoomIn 动画效果，持续 5s，延时 5s，离底部 100 距离时启动，重复 10 次</p><div class='wow animate__zoomIn' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset='100'  data-wow-iteration='10' ><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>10</code>次</p></div></div><p>3.slideInRight 动画效果，持续 5s，延时 5s</p><div class='wow animate__slideInRight' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset=''  data-wow-iteration='' ><div class="note orange icon-padding modern"><i class="note-icon fas fa-car"></i><p><code>slideInRight</code>动画效果，持续<code>5s</code>，延时<code>5s</code>。</p></div></div><p>4.heartBeat 动画效果，延时 5s，重复 10 次。此处注意不用的参数位置要留空，用逗号间隔。</p><div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='5s' data-wow-offset=''  data-wow-iteration='10' ><div class="note red icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p><code>heartBeat</code>动画效果，延时<code>5s</code>，重复<code>10</code>次。</p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-25-进度条-progress">2.25 进度条 progress</h2><div class="note info flat"><p>进度条标签参考<a href="https://rongbuqiu.com/jdt.html">沂佰孜猫-给 HEXO 文章添加彩色进度条</a>。<br>源样式提取自<a href="https://zwying0814.gitbook.io/cuteen/">Cuteen</a>主题。</p></div><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-2">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% progress [width] [color] [text] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>width</code>: 0 到 100 的阿拉伯数字</li><li><code>color</code>: 颜色，取值有 red,yellow,green,cyan,blue,gray</li><li><code>text</code>:进度条上的文字内容</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% progress 10 red 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 30 yellow 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 50 green 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 70 cyan 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 90 blue 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 100 gray 进度条样式预览 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-red"  style="width: 10%" aria-valuenow="10" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-yellow"  style="width: 30%" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-green"  style="width: 50%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-cyan"  style="width: 70%" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-blue"  style="width: 90%" aria-valuenow="90" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-gray"  style="width: 100%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-26-注释-notation">2.26 注释 notation</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% nota [label] , [text] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><p><code>label</code>: 注释词汇</p></li><li><p><code>text</code>: 悬停显示的注解内容</p></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% nota 把鼠标移动到我上面试试 ,可以看到注解内容出现在顶栏 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p><span class='nota' data-nota='可以看到注解内容出现在顶栏'>把鼠标移动到我上面试试</span></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-27-气泡注释-bubble">2.27 气泡注释 bubble</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bubble [content] , [notation] ,[background-color] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>content</code>: 注释词汇</li><li><code>notation</code>: 悬停显示的注解内容</li><li><code>background-color</code>: 可选，气泡背景色。默认为“#71a4e3”</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的&#123;% bubble 兄弟相邻选择器,&quot;例如 h1 + p &#123;margin-top:50px;&#125;&quot; %&#125;，&#123;% bubble flex布局,&quot;Flex 是 Flexible Box 的缩写，意为&quot;弹性布局&quot;，用来为盒状模型提供最大的灵活性&quot;,&quot;#ec5830&quot; %&#125;，&#123;% bubble transform变换,&quot;transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。&quot;,&quot;#1db675&quot; %&#125;，animation的&#123;% bubble 贝塞尔速度曲线,&quot;贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋&quot;,&quot;#de4489&quot; %&#125;写法，还有今天刚看到的&#123;% bubble clip-path,&quot;clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。&quot;,&quot;#868fd7&quot; %&#125;属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如 CSS 的<span class="bubble-content">兄弟相邻选择器</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#71a4e3;">例如 h1 + p {margin-top:50px;}</span></span>，<span class="bubble-content">flex布局</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#ec5830;">Flex 是 Flexible Box 的缩写，意为弹性布局&quot;，用来为盒状模型提供最大的灵活性&quot;</span></span>，<span class="bubble-content">transform变换</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#1db675;">transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。</span></span>，animation 的<span class="bubble-content">贝塞尔速度曲线</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#de4489;">贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋</span></span>写法，还有今天刚看到的<span class="bubble-content">clip-path</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#868fd7;">clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。</span></span>属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-28-引用文献-reference">2.28 引用文献 reference</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% referto [id] , [literature] %&#125;</span><br><span class="line">&#123;% referfrom [id] , [literature] , [url] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><p>referto 引用上标</p><ul><li><p><code>id</code>: 上标序号内容，需与 referfrom 标签的 id 对应才能实现跳转</p></li><li><p><code>literature</code>: 引用的参考文献名称</p></li></ul></li><li><p>referfrom 引用出处</p><ul><li><p><code>id</code>: 序号内容，需与 referto 标签的 id 对应才能实现 跳转</p></li><li><p><code>literature</code>: 引用的参考文献名称</p></li><li><p><code>url</code>: 引用的参考文献链接，可省略</p></li></ul></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Akilarの糖果屋(akilar.top)是一个私人性质的博客&#123;% referto &#x27;[1]&#x27;,&#x27;Akilarの糖果屋群聊简介&#x27; %&#125;，从各类教程至生活点滴，无话不谈。建群的目的是提供一个闲聊的场所。博客采用Hexo框架&#123;% referto &#x27;[2]&#x27;,&#x27;Hexo中文文档&#x27; %&#125;，Butterfly主题&#123;% referto &#x27;[3]&#x27;,&#x27;Butterfly 安装文档(一) 快速开始&#x27; %&#125;</span><br><span class="line"></span><br><span class="line">本项目参考了Volantis&#123;% referto &#x27;[4]&#x27;,&#x27;hexo-theme-volantis 标签插件&#x27; %&#125;的标签样式。引入<span class="code">`[tag].js`</span>，并针对<span class="code">`butterfly`</span>主题修改了相应的<span class="code">`[tag].styl`</span>。在此鸣谢<span class="code">`Volantis`</span>主题众开发者。</span><br><span class="line">主要参考内容包括各个volantis的内置标签插件文档&#123;% referto &#x27;[5]&#x27;,&#x27;Volantis文档:内置标签插件&#x27; %&#125;</span><br><span class="line">Butterfly主题的各个衍生魔改&#123;% referto &#x27;[6]&#x27;,&#x27;Butterfly 安装文档:标签外挂（Tag Plugins&#x27; %&#125;&#123;% referto &#x27;[7]&#x27;,&#x27;小弋の生活馆全样式预览&#x27; %&#125;&#123;% referto &#x27;[8]&#x27;,&#x27;l-lin-font-awesome-animation&#x27; %&#125;&#123;% referto &#x27;[9]&#x27;,&#x27;小康的butterfly主题使用文档&#x27; %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% referfrom &#x27;[1]&#x27;,&#x27;Akilarの糖果屋群聊简介&#x27;,&#x27;https://jq.qq.com/?<span class="emphasis">_wv=1027&amp;k=pGLB2C0N&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[2]&#x27;,&#x27;Hexo中文文档&#x27;,&#x27;https://hexo.io/zh-cn/docs/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[3]&#x27;,&#x27;Butterfly 安装文档(一) 快速开始&#x27;,&#x27;https://butterfly.js.org/posts/21cfbf15/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[4]&#x27;,&#x27;hexo-theme-volantis 标签插件&#x27;,&#x27;https://volantis.js.org/v5/tag-plugins/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[5]&#x27;,&#x27;Volantis文档:内置标签插件&#x27;,&#x27;https://volantis.js.org/tag-plugins/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[6]&#x27;,&#x27;Butterfly 安装文档:标签外挂（Tag Plugins&#x27;,&#x27;https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[7]&#x27;,&#x27;小弋の生活馆全样式预览&#x27;,&#x27;https://lovelijunyi.gitee.io/posts/c898.html&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[8]&#x27;,&#x27;l-lin-font-awesome-animation&#x27;,&#x27;https://github.com/l-lin/font-awesome-animation&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[9]&#x27;,&#x27;小康的butterfly主题使用文档&#x27;,&#x27;https://www.antmoe.com/posts/3b43914f/&#x27; %&#125;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>Akilar の糖果屋(akilar.top)是一个私人性质的博客<span class="hidden-anchor" id="referto_[1]"></span><sup class="reference"><a href="#referfrom_[1]">[1]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Akilarの糖果屋群聊简介</span><span class="reference-title">参考资料</span></span></span>，从各类教程至生活点滴，无话不谈。建群的目的是提供一个闲聊的场所。博客采用 Hexo 框架<span class="hidden-anchor" id="referto_[2]"></span><sup class="reference"><a href="#referfrom_[2]">[2]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Hexo中文文档</span><span class="reference-title">参考资料</span></span></span>，Butterfly 主题<span class="hidden-anchor" id="referto_[3]"></span><sup class="reference"><a href="#referfrom_[3]">[3]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Butterfly 安装文档(一) 快速开始</span><span class="reference-title">参考资料</span></span></span></p><p>本项目参考了 Volantis<span class="hidden-anchor" id="referto_[4]"></span><sup class="reference"><a href="#referfrom_[4]">[4]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">hexo-theme-volantis 标签插件</span><span class="reference-title">参考资料</span></span></span>的标签样式。引入<code>[tag].js</code>，并针对<code>butterfly</code>主题修改了相应的<code>[tag].styl</code>。在此鸣谢<code>Volantis</code>主题众开发者。<br>主要参考内容包括各个 volantis 的内置标签插件文档<span class="hidden-anchor" id="referto_[5]"></span><sup class="reference"><a href="#referfrom_[5]">[5]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Volantis文档:内置标签插件</span><span class="reference-title">参考资料</span></span></span><br>Butterfly 主题的各个衍生魔改<span class="hidden-anchor" id="referto_[6]"></span><sup class="reference"><a href="#referfrom_[6]">[6]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Butterfly 安装文档:标签外挂（Tag Plugins</span><span class="reference-title">参考资料</span></span></span><span class="hidden-anchor" id="referto_[7]"></span><sup class="reference"><a href="#referfrom_[7]">[7]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">小弋の生活馆全样式预览</span><span class="reference-title">参考资料</span></span></span><span class="hidden-anchor" id="referto_[8]"></span><sup class="reference"><a href="#referfrom_[8]">[8]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">l-lin-font-awesome-animation</span><span class="reference-title">参考资料</span></span></span><span class="hidden-anchor" id="referto_[9]"></span><sup class="reference"><a href="#referfrom_[9]">[9]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">小康的butterfly主题使用文档</span><span class="reference-title">参考资料</span></span></span></p><div class="reference-source"><span class="hidden-anchor" id="referfrom_[1]"></span><a class="reference-anchor" href="#referto_[1]">[1]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://jq.qq.com/?_wv=1027&k=pGLB2C0N">Akilarの糖果屋群聊简介</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[2]"></span><a class="reference-anchor" href="#referto_[2]">[2]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://hexo.io/zh-cn/docs/">Hexo中文文档</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[3]"></span><a class="reference-anchor" href="#referto_[3]">[3]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://butterfly.js.org/posts/21cfbf15/">Butterfly 安装文档(一) 快速开始</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[4]"></span><a class="reference-anchor" href="#referto_[4]">[4]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://volantis.js.org/v5/tag-plugins/">hexo-theme-volantis 标签插件</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[5]"></span><a class="reference-anchor" href="#referto_[5]">[5]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://volantis.js.org/tag-plugins/">Volantis文档:内置标签插件</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[6]"></span><a class="reference-anchor" href="#referto_[6]">[6]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89">Butterfly 安装文档:标签外挂（Tag Plugins</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[7]"></span><a class="reference-anchor" href="#referto_[7]">[7]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://lovelijunyi.gitee.io/posts/c898.html">小弋の生活馆全样式预览</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[8]"></span><a class="reference-anchor" href="#referto_[8]">[8]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://github.com/l-lin/font-awesome-animation">l-lin-font-awesome-animation</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[9]"></span><a class="reference-anchor" href="#referto_[9]">[9]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://www.antmoe.com/posts/3b43914f/">小康的butterfly主题使用文档</a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-29-PDF-展示">2.29 PDF 展示</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% pdf 文件路径 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>文件路径</code>: 可以是相对路径或者是在线链接</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 1.本地文件:在md文件路径下创建一个同名文件夹，其内放pdf文件名为xxx.pdf的文件</span></span><br><span class="line">&#123;% pdf xxx.pdf %&#125;</span><br><span class="line"><span class="section"># 2.在线链接</span></span><br><span class="line">&#123;% pdf https://cdn.jsdelivr.net/gh/Justlovesmile/CDN/pdf/小作文讲义.pdf %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>2.在线链接(要放到最外层才能起作用)</p><pre><code>&lt;div class=&quot;row&quot;&gt;&lt;embed src=&quot;https://cdn.jsdelivr.net/gh/Justlovesmile/CDN/pdf/小作文讲义.pdf&quot; width=&quot;100%&quot; height=&quot;550&quot; type=&quot;application/pdf&quot;&gt;&lt;/div&gt;</code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-30-Hexo-tag-map-插件">2.30 Hexo-tag-map 插件</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% + 标签值 + 经度 + 纬度 + 文本 + 缩放等级 + 宽 + 高 + 默认图层 + %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><table><thead><tr><th style="text-align:center">地图名</th><th style="text-align:center">标签值 &lt;必填&gt;</th><th style="text-align:center">宽 (默认 100%) / 高 (默认 360px)</th><th style="text-align:center">缩放等级 (默认 14)</th><th style="text-align:center">宽 (默认 100%) / 高 (默认 360px)</th><th style="text-align:center">默认图层 (默认 1)</th></tr></thead><tbody><tr><td style="text-align:center">混合地图</td><td style="text-align:center">map</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 3~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~7</td></tr><tr><td style="text-align:center">谷歌地图</td><td style="text-align:center">googleMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~20</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~3</td></tr><tr><td style="text-align:center">高德地图</td><td style="text-align:center">gaodeMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 3~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~3</td></tr><tr><td style="text-align:center">百度地图</td><td style="text-align:center">baiduMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 4~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~2</td></tr><tr><td style="text-align:center">Geoq 地图</td><td style="text-align:center">geoqMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~5</td></tr><tr><td style="text-align:center">openstreet 地图</td><td style="text-align:center">openstreetMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">不支持此参数</td></tr></tbody></table><ol><li>参数之间，用英文逗号相隔</li><li>参数必须按上述事例顺序输入，不得为空</li><li>同一个页面，同一组经纬度值，只能插入一个相同标签值的地图 (若有需要，可以将第二个地图上，经度或纬度末尾删除一两个数)</li><li>参数取值必须在上述范围内</li><li>默认图层：即地图叠加层的值，默认常规地图还是卫星地图，可按地图显示顺序取值</li><li>缩放等级，数字越大，地图比例尺越小，显示的越精细</li><li>除标签值外，其他参数选填，但 每个参数的左边的参数必填</li><li>谷歌地图需要外网才能加载查看</li></ol><p>坐标获取：<a href="https://lbs.amap.com/tools/picker">高德地图坐标拾取系统</a> 、<a href="https://api.map.baidu.com/lbsapi/getpoint/index.html">百度地图坐标拾取系统</a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% map 120.101101,30.239119 %&#125;</span><br><span class="line">&#123;% googleMap 120.101101,30.239119, 这里是西湖灵隐寺，据说求姻缘很灵验哦！ %&#125;</span><br><span class="line">&#123;% geoqMap 120.101101,30.239119, 这里是西湖灵隐寺，据说求姻缘很灵验哦！, 13, 90%, 320px, 3 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div class="map-box"><div id="map-120.101101-30.239119" style="max-width:100%; height:360px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div></div><script type="text/javascript">var normalm=L.tileLayer.chinaProvider('GaoDe.Normal.Map',{maxZoom:20,minZoom:1,attribution:'Amap'});var imgm=L.tileLayer.chinaProvider('GaoDe.Satellite.Map',{maxZoom:20,minZoom:1,attribution:'Amap'});var imga=L.tileLayer.chinaProvider('GaoDe.Satellite.Annotion',{maxZoom:20,minZoom:1,attribution:'Amap'});var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:20,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'});routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:21,minZoom:1});var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'}),routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:21,minZoom:1,attribution:'Google Maps'});var normalm1=L.tileLayer.chinaProvider('Geoq.Normal.Map',{maxZoom:21,minZoom:1,attribution:'GeoQ'});var normal=L.layerGroup([normalm]),image=L.layerGroup([imgm,imga]);var baseLayers={"高德地图":normal,"智图地图":normalm1,"谷歌地图":normalMap,"高德卫星地图":imgm,"谷歌卫星地图":satelliteMap,"高德卫星标注":image,"谷歌卫星标注":routeMap};var mymap=L.map('map-120.101101-30.239119',{center:[30.239119,120.101101],zoom:14,layers:[normal],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);</script><br><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div id="googleMap-120.101101-30.239119" style="max-width:100%; height:360px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div><script type="text/javascript">var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:22,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:22,minZoom:1,attribution:'Google Maps'}),routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:22,minZoom:1,attribution:'Google Maps'});var baseLayers={"谷歌地图":normalMap,"谷歌卫星图":satelliteMap,"谷歌卫星标注": routeMap};var overlayLayers={};var mymap=L.map("googleMap-120.101101-30.239119",{center:[30.239119,120.101101],zoom:14,layers:[normalMap],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);var marker = L.marker(['30.239119','120.101101']).addTo(mymap);marker.bindPopup("这里是西湖灵隐寺，据说求姻缘很灵验哦！").openPopup();</script><br><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div id="geoqMap-120.101101-30.239119" style="max-width:90%; height:320px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div><script type="text/javascript">var normalm1=L.tileLayer.chinaProvider('Geoq.Normal.Map',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm2=L.tileLayer.chinaProvider('Geoq.Normal.PurplishBlue',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm3=L.tileLayer.chinaProvider('Geoq.Normal.Gray',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm4=L.tileLayer.chinaProvider('Geoq.Normal.Warm',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm5=L.tileLayer.chinaProvider('Geoq.Theme.Hydro',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normal=L.layerGroup([normalm1,normalm2,normalm3,normalm4,normalm5]);var baseLayers={"智图地图":normalm1,"午夜蓝":normalm2,"灰色":normalm3,"暖色":normalm4,"水系":normalm5};var mymap=L.map("geoqMap-120.101101-30.239119",{center:[30.239119,120.101101],zoom:13,layers:[normalm3],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);var marker = L.marker(['30.239119','120.101101']).addTo(mymap);marker.bindPopup("这里是西湖灵隐寺，据说求姻缘很灵验哦！").openPopup();</script><br><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-31-隐藏块">2.31 隐藏块</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock display,bg,color %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li>content：要隐藏的内容</li><li>display：展示前按钮显示的文字（可选）</li><li>bg：按钮的背景颜色（可选）</li><li>color：按钮显示的文字的颜色（可选）</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock 点我预览, blue %&#125;</span><br><span class="line">这里有张图片：</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://lsky.777nx.cn/i/2023/04/27/1682593379408.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;image (1)&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:67%;&quot;</span> /&gt;</span></span></span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="hide-block"><button type="button" class="hide-button" style="background-color:  blue;">点我预览    </button><div class="hide-content"><p>这里有张图片：<br><img src="https://lsky.777nx.cn/i/2023/04/27/1682593379408.png" alt="image (1)" style="zoom:67%;" /></p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> 外挂标签 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>花朵数</title>
      <link href="/posts/b76107bc.html"/>
      <url>/posts/b76107bc.html</url>
      
        <content type="html"><![CDATA[<h2 id="编程大题">编程大题</h2><p>花朵数</p><h3 id="题目">题目</h3><p>一个N位的十进制正整数，如果它的每个位上的数字的N次方的和等于这个数本身，则称其为花朵数。<br>例如：当 <code>N=3</code>时，<code>153</code>就满足条件，因为<code>1^3+5^3+3^3=153</code>，这样的数字也被称为水仙花数（其中，“＾”表示乘方，5＾3表示5的3次方，也就是立方）。<br>当<code>N＝4</code>时，<code>1634</code>满足条件，因为<code>1^4+6^4+3^4+4^4=1634</code>。<br>当<code>N＝5</code>时，<code>92727</code>满足条件。<br>实际上，对N的每个取值，可能有多个数字满足条件。<br>程序的任务是：求<code>N＝21</code>时，所有满足条件的花朵数。注意：这个整数有21位，它的各个位数字的21次方之和正好等于这个数本身。<br>如果满足条件的数字不只有一个，请从小到大输出所有符合条件的数字，每个数字占一行。因为这个数字很大，请注意解法时间上的可行性。要求程序在1分钟内运行完毕。</p><h3 id="参考答案">参考答案</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">long</span> <span class="variable">start</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">        <span class="type">int</span>[] a = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>];</span><br><span class="line">        BigInteger[] b = <span class="keyword">new</span> <span class="title class_">BigInteger</span>[<span class="number">10</span>];</span><br><span class="line">        <span class="comment">// 计算0~9 10个数的21次方并且存储在数组b中</span></span><br><span class="line">        b[<span class="number">0</span>] = BigInteger.ZERO;</span><br><span class="line">        b[<span class="number">1</span>] = BigInteger.ONE;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">2</span>; i &lt;= <span class="number">9</span>; i++) &#123;</span><br><span class="line">            b[i] = BigInteger.valueOf(i).pow(<span class="number">21</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 调用函数</span></span><br><span class="line">        ss(b, a, <span class="number">0</span>, <span class="number">21</span>);</span><br><span class="line">        <span class="type">long</span> <span class="variable">end</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">        <span class="type">double</span> <span class="variable">sec</span> <span class="operator">=</span> (end - start) / <span class="number">1000.0</span>;</span><br><span class="line">        System.out.println(sec + <span class="string">&quot;秒&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// index现在进行到数组的第几个元素</span></span><br><span class="line">    <span class="comment">// left这个元素出现的次数最多有多少次</span></span><br><span class="line">    <span class="comment">// a数组的下标表示0~9这10个数字，a数组元素的值表示下标数字出现的次数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">ss</span><span class="params">(BigInteger[] b, <span class="type">int</span>[] a, <span class="type">int</span> index, <span class="type">int</span> left)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (index == <span class="number">9</span>) &#123;</span><br><span class="line">            <span class="comment">// 一次深度优先走完</span></span><br><span class="line">            <span class="comment">// 刚好21次也分配完了</span></span><br><span class="line">            a[<span class="number">9</span>] = left;</span><br><span class="line">            <span class="keyword">if</span> (a[<span class="number">9</span>] &lt; <span class="number">10</span>) &#123;</span><br><span class="line">                <span class="comment">// 9的21次方出现的次数不能超过10次，因为9的21次方是21位数</span></span><br><span class="line">                <span class="type">BigInteger</span> <span class="variable">ret</span> <span class="operator">=</span> BigInteger.ZERO;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; a.length; i++) &#123;</span><br><span class="line">                    <span class="comment">// 一旦结果超过21位，立即跳出循环</span></span><br><span class="line">                    <span class="keyword">if</span> (ret.toString().length() &gt; <span class="number">21</span>) &#123;</span><br><span class="line">                        ret = <span class="literal">null</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">// 把每个数字出现的次数乘以它的21次方，然后累加起来</span></span><br><span class="line">                    <span class="keyword">if</span> (a[i] != <span class="number">0</span>) &#123;</span><br><span class="line">                        ret = ret.add(b[i].multiply(BigInteger.valueOf(a[i])));</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (ret != <span class="literal">null</span> &amp;&amp; ret.toString().length() == <span class="number">21</span>) &#123;</span><br><span class="line">                    <span class="comment">// 进一步验证每个数字出现的次数是否和a数组一致</span></span><br><span class="line">                    <span class="type">String</span> <span class="variable">x</span> <span class="operator">=</span> ret.toString();</span><br><span class="line">                    <span class="comment">// System.out.println(x);</span></span><br><span class="line">                    <span class="type">int</span>[] c = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>];</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; x.length(); i++) &#123;</span><br><span class="line">                        c[x.charAt(i) - <span class="string">&#x27;0&#x27;</span>]++;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">// 对比两个数组，一致说明找到答案</span></span><br><span class="line">                    <span class="type">boolean</span> <span class="variable">isRight</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; c.length; i++) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (a[i] != c[i]) &#123;</span><br><span class="line">                            isRight = <span class="literal">false</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (isRight) &#123;</span><br><span class="line">                        System.out.println(x);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 为第index个a数组元素分配次数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt;= left; i++) &#123;</span><br><span class="line">            a[index] = i;</span><br><span class="line">            ss(b, a, index + <span class="number">1</span>, left - i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="程序运行参考结果">程序运行参考结果</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">128468643043731391252</span><br><span class="line">449177399146038697307</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Maven问题</title>
      <link href="/posts/35d6d7eb.html"/>
      <url>/posts/35d6d7eb.html</url>
      
        <content type="html"><![CDATA[<h2 id="Maven问题">Maven问题</h2><p>【不支持源选项5。请使用7或更高版本】问题解决方案</p><h3 id="1-问题">1. 问题</h3><p>不支持源选项5。请使用7或更高版本。不支持目标选项5。请使用7或更高版本</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[<span class="built_in">INFO</span>] </span><br><span class="line">[<span class="built_in">INFO</span>] --- maven-compiler-plugin:3.1:compile (default-compile) @ springmvc_03_request_mapping ---</span><br><span class="line">[<span class="built_in">INFO</span>] Changes detected - recompiling the module!</span><br><span class="line">[<span class="built_in">WARNING</span>] File encoding has <span class="keyword">not</span> been set, using platform encoding UTF-8, i.e. build is platform dependent!</span><br><span class="line">[<span class="built_in">INFO</span>] Compiling 4 source files <span class="keyword">to</span> E:\java\Javaganji\spring\02-springmvc\02-springmvc\day01\源码\springmvc\springmvc_03_request_mapping\target\classes</span><br><span class="line">[<span class="built_in">INFO</span>] -------------------------------------------------------------</span><br><span class="line">[<span class="built_in">ERROR</span>] COMPILATION <span class="built_in">ERROR</span> : </span><br><span class="line">[<span class="built_in">INFO</span>] -------------------------------------------------------------</span><br><span class="line">[<span class="built_in">ERROR</span>] 不再支持源选项 5。请使用 7 或更高版本。</span><br><span class="line">[<span class="built_in">ERROR</span>] 不再支持目标选项 5。请使用 7 或更高版本。</span><br><span class="line">[<span class="built_in">INFO</span>] 2 errors </span><br><span class="line">[<span class="built_in">INFO</span>] -------------------------------------------------------------</span><br></pre></td></tr></table></figure><h3 id="2-问题原因">2. 问题原因</h3><p><code>maven</code>的<code>setings.xml</code>文件中默认是<code>JDK1.4</code>版本，需要加载更高版本的<code>JDK</code>才行。</p><h3 id="3-解决办法">3. 解决办法</h3><h4 id="3-1-暂时解决">3.1 暂时解决</h4><p>在<code>pom.xml</code>文件中指定的<code>jdk</code>版本，运行另一个项目，需要在另一个项目的<code>pom.xml</code>文件中再配置一个，每换一个项目，都需要在<code>pom.xml</code>中配置一个，所以是暂时解决的。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">&lt;properties&gt;</span></span><br><span class="line">        <span class="section">&lt;project.build.sourceEncoding&gt;</span><span class="attribute">UTF</span>-<span class="number">8</span>&lt;/project.build.sourceEncoding&gt;</span><br><span class="line">        <span class="section">&lt;maven.compiler.encoding&gt;</span><span class="attribute">UTF</span>-<span class="number">8</span>&lt;/maven.compiler.encoding&gt;</span><br><span class="line">        <span class="section">&lt;java.version&gt;</span><span class="attribute">1</span>.<span class="number">8</span>&lt;/java.version&gt;</span><br><span class="line">        <span class="section">&lt;maven.compiler.source&gt;</span><span class="attribute">1</span>.<span class="number">8</span>&lt;/maven.compiler.source&gt;</span><br><span class="line">        <span class="section">&lt;maven.compiler.target&gt;</span><span class="attribute">1</span>.<span class="number">8</span>&lt;/maven.compiler.target&gt;</span><br><span class="line"> <span class="section">&lt;/properties&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-2-永久解决">3.2 永久解决</h4><p>在<code>maven</code>配置文件<code>settings.xml</code>文件中在每次运行<code>maven</code>用指定的<code>jdk</code>版本<br>把下面的代码放到<code>&lt;profiles&gt;&lt;/profiles&gt;</code>标签的中间才能生效</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">&lt;profile&gt;</span>  </span><br><span class="line">     <span class="section">&lt;id&gt;</span><span class="attribute">jdk</span>-<span class="number">1</span>.<span class="number">8</span>&lt;/id&gt;  </span><br><span class="line">     <span class="section">&lt;activation&gt;</span>  </span><br><span class="line">         <span class="section">&lt;activeByDefault&gt;</span><span class="attribute">true</span>&lt;/activeByDefault&gt;  </span><br><span class="line">         <span class="section">&lt;jdk&gt;</span><span class="attribute">1</span>.<span class="number">8</span>&lt;/jdk&gt;  </span><br><span class="line">     <span class="section">&lt;/activation&gt;</span></span><br><span class="line">     <span class="section">&lt;properties&gt;</span></span><br><span class="line">         <span class="section">&lt;project.build.sourceEncoding&gt;</span><span class="attribute">UTF</span>-<span class="number">8</span>&lt;/project.build.sourceEncoding&gt;</span><br><span class="line">         <span class="section">&lt;maven.compiler.source&gt;</span><span class="attribute">1</span>.<span class="number">8</span>&lt;/maven.compiler.source&gt;  </span><br><span class="line">         <span class="section">&lt;maven.compiler.target&gt;</span><span class="attribute">1</span>.<span class="number">8</span>&lt;/maven.compiler.target&gt;   </span><br><span class="line">     <span class="section">&lt;/properties&gt;</span>   </span><br><span class="line"><span class="section">&lt;/profile&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一元二次方程求解</title>
      <link href="/posts/db8566f5.html"/>
      <url>/posts/db8566f5.html</url>
      
        <content type="html"><![CDATA[<h2 id="问题">问题</h2><p>通过键盘输入系数a,b,c，求一元二次方程的实根，要求判断有无实根</p><h3 id="训练提示">训练提示</h3><p>$$<br>ax^2+bx+c=0，a\neq 0 \<br>\Delta=b^2-4ac \<br>If \quad \Delta \geq 0 \quad Then \<br>\quad x_1=\displaystyle \frac{-b+\sqrt{b^2-4ac}}{2a} \<br>\quad x_2=\displaystyle \frac{-b-\sqrt{b^2-4ac}}{2a} \<br>$$</p><h3 id="参考答案">参考答案</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">help</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 通过键盘输入系数a,b,c</span></span><br><span class="line">        <span class="comment">// 定义个扫描器</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 提示下用户</span></span><br><span class="line">        System.out.println(<span class="string">&quot;请您输入a,b,c:&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 接收用户输入的三个系数</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">a</span> <span class="operator">=</span> sc.nextDouble();</span><br><span class="line">        <span class="type">double</span> <span class="variable">b</span> <span class="operator">=</span> sc.nextDouble();</span><br><span class="line">        <span class="type">double</span> <span class="variable">c</span> <span class="operator">=</span> sc.nextDouble();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断用户输入的a是否等于0</span></span><br><span class="line">        <span class="keyword">if</span> (a != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// 求一元二次方程的实根</span></span><br><span class="line">            <span class="comment">// 判别式判断是两个实根，一个实根还是无实根</span></span><br><span class="line">            <span class="comment">// ((Math.pow(b, 2)) - (4 * a * c))</span></span><br><span class="line">            <span class="comment">// b * b - 4 * a * c</span></span><br><span class="line">            <span class="type">double</span> <span class="variable">temp</span> <span class="operator">=</span> ((Math.pow(b, <span class="number">2</span>)) - (<span class="number">4</span> * a * c));</span><br><span class="line">            <span class="comment">// double temp = (b * b) - (4 * a * c);</span></span><br><span class="line">            <span class="keyword">if</span> (temp &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">// 有两个实数根</span></span><br><span class="line">                <span class="type">double</span> <span class="variable">x1</span> <span class="operator">=</span> ((-b) + Math.sqrt(temp)) / (<span class="number">2</span> * a);</span><br><span class="line">                <span class="type">double</span> <span class="variable">x2</span> <span class="operator">=</span> ((-b) - Math.sqrt(temp)) / (<span class="number">2</span> * a);</span><br><span class="line">                System.out.println(x1);</span><br><span class="line">                System.out.println(x2);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (temp == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">// 有一个实数根</span></span><br><span class="line">                <span class="type">double</span> <span class="variable">x1</span> <span class="operator">=</span> ((-b) + Math.sqrt(temp)) / (<span class="number">2</span> * a);</span><br><span class="line">                System.out.println(x1);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 没有实数根</span></span><br><span class="line">                System.out.println(<span class="string">&quot;没有实数根&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;a不能等于0&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JDBC</title>
      <link href="/posts/8fe47ff4.html"/>
      <url>/posts/8fe47ff4.html</url>
      
        <content type="html"><![CDATA[<h2 id="JDBC练习">JDBC练习</h2><h3 id="1-需求">1.需求</h3><p>完成商品品牌数据的增删改查操作</p><ul><li>查询：查询所有数据</li><li>添加：添加品牌</li><li>修改：根据id修改</li><li>删除：根据id删除</li></ul><h3 id="2-案例实现">2  案例实现</h3><h4 id="2-1-环境准备">2.1  环境准备</h4><ul><li><p>数据库表 <code>tb_brand</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除tb_brand表</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> tb_brand;</span><br><span class="line"><span class="comment">-- 创建tb_brand表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tb_brand (</span><br><span class="line">    <span class="comment">-- id 主键</span></span><br><span class="line">    id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">    <span class="comment">-- 品牌名称</span></span><br><span class="line">    brand_name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    <span class="comment">-- 企业名称</span></span><br><span class="line">    company_name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    <span class="comment">-- 排序字段</span></span><br><span class="line">    ordered <span class="type">int</span>,</span><br><span class="line">    <span class="comment">-- 描述信息</span></span><br><span class="line">    description <span class="type">varchar</span>(<span class="number">100</span>),</span><br><span class="line">    <span class="comment">-- 状态：0：禁用  1：启用</span></span><br><span class="line">    status <span class="type">int</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 添加数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tb_brand (brand_name, company_name, ordered, description, status)</span><br><span class="line"><span class="keyword">values</span> (<span class="string">&#x27;三只松鼠&#x27;</span>, <span class="string">&#x27;三只松鼠股份有限公司&#x27;</span>, <span class="number">5</span>, <span class="string">&#x27;好吃不上火&#x27;</span>, <span class="number">0</span>),</span><br><span class="line">       (<span class="string">&#x27;华为&#x27;</span>, <span class="string">&#x27;华为技术有限公司&#x27;</span>, <span class="number">100</span>, <span class="string">&#x27;华为致力于把数字世界带入每个人、每个家庭、每个组织，构建万物互联的智能世界&#x27;</span>, <span class="number">1</span>),</span><br><span class="line">       (<span class="string">&#x27;小米&#x27;</span>, <span class="string">&#x27;小米科技有限公司&#x27;</span>, <span class="number">50</span>, <span class="string">&#x27;are you ok&#x27;</span>, <span class="number">1</span>);</span><br></pre></td></tr></table></figure></li><li><p>在pojo包下实体类 Brand</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 品牌</span></span><br><span class="line"><span class="comment"> * alt + 鼠标左键：整列编辑</span></span><br><span class="line"><span class="comment"> * 在实体类中，基本数据类型建议使用其对应的包装类型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Brand</span> &#123;</span><br><span class="line">    <span class="comment">// id 主键</span></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="comment">// 品牌名称</span></span><br><span class="line">    <span class="keyword">private</span> String brandName;</span><br><span class="line">    <span class="comment">// 企业名称</span></span><br><span class="line">    <span class="keyword">private</span> String companyName;</span><br><span class="line">    <span class="comment">// 排序字段</span></span><br><span class="line">    <span class="keyword">private</span> Integer ordered;</span><br><span class="line">    <span class="comment">// 描述信息</span></span><br><span class="line">    <span class="keyword">private</span> String description;</span><br><span class="line">    <span class="comment">// 状态：0：禁用  1：启用</span></span><br><span class="line">    <span class="keyword">private</span> Integer status;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getBrandName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> brandName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setBrandName</span><span class="params">(String brandName)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.brandName = brandName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCompanyName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> companyName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCompanyName</span><span class="params">(String companyName)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.companyName = companyName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getOrdered</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ordered;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setOrdered</span><span class="params">(Integer ordered)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.ordered = ordered;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getDescription</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> description;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDescription</span><span class="params">(String description)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.description = description;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getStatus</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> status;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setStatus</span><span class="params">(Integer status)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.status = status;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Brand&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, brandName=&#x27;&quot;</span> + brandName + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, companyName=&#x27;&quot;</span> + companyName + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, ordered=&quot;</span> + ordered +</span><br><span class="line">                <span class="string">&quot;, description=&#x27;&quot;</span> + description + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, status=&quot;</span> + status +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-2-查询所有">2.2  查询所有</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 查询所有</span></span><br><span class="line"><span class="comment">   * 1. SQL：select * from tb_brand;</span></span><br><span class="line"><span class="comment">   * 2. 参数：不需要</span></span><br><span class="line"><span class="comment">   * 3. 结果：List&lt;Brand&gt;</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelectAll</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="comment">//1. 获取Connection</span></span><br><span class="line">    <span class="comment">//3. 加载配置文件</span></span><br><span class="line">    <span class="type">Properties</span> <span class="variable">prop</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">    prop.load(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;jdbc-demo/src/druid.properties&quot;</span>));</span><br><span class="line">    <span class="comment">//4. 获取连接池对象</span></span><br><span class="line">    <span class="type">DataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> DruidDataSourceFactory.createDataSource(prop);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//5. 获取数据库连接 Connection</span></span><br><span class="line">    <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> dataSource.getConnection();</span><br><span class="line">    <span class="comment">//2. 定义SQL</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from tb_brand;&quot;</span>;</span><br><span class="line">    <span class="comment">//3. 获取pstmt对象</span></span><br><span class="line">    <span class="type">PreparedStatement</span> <span class="variable">pstmt</span> <span class="operator">=</span> conn.prepareStatement(sql);</span><br><span class="line">    <span class="comment">//4. 设置参数</span></span><br><span class="line">    <span class="comment">//5. 执行SQL</span></span><br><span class="line">    <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> pstmt.executeQuery();</span><br><span class="line">    <span class="comment">//6. 处理结果 List&lt;Brand&gt; 封装Brand对象，装载List集合</span></span><br><span class="line">    <span class="type">Brand</span> <span class="variable">brand</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    List&lt;Brand&gt; brands = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">while</span> (rs.next())&#123;</span><br><span class="line">        <span class="comment">//获取数据</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> rs.getInt(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">brandName</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;brand_name&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">companyName</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;company_name&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">ordered</span> <span class="operator">=</span> rs.getInt(<span class="string">&quot;ordered&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">description</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;description&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">status</span> <span class="operator">=</span> rs.getInt(<span class="string">&quot;status&quot;</span>);</span><br><span class="line">        <span class="comment">//封装Brand对象</span></span><br><span class="line">        brand = <span class="keyword">new</span> <span class="title class_">Brand</span>();</span><br><span class="line">        brand.setId(id);</span><br><span class="line">        brand.setBrandName(brandName);</span><br><span class="line">        brand.setCompanyName(companyName);</span><br><span class="line">        brand.setOrdered(ordered);</span><br><span class="line">        brand.setDescription(description);</span><br><span class="line">        brand.setStatus(status);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//装载集合</span></span><br><span class="line">        brands.add(brand);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(brands);</span><br><span class="line">    <span class="comment">//7. 释放资源</span></span><br><span class="line">    rs.close();</span><br><span class="line">    pstmt.close();</span><br><span class="line">    conn.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-3-添加数据">2.3  添加数据</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 添加</span></span><br><span class="line"><span class="comment">  * 1. SQL：insert into tb_brand(brand_name, company_name, ordered, description, status) values(?,?,?,?,?);</span></span><br><span class="line"><span class="comment">  * 2. 参数：需要，除了id之外的所有参数信息</span></span><br><span class="line"><span class="comment">  * 3. 结果：boolean</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testAdd</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="comment">// 接收页面提交的参数</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">brandName</span> <span class="operator">=</span> <span class="string">&quot;香飘飘&quot;</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">companyName</span> <span class="operator">=</span> <span class="string">&quot;香飘飘&quot;</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">ordered</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">description</span> <span class="operator">=</span> <span class="string">&quot;绕地球一圈&quot;</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">status</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//1. 获取Connection</span></span><br><span class="line">    <span class="comment">//3. 加载配置文件</span></span><br><span class="line">    <span class="type">Properties</span> <span class="variable">prop</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">    prop.load(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;jdbc-demo/src/druid.properties&quot;</span>));</span><br><span class="line">    <span class="comment">//4. 获取连接池对象</span></span><br><span class="line">    <span class="type">DataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> DruidDataSourceFactory.createDataSource(prop);</span><br><span class="line">    <span class="comment">//5. 获取数据库连接 Connection</span></span><br><span class="line">    <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> dataSource.getConnection();</span><br><span class="line">    <span class="comment">//2. 定义SQL</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;insert into tb_brand(brand_name, company_name, ordered, description, status) values(?,?,?,?,?);&quot;</span>;</span><br><span class="line">    <span class="comment">//3. 获取pstmt对象</span></span><br><span class="line">    <span class="type">PreparedStatement</span> <span class="variable">pstmt</span> <span class="operator">=</span> conn.prepareStatement(sql);</span><br><span class="line">    <span class="comment">//4. 设置参数</span></span><br><span class="line">    pstmt.setString(<span class="number">1</span>,brandName);</span><br><span class="line">    pstmt.setString(<span class="number">2</span>,companyName);</span><br><span class="line">    pstmt.setInt(<span class="number">3</span>,ordered);</span><br><span class="line">    pstmt.setString(<span class="number">4</span>,description);</span><br><span class="line">    pstmt.setInt(<span class="number">5</span>,status);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//5. 执行SQL</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> pstmt.executeUpdate(); <span class="comment">// 影响的行数</span></span><br><span class="line">    <span class="comment">//6. 处理结果</span></span><br><span class="line">    System.out.println(count &gt; <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//7. 释放资源</span></span><br><span class="line">    pstmt.close();</span><br><span class="line">    conn.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-4-修改数据">2.4  修改数据</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 修改</span></span><br><span class="line"><span class="comment">  * 1. SQL：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     update tb_brand</span></span><br><span class="line"><span class="comment">         set brand_name  = ?,</span></span><br><span class="line"><span class="comment">         company_name= ?,</span></span><br><span class="line"><span class="comment">         ordered     = ?,</span></span><br><span class="line"><span class="comment">         description = ?,</span></span><br><span class="line"><span class="comment">         status      = ?</span></span><br><span class="line"><span class="comment">     where id = ?</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">   * 2. 参数：需要，所有数据</span></span><br><span class="line"><span class="comment">   * 3. 结果：boolean</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testUpdate</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="comment">// 接收页面提交的参数</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">brandName</span> <span class="operator">=</span> <span class="string">&quot;香飘飘&quot;</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">companyName</span> <span class="operator">=</span> <span class="string">&quot;香飘飘&quot;</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">ordered</span> <span class="operator">=</span> <span class="number">1000</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">description</span> <span class="operator">=</span> <span class="string">&quot;绕地球三圈&quot;</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">status</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//1. 获取Connection</span></span><br><span class="line">    <span class="comment">//3. 加载配置文件</span></span><br><span class="line">    <span class="type">Properties</span> <span class="variable">prop</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">    prop.load(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;jdbc-demo/src/druid.properties&quot;</span>));</span><br><span class="line">    <span class="comment">//4. 获取连接池对象</span></span><br><span class="line">    <span class="type">DataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> DruidDataSourceFactory.createDataSource(prop);</span><br><span class="line">    <span class="comment">//5. 获取数据库连接 Connection</span></span><br><span class="line">    <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> dataSource.getConnection();</span><br><span class="line">    <span class="comment">//2. 定义SQL</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot; update tb_brand\n&quot;</span> +</span><br><span class="line">        <span class="string">&quot;         set brand_name  = ?,\n&quot;</span> +</span><br><span class="line">        <span class="string">&quot;         company_name= ?,\n&quot;</span> +</span><br><span class="line">        <span class="string">&quot;         ordered     = ?,\n&quot;</span> +</span><br><span class="line">        <span class="string">&quot;         description = ?,\n&quot;</span> +</span><br><span class="line">        <span class="string">&quot;         status      = ?\n&quot;</span> +</span><br><span class="line">        <span class="string">&quot;     where id = ?&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3. 获取pstmt对象</span></span><br><span class="line">    <span class="type">PreparedStatement</span> <span class="variable">pstmt</span> <span class="operator">=</span> conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//4. 设置参数</span></span><br><span class="line">    pstmt.setString(<span class="number">1</span>,brandName);</span><br><span class="line">    pstmt.setString(<span class="number">2</span>,companyName);</span><br><span class="line">    pstmt.setInt(<span class="number">3</span>,ordered);</span><br><span class="line">    pstmt.setString(<span class="number">4</span>,description);</span><br><span class="line">    pstmt.setInt(<span class="number">5</span>,status);</span><br><span class="line">    pstmt.setInt(<span class="number">6</span>,id);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//5. 执行SQL</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> pstmt.executeUpdate(); <span class="comment">// 影响的行数</span></span><br><span class="line">    <span class="comment">//6. 处理结果</span></span><br><span class="line">    System.out.println(count &gt; <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//7. 释放资源</span></span><br><span class="line">    pstmt.close();</span><br><span class="line">    conn.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-5-删除数据">2.5  删除数据</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 删除</span></span><br><span class="line"><span class="comment">  * 1. SQL：</span></span><br><span class="line"><span class="comment">            delete from tb_brand where id = ?</span></span><br><span class="line"><span class="comment">  * 2. 参数：需要，id</span></span><br><span class="line"><span class="comment">  * 3. 结果：boolean</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDeleteById</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="comment">// 接收页面提交的参数</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> <span class="number">4</span>;</span><br><span class="line">    <span class="comment">//1. 获取Connection</span></span><br><span class="line">    <span class="comment">//3. 加载配置文件</span></span><br><span class="line">    <span class="type">Properties</span> <span class="variable">prop</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">    prop.load(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;jdbc-demo/src/druid.properties&quot;</span>));</span><br><span class="line">    <span class="comment">//4. 获取连接池对象</span></span><br><span class="line">    <span class="type">DataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> DruidDataSourceFactory.createDataSource(prop);</span><br><span class="line">    <span class="comment">//5. 获取数据库连接 Connection</span></span><br><span class="line">    <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> dataSource.getConnection();</span><br><span class="line">    <span class="comment">//2. 定义SQL</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot; delete from tb_brand where id = ?&quot;</span>;</span><br><span class="line">    <span class="comment">//3. 获取pstmt对象</span></span><br><span class="line">    <span class="type">PreparedStatement</span> <span class="variable">pstmt</span> <span class="operator">=</span> conn.prepareStatement(sql);</span><br><span class="line">    <span class="comment">//4. 设置参数</span></span><br><span class="line">    pstmt.setInt(<span class="number">1</span>,id);</span><br><span class="line">    <span class="comment">//5. 执行SQL</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> pstmt.executeUpdate(); <span class="comment">// 影响的行数</span></span><br><span class="line">    <span class="comment">//6. 处理结果</span></span><br><span class="line">    System.out.println(count &gt; <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//7. 释放资源</span></span><br><span class="line">    pstmt.close();</span><br><span class="line">    conn.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JDBC </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
