<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Fantasy的技术小站</title>
  
  
  <link href="https://www.777nx.cn/atom.xml" rel="self"/>
  
  <link href="https://www.777nx.cn/"/>
  <updated>2023-02-22T07:10:26.701Z</updated>
  <id>https://www.777nx.cn/</id>
  
  <author>
    <name>Fantasy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vue2笔记</title>
    <link href="https://www.777nx.cn/posts/9ae38eea.html"/>
    <id>https://www.777nx.cn/posts/9ae38eea.html</id>
    <published>2023-02-18T11:43:25.000Z</published>
    <updated>2023-02-22T07:10:26.701Z</updated>
    
    <content type="html"><![CDATA[<div class="note success flat"><p>笔记来自于黑马程序员课程</p></div><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.bilibili.com/video/BV1zq4y1p7ga/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.bilibili.com/video/BV1zq4y1p7ga/.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">黑马程序员Vue全套视频教程</div>            <div class="tag-link-sitename">从vue2.0到vue3.0一套全覆盖，前端学习核心框架教程</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h2 id="推荐安装的-VScode-中的-Vue-插件"><a href="#推荐安装的-VScode-中的-Vue-插件" class="headerlink" title="推荐安装的 VScode 中的 Vue 插件"></a>推荐安装的 VScode 中的 Vue 插件</h2><ol><li>Vue 3 Snippets：<a href="https://marketplace.visualstudio.com/items?itemName=hollowtree.vue-snippets">https://marketplace.visualstudio.com/items?itemName=hollowtree.vue-snippets</a></li><li>Vetur：<a href="https://marketplace.visualstudio.com/items?itemName=octref.vetur">https://marketplace.visualstudio.com/items?itemName=octref.vetur</a></li></ol><h2 id="什么是-vue"><a href="#什么是-vue" class="headerlink" title="什么是 vue"></a>什么是 vue</h2><ol><li>构建用户界面<ul><li>用 vue 往 html 页面中填充数据，非常的方便</li></ul></li><li>框架<ul><li>框架是一套现成的解决方案，程序员只能遵守框架的规范，去编写自己的业务功能！</li><li>要学习 vue，就是在学习 vue 框架中规定的用法！</li><li>vue 的指令、组件（是对 UI 结构的复用）、路由、Vuex、vue 组件库</li><li>只有把上面老师罗列的内容掌握以后，才有开发 vue 项目的能力！</li></ul></li></ol><h2 id="vue-的两个特性"><a href="#vue-的两个特性" class="headerlink" title="vue 的两个特性"></a>vue 的两个特性</h2><ol><li><p>数据驱动视图：</p><ul><li>数据的变化<strong>会驱动视图</strong>自动更新</li><li>好处：程序员只管把数据维护好，那么页面结构会被 vue 自动渲染出来！</li></ul></li><li><p>双向数据绑定：</p><blockquote><p>在网页中，form 表单负责<strong>采集数据</strong>，Ajax 负责<strong>提交数据</strong>。</p></blockquote><ul><li>js 数据的变化，会被自动渲染到页面上</li><li>页面上表单采集的数据发生变化的时候，会被 vue 自动获取到，并更新到 js 数据中</li></ul></li></ol><blockquote><p>注意：数据驱动视图和双向数据绑定的底层原理是 MVVM（Mode 数据源、View 视图、ViewModel 就是 vue 的实例）</p></blockquote><h2 id="vue-指令"><a href="#vue-指令" class="headerlink" title="vue 指令"></a>vue 指令</h2><h3 id="1-内容渲染指令"><a href="#1-内容渲染指令" class="headerlink" title="1. 内容渲染指令"></a>1. 内容渲染指令</h3><ol><li><code>v-text</code> 指令的缺点：会覆盖元素内部原有的内容！</li><li><code>&#123;&#123; &#125;&#125;</code> 插值表达式：在实际开发中用的最多，只是内容的占位符，不会覆盖原有的内容！</li><li><code>v-html</code> 指令的作用：可以把带有标签的字符串，渲染成真正的 HTML 内容！</li></ol><h3 id="2-属性绑定指令"><a href="#2-属性绑定指令" class="headerlink" title="2. 属性绑定指令"></a>2. 属性绑定指令</h3><blockquote><p> 注意：插值表达式只能用在元素的<strong>内容节点</strong>中，不能用在元素的<strong>属性节点</strong>中！</p></blockquote><ul><li><p>在 vue 中，可以使用 <code>v-bind:</code> 指令，为元素的属性动态绑定值；</p></li><li><p>简写是英文的 <code>:</code></p></li><li><p>在使用 v-bind 属性绑定期间，如果绑定内容需要进行动态拼接，则字符串的外面应该包裹单引号，例如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">:title</span>=<span class="string">&quot;&#x27;box&#x27; + index&quot;</span>&gt;</span>这是一个 div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="3-事件绑定"><a href="#3-事件绑定" class="headerlink" title="3. 事件绑定"></a>3. 事件绑定</h3><ol><li><p><code>v-on:</code> 简写是 <code>@</code></p></li><li><p>语法格式为：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;add&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">methods: &#123;</span><br><span class="line">   add() &#123;</span><br><span class="line">// 如果在方法中要修改 data 中的数据，可以通过 this 访问到</span><br><span class="line">this.count += 1</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>$event</code> 的应用场景：如果默认的事件对象 e 被覆盖了，则可以手动传递一个  $event。例如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;add(3, $event)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">methods: &#123;</span><br><span class="line">   add(n, e) &#123;</span><br><span class="line">// 如果在方法中要修改 data 中的数据，可以通过 this 访问到</span><br><span class="line">this.count += 1</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>事件修饰符：</p><ul><li><p><code>.prevent</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> @<span class="attr">click.prevent</span>=<span class="string">&quot;xxx&quot;</span>&gt;</span>链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>.stop</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.stop</span>=<span class="string">&quot;xxx&quot;</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ol><h3 id="4-v-model-指令"><a href="#4-v-model-指令" class="headerlink" title="4. v-model 指令"></a>4. v-model 指令</h3><ol><li>input 输入框<ul><li>type=”radio”</li><li>type=”checkbox”</li><li>type=”xxxx”</li></ul></li><li>textarea</li><li>select</li></ol><h3 id="5-条件渲染指令"><a href="#5-条件渲染指令" class="headerlink" title="5. 条件渲染指令"></a>5. 条件渲染指令</h3><ol><li><code>v-show</code> 的原理是：动态为元素添加或移除 <code>display: none</code> 样式，来实现元素的显示和隐藏<ul><li>如果要频繁的切换元素的显示状态，用 v-show 性能会更好</li></ul></li><li><code>v-if</code> 的原理是：每次动态创建或移除元素，实现元素的显示和隐藏<ul><li>如果刚进入页面的时候，某些元素默认不需要被展示，而且后期这个元素很可能也不需要被展示出来，此时 v-if 性能更好</li></ul></li></ol><blockquote><p> 在实际开发中，绝大多数情况，不用考虑性能问题，直接使用 v-if 就好了！！！</p></blockquote><p>v-if 指令在使用的时候，有两种方式：</p><ol><li><p>直接给定一个布尔值 true 或 false</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">&quot;true&quot;</span>&gt;</span>被 v-if 控制的元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>给 v-if 提供一个判断条件，根据判断的结果是 true 或 false，来控制元素的显示和隐藏</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">&quot;type === &#x27;A&#x27;&quot;</span>&gt;</span>良好<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h2><h3 id="过滤器的注意点"><a href="#过滤器的注意点" class="headerlink" title="过滤器的注意点"></a>过滤器的注意点</h3><ol><li>要定义到 filters 节点下，<strong>本质是一个函数</strong></li><li>在过滤器函数中，<strong>一定要有 return 值</strong></li><li>在过滤器的形参中，可以获取到“管道符”前面待处理的那个值</li><li>如果全局过滤器和私有过滤器名字一致，此时按照“<strong>就近原则</strong>”，调用的是”私有过滤器“</li></ol><h2 id="watch-侦听器"><a href="#watch-侦听器" class="headerlink" title="watch 侦听器"></a>watch 侦听器</h2><h3 id="侦听器的格式"><a href="#侦听器的格式" class="headerlink" title="侦听器的格式"></a>侦听器的格式</h3><ol><li>方法格式的侦听器<ul><li>缺点1：无法在刚进入页面的时候，自动触发！！！</li><li>缺点2：如果侦听的是一个对象，如果对象中的属性发生了变化，不会触发侦听器！！！</li></ul></li><li>对象格式的侦听器<ul><li>好处1：可以通过 <strong>immediate</strong> 选项，让侦听器自动触发！！！</li><li>好处2：可以通过 <strong>deep</strong> 选项，让侦听器深度监听对象中每个属性的变化！！！</li></ul></li></ol><h2 id="计算属性"><a href="#计算属性" class="headerlink" title="计算属性"></a>计算属性</h2><p>特点：</p><ol><li>定义的时候，要被定义为“方法”</li><li>在使用计算属性的时候，当普通的属性使用即可</li></ol><p>好处：</p><ol><li>实现了代码的复用</li><li>只要计算属性中依赖的数据源变化了，则计算属性会自动重新求值！</li></ol><h2 id="axios"><a href="#axios" class="headerlink" title="axios"></a>axios</h2><blockquote><p>axios 是一个专注于网络请求的库！</p></blockquote><h3 id="axios-的基本使用"><a href="#axios-的基本使用" class="headerlink" title="axios 的基本使用"></a>axios 的基本使用</h3><ol><li><p>发起 GET 请求：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">axios</span>(&#123;</span><br><span class="line">  <span class="comment">// 请求方式</span></span><br><span class="line">  <span class="attr">method</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">  <span class="comment">// 请求的地址</span></span><br><span class="line">  <span class="attr">url</span>: <span class="string">&#x27;http://www.liulongbin.top:3006/api/getbooks&#x27;</span>,</span><br><span class="line">  <span class="comment">// URL 中的查询参数</span></span><br><span class="line">  <span class="attr">params</span>: &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">1</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">result</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>发起 POST 请求：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#btnPost&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">async</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 如果调用某个方法的返回值是 Promise 实例，则前面可以添加 await！</span></span><br><span class="line">  <span class="comment">// await 只能用在被 async “修饰”的方法中</span></span><br><span class="line">  <span class="keyword">const</span> &#123; <span class="attr">data</span>: res &#125; = <span class="keyword">await</span> <span class="title function_">axios</span>(&#123;</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>, </span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;http://www.liulongbin.top:3006/api/post&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;zs&#x27;</span>,</span><br><span class="line">      <span class="attr">age</span>: <span class="number">20</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ol><h2 id="vue-cli-的使用"><a href="#vue-cli-的使用" class="headerlink" title="vue-cli 的使用"></a>vue-cli 的使用</h2><ol><li><p>在终端下运行如下的命令，创建指定名称的项目：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue cerate 项目的名称</span><br></pre></td></tr></table></figure></li><li><p>vue 项目中 src 目录的构成：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">assets 文件夹：存放项目中用到的静态资源文件，例如：css 样式表、图片资源</span><br><span class="line">components 文件夹：程序员封装的、可复用的组件，都要放到 components 目录下</span><br><span class="line"><span class="selector-tag">main</span><span class="selector-class">.js</span> 是项目的入口文件。整个项目的运行，要先执行 <span class="selector-tag">main</span><span class="selector-class">.js</span></span><br><span class="line">App<span class="selector-class">.vue</span> 是项目的根组件。</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <summary type="html">Vue2笔记</summary>
    
    
    
    <category term="前端" scheme="https://www.777nx.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="Vue" scheme="https://www.777nx.cn/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Web应用软件开发环境</title>
    <link href="https://www.777nx.cn/posts/2829120c.html"/>
    <id>https://www.777nx.cn/posts/2829120c.html</id>
    <published>2023-02-17T13:55:28.000Z</published>
    <updated>2023-02-22T14:22:13.179Z</updated>
    
    <content type="html"><![CDATA[<div class="tip home"><p>大都是next下一步就装好了，有些比较麻烦的里面有教程。前端环境基本都是script标签引入</p></div><h2 id="1-IDE-开发和调试工具"><a href="#1-IDE-开发和调试工具" class="headerlink" title="1. IDE 开发和调试工具"></a>1. IDE 开发和调试工具</h2><h3 id="Hbuilder-X"><a href="#Hbuilder-X" class="headerlink" title="Hbuilder X"></a>Hbuilder X</h3><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.dcloud.io/hbuilderx.html">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.dcloud.io/hbuilderx.html.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Hbuilder X</div>            <div class="tag-link-sitename">高效极客技巧</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="Visual-Studio-Code"><a href="#Visual-Studio-Code" class="headerlink" title="Visual Studio Code"></a>Visual Studio Code</h3><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://code.visualstudio.com/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/code.visualstudio.com/.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">vscode</div>            <div class="tag-link-sitename">Visual Studio Code</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="Redis-3-0"><a href="#Redis-3-0" class="headerlink" title="Redis 3.0"></a>Redis 3.0</h3><div class="tip cogs"><p>安装 Redis 之前，请先安装 JDK8 </p></div><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://codeload.github.com/redis/redis/tar.gz/refs/tags/3.0.0">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/codeload.github.com/redis/redis/tar.gz/refs/tags/3.0.0.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Redis</div>            <div class="tag-link-sitename">一个高性能的 Key-value 数据库</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><p>参考教程：</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.runoob.com/redis/redis-install.html">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.runoob.com/redis/redis-install.html.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Redis 安装</div>            <div class="tag-link-sitename">一个高性能的 Key-value 数据库</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="IntelliJ-IDEA-2020-及以上"><a href="#IntelliJ-IDEA-2020-及以上" class="headerlink" title="IntelliJ IDEA 2020 及以上"></a>IntelliJ IDEA 2020 及以上</h3><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.jetbrains.com/idea/download/#section=windows">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.jetbrains.com/idea/download/#section=windows.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">IntelliJ IDEA</div>            <div class="tag-link-sitename">the Leading Java and Kotlin IDE</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><p>参考教程：</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.777nx.cn/posts/e7bf99e2.html">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.777nx.cn/posts/e7bf99e2.html.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">JDK、IDEA等安装详解</div>            <div class="tag-link-sitename"> JDK、IDEA等安装详解</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="PostMan"><a href="#PostMan" class="headerlink" title="PostMan"></a>PostMan</h3><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.postman.com/downloads/?utm_source=postman-home">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.postman.com/downloads/?utm_source=postman-home.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">postman</div>            <div class="tag-link-sitename">Postman API</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h2 id="2-浏览器"><a href="#2-浏览器" class="headerlink" title="2. 浏览器"></a>2. 浏览器</h2><h3 id="火狐浏览器"><a href="#火狐浏览器" class="headerlink" title="火狐浏览器"></a>火狐浏览器</h3><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="http://www.firefox.com.cn/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.firefox.com.cn/.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Firefox</div>            <div class="tag-link-sitename">火狐浏览器</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="谷歌浏览器"><a href="#谷歌浏览器" class="headerlink" title="谷歌浏览器"></a>谷歌浏览器</h3><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.google.cn/intl/zh-CN/chrome/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.google.cn/intl/zh-CN/chrome/.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Chrome</div>            <div class="tag-link-sitename">谷歌浏览器</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h2 id="3-前端环境"><a href="#3-前端环境" class="headerlink" title="3. 前端环境"></a>3. 前端环境</h2><h3 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h3><p>参考教程：</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.runoob.com/vue2/vue-install.html">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.runoob.com/vue2/vue-install.html.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Vue.js 安装</div>            <div class="tag-link-sitename">Vue.js 安装</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.runoob.com/vue3/vue3-install.html">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.runoob.com/vue3/vue3-install.html.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Vue3 安装</div>            <div class="tag-link-sitename">Vue3 安装</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="Axios"><a href="#Axios" class="headerlink" title="Axios"></a>Axios</h3><p>参考教程：</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.runoob.com/vue2/vuejs-ajax-axios.html">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.runoob.com/vue2/vuejs-ajax-axios.html.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Vue.js Ajax(axios)</div>            <div class="tag-link-sitename">Vue.js Ajax(axios)</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.runoob.com/vue2/vuejs-ajax-axios.html">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.runoob.com/vue2/vuejs-ajax-axios.html.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Vue3 Ajax(axios)</div>            <div class="tag-link-sitename">Vue3 Ajax(axios)</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="npm"><a href="#npm" class="headerlink" title="npm"></a>npm</h3><div class="tip cogs"><p>npm 是 Node.js 内置模块</p></div><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://nodejs.org/zh-cn/download/releases/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/nodejs.org/zh-cn/download/releases/.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Node.js</div>            <div class="tag-link-sitename">Node.js</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><ul><li><p>npm 切换镜像站点</p><ol><li>方法一</li></ol><p>更改npm配置文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry URL</span><br></pre></td></tr></table></figure><p>URL 即为需要设置的镜像站点地址，如淘宝镜像: <strong><a href="https://registry.npmmirror.com">https://registry.npmmirror.com</a></strong></p><ol><li>方法二</li></ol><p>安装nrm 管理，安装这个的前提是能确定链接到现在的镜像地址：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g nrm</span><br></pre></td></tr></table></figure><p>待安装完nrm 之后，通过nrm 管理镜像的地址，一条命令切换，如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nrm use taobao</span><br></pre></td></tr></table></figure><p>nrm 除了淘宝站点镜像之外还有其他的，可以使用一下命令查看：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nrm <span class="built_in">ls</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="webpack"><a href="#webpack" class="headerlink" title="webpack"></a>webpack</h3><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://github.com/webpack/webpack">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/github.com/webpack/webpack.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">webpack</div>            <div class="tag-link-sitename">webpack</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev webpack</span><br></pre></td></tr></table></figure><h2 id="4-Java环境"><a href="#4-Java环境" class="headerlink" title="4. Java环境"></a>4. Java环境</h2><h3 id="Tomcat-V8-0-及以上"><a href="#Tomcat-V8-0-及以上" class="headerlink" title="Tomcat V8.0 及以上"></a>Tomcat V8.0 及以上</h3><p>官网下载</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://tomcat.apache.org/download-80.cgi">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/tomcat.apache.org/download-80.cgi.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Apache Tomcat</div>            <div class="tag-link-sitename">Apache Tomcat</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><p>参考教程</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.777nx.cn/posts/95ecbeba.html#1-2-1-%E4%B8%8B%E8%BD%BD">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.777nx.cn/posts/95ecbeba.html#1-2-1-%E4%B8%8B%E8%BD%BD.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Tomcat</div>            <div class="tag-link-sitename">Tomcat</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="Java-V1-8-0"><a href="#Java-V1-8-0" class="headerlink" title="Java V1.8.0"></a>Java V1.8.0</h3><p>官方下载页面（需注册登陆）</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.oracle.com/cn/java/technologies/downloads/#java8-windows">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.oracle.com/cn/java/technologies/downloads/#java8-windows.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Java</div>            <div class="tag-link-sitename">Java</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><p>423down下载</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://423down.lanzouo.com/b0f2gmp3e">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/423down.lanzouo.com/b0f2gmp3e.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">JavaSE</div>            <div class="tag-link-sitename">JavaSE</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><p>参考教程：</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.777nx.cn/posts/e7bf99e2.html">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.777nx.cn/posts/e7bf99e2.html.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">JDK、IDEA等安装详解</div>            <div class="tag-link-sitename"> JDK、IDEA等安装详解</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h2 id="5-数据库环境"><a href="#5-数据库环境" class="headerlink" title="5. 数据库环境"></a>5. 数据库环境</h2><h3 id="Navicat"><a href="#Navicat" class="headerlink" title="Navicat"></a>Navicat</h3><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.navicat.com/en/download/navicat-premium">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.navicat.com/en/download/navicat-premium.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Navicat</div>            <div class="tag-link-sitename">Navicat</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="MySQL-5-7"><a href="#MySQL-5-7" class="headerlink" title="MySQL 5.7"></a>MySQL 5.7</h3><p>参考教程：</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.777nx.cn/posts/2b8bb09d.html">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.777nx.cn/posts/2b8bb09d.html.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">MySQL安装文档</div>            <div class="tag-link-sitename">MySQL安装文档</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h2 id="6-其他"><a href="#6-其他" class="headerlink" title="6. 其他"></a>6. 其他</h2><h3 id="Microsoft-Visio-2013-及以上"><a href="#Microsoft-Visio-2013-及以上" class="headerlink" title="Microsoft Visio 2013 及以上"></a>Microsoft Visio 2013 及以上</h3><div class="tip cogs"><p>Visio虽然是Microsoft Office软件的一个部分。但通常以单独形式出售，并不捆绑于Microsoft Office套装中。</p></div><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.microsoft.com/zh-cn/microsoft-365/visio/flowchart">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.microsoft.com/zh-cn/microsoft-365/visio/flowchart.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Microsoft Visio</div>            <div class="tag-link-sitename">流程图软件、流程图制作工具</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="Microsoft-Office-2010-及以上"><a href="#Microsoft-Office-2010-及以上" class="headerlink" title="Microsoft Office 2010 及以上"></a>Microsoft Office 2010 及以上</h3><p>电脑一般自带正版office，激活即可</p><h3 id="福昕-PDF-阅读器"><a href="#福昕-PDF-阅读器" class="headerlink" title="福昕 PDF 阅读器"></a>福昕 PDF 阅读器</h3><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.foxitsoftware.cn/pdf-reader/?agent=zhihuKOL&MD=saixs=2">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.foxitsoftware.cn/pdf-reader/?agent=zhihuKOL&MD=saixs=2.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">福昕PDF阅读器</div>            <div class="tag-link-sitename">5.6亿用户</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.foxitsoftware.cn/pdf-reader-plus/?agent=zhihuKOL&MD=saixs=2">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.foxitsoftware.cn/pdf-reader-plus/?agent=zhihuKOL&MD=saixs=2.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">福昕PDF阅读器专业版下载</div>            <div class="tag-link-sitename">新功能体验</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="Adobe-XD-43-0-12-SP-20210824"><a href="#Adobe-XD-43-0-12-SP-20210824" class="headerlink" title="Adobe_XD_43.0.12_SP_20210824"></a>Adobe_XD_43.0.12_SP_20210824</h3><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://pan.baidu.com/s/1Z4_iJNcq7koRt3vN7KxB3w?pwd=6g8x#list/path=%2F70%2F2021%20Win%20x64%20SP%E7%89%88">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/pan.baidu.com/s/1Z4_iJNcq7koRt3vN7KxB3w?pwd=6g8x#list/path=%2F70%2F2021%20Win%20x64%20SP%E7%89%88.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Adobe_XD</div>            <div class="tag-link-sitename">Adobe_XD</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div>]]></content>
    
    
    <summary type="html">Web应用软件开发环境</summary>
    
    
    
    <category term="前端" scheme="https://www.777nx.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="Web应用软件开发" scheme="https://www.777nx.cn/tags/Web%E5%BA%94%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/"/>
    
    <category term="软件环境" scheme="https://www.777nx.cn/tags/%E8%BD%AF%E4%BB%B6%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
  <entry>
    <title>万物互联第一步，点灯改变生活</title>
    <link href="https://www.777nx.cn/posts/1f34010f.html"/>
    <id>https://www.777nx.cn/posts/1f34010f.html</id>
    <published>2023-02-11T16:56:07.000Z</published>
    <updated>2023-02-11T17:31:48.812Z</updated>
    
    <content type="html"><![CDATA[<div class="tip "><p>本人第一次整这个玩意</p></div><h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>科技改变生活，宿舍谁去关灯是个问题</p><div align=center class="aspect-ratio">    <iframe src="////player.bilibili.com/player.html?aid=266671916&bvid=BV1MY411i7J7&cid=1003889783&page=1"     scrolling="no"     border="0"     frameborder="no"     framespacing="0"     high_quality=1    danmaku=1     allowfullscreen="true">     </iframe></div><h2 id="二、采购清单"><a href="#二、采购清单" class="headerlink" title="二、采购清单"></a>二、采购清单</h2><h3 id="1-esp8266模块"><a href="#1-esp8266模块" class="headerlink" title="1. esp8266模块"></a>1. esp8266模块</h3><p><img src="https://img.777nx.cn/test/ch340.webp" alt="img"></p><blockquote><p>如果你没有microUSB数据线最好买一根</p></blockquote><h3 id="2-sg90舵机"><a href="#2-sg90舵机" class="headerlink" title="2. sg90舵机"></a>2. sg90舵机</h3><p><img src="https://img.777nx.cn/test/sg90.webp" alt="sg90舵机"></p><h2 id="三、连接舵机和开发板"><a href="#三、连接舵机和开发板" class="headerlink" title="三、连接舵机和开发板"></a>三、连接舵机和开发板</h2><h3 id="1-找到黄线，使用小刀等工具把头上的黑片翘起来，然后拉出黄线。"><a href="#1-找到黄线，使用小刀等工具把头上的黑片翘起来，然后拉出黄线。" class="headerlink" title="1. 找到黄线，使用小刀等工具把头上的黑片翘起来，然后拉出黄线。"></a>1. 找到黄线，使用小刀等工具把头上的黑片翘起来，然后拉出黄线。</h3><p><img src="https://img.777nx.cn/test/leonus_2023-01-03_21-41-45.webp" alt="img"></p><p><img src="https://img.777nx.cn/test/leonus_2023-01-03_21-42-34.webp" alt="img"></p><h3 id="2-将棕（褐）色和红色线分别插到G和V-V上。将黄线插到D2上。"><a href="#2-将棕（褐）色和红色线分别插到G和V-V上。将黄线插到D2上。" class="headerlink" title="2. 将棕（褐）色和红色线分别插到G和V V上。将黄线插到D2上。"></a>2. 将棕（褐）色和红色线分别插到G和V V上。将黄线插到D2上。</h3><p><img src="https://img.777nx.cn/test/leonus_2023-01-03_21-48-42.webp" alt="img"></p><p><img src="https://img.777nx.cn/test/leonus_2023-01-03_21-44-50.webp" alt="img"></p><p><img src="https://img.777nx.cn/test/leonus_2023-01-03_21-45-35.webp" alt="img"></p><h2 id="四、搭建开发环境"><a href="#四、搭建开发环境" class="headerlink" title="四、搭建开发环境"></a>四、搭建开发环境</h2><h3 id="1-下载Arduino"><a href="#1-下载Arduino" class="headerlink" title="1. 下载Arduino"></a>1. 下载Arduino</h3><p>下载地址：<a href="https://www.arduino.cc/en/software">https://www.arduino.cc/en/software</a></p><p><img src="https://img.777nx.cn/test/leonus_2023-01-03_21-01-18.webp" alt="img"></p><p><img src="https://img.777nx.cn/test/leonus_2023-01-03_21-01-28.webp" alt="img"></p><p>安装很简单，只需要<code>注意安装路径</code>，没有什么其他选项，一直下一步。</p><p>打开之后会自动安装一些库和驱动，弹窗是否安装的时候<code>一律选择是</code>。</p><p>对了，刚安装应该是英文，可以使用快捷键 <code>ctrl</code> + <code>,</code> 打开首选项切换成中文。</p><h3 id="2-安装esp8266库"><a href="#2-安装esp8266库" class="headerlink" title="2. 安装esp8266库"></a>2. 安装esp8266库</h3><p>打开首选项，在其他开发板管理地址中粘贴：<code>http://arduino.esp8266.com/stable/package_esp8266com_index.json</code>并确定。</p><p><img src="https://img.777nx.cn/test/leonus_2023-01-03_22-35-24.webp" alt="粘贴"></p><p>然后点击左边第二个图标，搜索esp8266，安装。</p><p><img src="https://img.777nx.cn/test/leonus_2023-01-03_22-41-36.webp" alt="安装"></p><h3 id="3-安装电灯科技库"><a href="#3-安装电灯科技库" class="headerlink" title="3. 安装电灯科技库"></a>3. 安装电灯科技库</h3><p>打开连接：<a href="https://www.diandeng.tech/dev，并点击arduino后面的下载图标。">https://www.diandeng.tech/dev，并点击arduino后面的下载图标。</a></p><p><img src="https://img.777nx.cn/test/leonus_2023-01-03_23-11-27.webp" alt="img"></p><p>下载之后我们需要再进行一部操作。<br><strong>新建一个文件夹并命名为blinker -&gt; 将文件解压进去 -&gt; 然后再压缩文件夹。</strong><br>之所以做这一步是因为下载的压缩包里面是多个文件，而不是一个文件夹，直接安装的话会报错。</p><p><img src="https://img.777nx.cn/test/leonus_2023-01-03_23-17-23.webp" alt="img"></p><p>然后点击Arduino的<code>项目</code> -&gt; <code>包含库</code> -&gt; <code>添加.ZIP库</code>，找到blinker.zip压缩包并添加。提示安装成功即可。</p><p><img src="https://img.777nx.cn/test/Leonus_2023-01-03_231900.webp" alt="添加库"></p><h2 id="五、配置电灯科技App"><a href="#五、配置电灯科技App" class="headerlink" title="五、配置电灯科技App"></a>五、配置电灯科技App</h2><p>还是在<a href="https://www.diandeng.tech/dev这个链接里（手机打开），下载并安装APP。">https://www.diandeng.tech/dev这个链接里（手机打开），下载并安装APP。</a></p><h3 id="1-添加设备"><a href="#1-添加设备" class="headerlink" title="1. 添加设备"></a>1. 添加设备</h3><p>打开app后点击右上角加号，点击独立设备，点击网络接入，<code>复制Key</code>并返回。</p><h3 id="2-配置页面"><a href="#2-配置页面" class="headerlink" title="2. 配置页面"></a>2. 配置页面</h3><p>点击设备进入页面，点击右上角编辑，新增两个按钮和一个调试，点击按钮可以配置样式等。<br><strong>注意：记住两个按钮的键名（或者再查看也行）</strong></p><p><img src="https://img.777nx.cn/test/blinkerapp.webp" alt="img"></p><h2 id="六、编写程序并烧录"><a href="#六、编写程序并烧录" class="headerlink" title="六、编写程序并烧录"></a>六、编写程序并烧录</h2><h3 id="1-编写程序"><a href="#1-编写程序" class="headerlink" title="1. 编写程序"></a>1. 编写程序</h3><p>一切准备就绪，开始编写程序。<br>以下代码是我自己改的，没有基础只能参考别人代进行码修改。</p><p><strong>注意根据注释更改指定内容</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Servo.h&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BLINKER_WIFI</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Blinker.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> auth[] = <span class="string">&quot;xxxxxxxx&quot;</span>; <span class="comment">// 点灯Key，上面添加设备的时候复制的</span></span><br><span class="line"><span class="type">char</span> ssid[] = <span class="string">&quot;xxxxxxxx&quot;</span>; <span class="comment">// wifi名称</span></span><br><span class="line"><span class="type">char</span> pswd[] = <span class="string">&quot;xxxxxxxx&quot;</span>; <span class="comment">// wifi密码</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// 新建组件对象</span></span><br><span class="line"><span class="function">BlinkerButton <span class="title">Button1</span><span class="params">(<span class="string">&quot;btn-on&quot;</span>)</span></span>;   <span class="comment">// 开灯按钮</span></span><br><span class="line"><span class="function">BlinkerButton <span class="title">Button2</span><span class="params">(<span class="string">&quot;btn-off&quot;</span>)</span></span>;  <span class="comment">// 关灯按钮</span></span><br><span class="line">Servo myservo;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置复位角度</span></span><br><span class="line"><span class="type">int</span> zero = <span class="number">97</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 旋转角度</span></span><br><span class="line"><span class="type">int</span> deg = <span class="number">25</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">button1_callback</span><span class="params">(<span class="type">const</span> String &amp; state)</span> </span>&#123;    <span class="comment">// 开灯函数</span></span><br><span class="line">  myservo.<span class="built_in">write</span>(zero - deg);</span><br><span class="line">  <span class="comment">// digitalWrite(D3, HIGH); // 不知道这个什么作用，有和没有似乎没什么影响，不过如果有知道的大佬希望能解答一下。</span></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">  myservo.<span class="built_in">write</span>(zero);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">button2_callback</span><span class="params">(<span class="type">const</span> String &amp; state)</span> </span>&#123;    <span class="comment">// 关灯函数</span></span><br><span class="line">  myservo.<span class="built_in">write</span>(zero + deg);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">  myservo.<span class="built_in">write</span>(zero);</span><br><span class="line">  <span class="comment">// digitalWrite(D3, LOW);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Serial.<span class="built_in">begin</span>(<span class="number">115200</span>);</span><br><span class="line">    BLINKER_DEBUG.<span class="built_in">stream</span>(Serial);</span><br><span class="line">    Blinker.<span class="built_in">begin</span>(auth, ssid, pswd);</span><br><span class="line">    Button1.<span class="built_in">attach</span>(button1_callback);</span><br><span class="line">    Button2.<span class="built_in">attach</span>(button2_callback);</span><br><span class="line">    myservo.<span class="built_in">attach</span>(D2,<span class="number">500</span>,<span class="number">2500</span>);</span><br><span class="line">    myservo.<span class="built_in">write</span>(zero);</span><br><span class="line">    <span class="built_in">pinMode</span>(D3, OUTPUT); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123; Blinker.<span class="built_in">run</span>(); &#125;</span><br></pre></td></tr></table></figure><h3 id="2-烧录"><a href="#2-烧录" class="headerlink" title="2. 烧录"></a>2. 烧录</h3><p>代码写完之后就需要烧录进开发板了。<br>烧录之前我们需要配置一点东西。</p><ol><li>开发板通过数据线连接到电脑，叮咚一声代表连接成功。</li><li>工具 -&gt; 开发板 -&gt; esp8266 -&gt; 选择NodeMCU 1.0</li></ol><p><img src="https://img.777nx.cn/test/Leonus_2023-01-04_002450.webp" alt="选择开发板"></p><ol><li>工具 -&gt; 端口 -&gt; 选择COMx</li></ol><p><img src="https://img.777nx.cn/test/Leonus_2023-01-04_002527.webp" alt="选择端口"></p><p>成功之后是这样的：</p><p><img src="https://img.777nx.cn/test/leonus_2023-01-04_00-26-00.webp" alt="成功"></p><p>点击<code>向右箭头</code>图标上传程序（传到开发板），然后就会开始编译上传（时间比较久，请耐心等待）。</p><p>上传成功之后等待片刻，开发板会进行连接wifi等操作。<br>然后打开点灯app即可看到设备在线（没在线再等一会，太久的话比如超过5分钟就检查一遍代码等等）<br>点击按钮即可实现舵机旋转，只需要将舵机粘到开关旁边即可。</p><p><strong>关于舵机扇叶的问题：</strong><br>代码写入之后舵机会旋转到指定角度，这时候如果扇叶是歪的需要拔下来重新对齐。</p><h2 id="七、参考文档"><a href="#七、参考文档" class="headerlink" title="七、参考文档"></a>七、参考文档</h2><ol><li><p><a href="https://blog.csdn.net/weixin_44695217/article/details/121429305">esp8266&amp;sg90舵机&amp;点灯科技&amp;arduino</a></p></li><li><p><a href="https://blog.leonus.cn/2023/lightOff.html">关灯神器-我的单片机之路的第一步</a></p></li><li>B站的一些视频，补一些基础知识</li></ol><h2 id="八、最后"><a href="#八、最后" class="headerlink" title="八、最后"></a>八、最后</h2><p>万物互联第一步，点灯改变生活。是件很酷的事</p>]]></content>
    
    
    <summary type="html">万物互联第一步，点灯改变生活</summary>
    
    
    
    <category term="生活趣闻" scheme="https://www.777nx.cn/categories/%E7%94%9F%E6%B4%BB%E8%B6%A3%E9%97%BB/"/>
    
    
    <category term="关灯" scheme="https://www.777nx.cn/tags/%E5%85%B3%E7%81%AF/"/>
    
    <category term="单片机" scheme="https://www.777nx.cn/tags/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    <category term="物联网" scheme="https://www.777nx.cn/tags/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>Fantasy旗下站点汇总</title>
    <link href="https://www.777nx.cn/posts/d680f1ca.html"/>
    <id>https://www.777nx.cn/posts/d680f1ca.html</id>
    <published>2023-02-08T08:16:10.000Z</published>
    <updated>2023-02-15T08:53:24.490Z</updated>
    
    <content type="html"><![CDATA[<div class="tip cogs"><p>为了方便小伙伴们查找，现把Fantasy旗下所有站点汇总。本文随时更新，如有问题可在页内留言！</p></div><div class="table-container"><table><thead><tr><th style="text-align:center"><strong>编号</strong></th><th style="text-align:center"><strong>服务</strong></th><th style="text-align:center"><strong>地址</strong></th><th style="text-align:center"><strong>备注</strong></th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">Fantasy的技术小站</td><td style="text-align:center"><a href="https://www.777nx.cn">https://www.777nx.cn</a></td><td style="text-align:center">主站点</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">福苑小家</td><td style="text-align:center"><a href="https://blog.777nx.cn">https://blog.777nx.cn</a></td><td style="text-align:center">暂无</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">斯莱特林魔法学院</td><td style="text-align:center"><a href="https://vip.777nx.cn">https://vip.777nx.cn</a></td><td style="text-align:center">可注册</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">一日两人三餐四季</td><td style="text-align:center"><a href="https://blue.777nx.cn">https://blue.777nx.cn</a></td><td style="text-align:center">可祝福</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">Fantasy的储物间</td><td style="text-align:center"><a href="https://cloud.777nx.cn">https://cloud.777nx.cn</a></td><td style="text-align:center">可注册</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">Fantasy的图床</td><td style="text-align:center"><a href="https://lsky.777nx.cn">https://lsky.777nx.cn</a></td><td style="text-align:center">可注册</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">Fantasy的API</td><td style="text-align:center"><a href="https://api.777nx.cn">https://api.777nx.cn</a></td><td style="text-align:center">暂无</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center">memos</td><td style="text-align:center"><a href="https://memos.777nx.cn">https://memos.777nx.cn</a></td><td style="text-align:center">暂无</td></tr><tr><td style="text-align:center">9</td><td style="text-align:center">YesPlayMusic</td><td style="text-align:center"><a href="https://music.777nx.cn">https://music.777nx.cn</a></td><td style="text-align:center">可登录</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center">有解的羊了个羊</td><td style="text-align:center"><a href="https://game.777nx.cn">https://game.777nx.cn</a></td><td style="text-align:center">暂无</td></tr><tr><td style="text-align:center">11</td><td style="text-align:center">TDUCK填鸭表单</td><td style="text-align:center"><a href="https://form.777nx.cn">https://form.777nx.cn</a></td><td style="text-align:center">已停止服务</td></tr><tr><td style="text-align:center">12</td><td style="text-align:center">Fantasy的自动签到</td><td style="text-align:center"><a href="https://auto.777nx.cn">https://auto.777nx.cn</a></td><td style="text-align:center">已停止服务</td></tr></tbody></table></div><h2 id="博客系统"><a href="#博客系统" class="headerlink" title="博客系统"></a>博客系统</h2><h3 id="Fantasy的技术小站"><a href="#Fantasy的技术小站" class="headerlink" title="Fantasy的技术小站"></a>Fantasy的技术小站</h3><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.777nx.cn">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.777nx.cn.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Fantasy的技术小站</div>            <div class="tag-link-sitename">记录精彩的程序人生</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="福苑小家"><a href="#福苑小家" class="headerlink" title="福苑小家"></a>福苑小家</h3><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://blog.777nx.cn">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/blog.777nx.cn.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">福苑小家</div>            <div class="tag-link-sitename">用心去记录生活吧~</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="斯莱特林魔法学院"><a href="#斯莱特林魔法学院" class="headerlink" title="斯莱特林魔法学院"></a>斯莱特林魔法学院</h3><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://vip.777nx.cn">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/vip.777nx.cn.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">斯莱特林魔法学院</div>            <div class="tag-link-sitename">斯莱特林会帮助你达成巅峰</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="一日两人三餐四季"><a href="#一日两人三餐四季" class="headerlink" title="一日两人三餐四季"></a>一日两人三餐四季</h3><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://blue.777nx.cn">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/blue.777nx.cn.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">一日两人三餐四季</div>            <div class="tag-link-sitename">时间在走，年龄在涨</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h2 id="对外提供服务"><a href="#对外提供服务" class="headerlink" title="对外提供服务"></a>对外提供服务</h2><h3 id="Fantasy的储物间"><a href="#Fantasy的储物间" class="headerlink" title="Fantasy的储物间"></a>Fantasy的储物间</h3><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://cloud.777nx.cn">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/cloud.777nx.cn.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Fantasy的储物间</div>            <div class="tag-link-sitename">一个简单的网盘系统</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="Fantasy图床"><a href="#Fantasy图床" class="headerlink" title="Fantasy图床"></a>Fantasy图床</h3><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://lsky.777nx.cn">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/lsky.777nx.cn.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Fantasy图床</div>            <div class="tag-link-sitename">您的云上相册</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="Fantasy的API"><a href="#Fantasy的API" class="headerlink" title="Fantasy的API"></a>Fantasy的API</h3><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://api.777nx.cn">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/api.777nx.cn.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Fantasy的API</div>            <div class="tag-link-sitename">Fantasy的API免费提供API服务</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h2 id="休闲娱乐"><a href="#休闲娱乐" class="headerlink" title="休闲娱乐"></a>休闲娱乐</h2><h3 id="memos"><a href="#memos" class="headerlink" title="memos"></a>memos</h3><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://memos.777nx.cn">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/memos.777nx.cn.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">memos</div>            <div class="tag-link-sitename">一个开源的、自我托管的备忘录中心，具有知识管理和社交网络</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="YesPlayMusic"><a href="#YesPlayMusic" class="headerlink" title="YesPlayMusic"></a>YesPlayMusic</h3><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://music.777nx.cn">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/music.777nx.cn.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">YesPlayMusic</div>            <div class="tag-link-sitename">高颜值的第三方网易云播放器</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="有解的羊了个羊"><a href="#有解的羊了个羊" class="headerlink" title="有解的羊了个羊"></a>有解的羊了个羊</h3><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://game.777nx.cn">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/game.777nx.cn.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">羊了个羊</div>            <div class="tag-link-sitename">有解的羊了个羊</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h2 id="停止服务"><a href="#停止服务" class="headerlink" title="停止服务"></a>停止服务</h2><h3 id="TDUCK填鸭表单"><a href="#TDUCK填鸭表单" class="headerlink" title="TDUCK填鸭表单"></a>TDUCK填鸭表单</h3><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://form.777nx.cn">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/form.777nx.cn.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">TDUCK填鸭表单</div>            <div class="tag-link-sitename">一款在线数据收集/问卷调查工具</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="Fantasy的自动签到"><a href="#Fantasy的自动签到" class="headerlink" title="Fantasy的自动签到"></a>Fantasy的自动签到</h3><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://auto.777nx.cn">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/auto.777nx.cn.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Fantasy的自动签到</div>            <div class="tag-link-sitename">Fantasy签到小工具</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div>]]></content>
    
    
    <summary type="html">Fantasy旗下站点汇总</summary>
    
    
    
    <category term="计算机基础" scheme="https://www.777nx.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="Fantasy" scheme="https://www.777nx.cn/tags/Fantasy/"/>
    
    <category term="站点" scheme="https://www.777nx.cn/tags/%E7%AB%99%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客搭建基础教程(一)</title>
    <link href="https://www.777nx.cn/posts/e593433d.html"/>
    <id>https://www.777nx.cn/posts/e593433d.html</id>
    <published>2023-02-07T08:36:16.000Z</published>
    <updated>2023-02-07T09:52:46.241Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><ol><li>博客搭建过程遇到任何问题，优先在本页面搜索，检查是否已经有该配置教程。</li><li><p>遇到问题可以优先在文章评论区留言，注意留言时请填写正确的邮箱以确保能收到站长的回复。</p></li><li><p>实在解决不了的问题可添加站长的微信进行交流，备注自己的个人信息。</p></li></ol><h2 id="2-环境与工具准备"><a href="#2-环境与工具准备" class="headerlink" title="2. 环境与工具准备"></a>2. 环境与工具准备</h2><p><strong>本教程主要面对的是Windows用户</strong></p><ul><li>操作系统：Windows10</li><li>Node</li><li>Git</li><li>Hexo</li><li>文本编辑器(强烈推荐VSCODE)</li><li>GitHub账号</li><li>一个域名(强烈建议买个域名)</li><li>云服务器（可选）</li></ul><h2 id="3-Node的安装"><a href="#3-Node的安装" class="headerlink" title="3. Node的安装"></a>3. Node的安装</h2><ol><li><p>打开<code>Node</code>官网，下载和自己系统相配的<code>Node</code>的安装程序，否则会出现安装问题。<br>下载地址：<a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a></p><p><img src="https://img.777nx.cn/test/image-20230207164214874.png" alt="image-20230207164214874"></p></li><li><p>如果后面美化过程中需要拉取豆瓣信息，哔哩哔哩番剧等，建议安装较低的 Node 版本(v12.18.0)。</p><p><img src="https://img.777nx.cn/test/image-20230207164315776.png" alt="image-20230207164315776"></p><p>查看历史版本，找到 v12.18.0 进行下载。</p></li><li><p>下载后傻瓜式安装即可，安装的目录可以使用默认目录【C:/Program Files/nodejs/】，也可以自定义路径。</p></li><li><p>安装完成后，检查是否安装成功。在键盘按下<code>win</code> + <code>R</code>键，输入<code>CMD</code>，然后回车，打开CMD窗口，执行<code>node -v</code>命令，看到版本信息，则说明安装成功。</p></li></ol><p>   <img src="https://img.777nx.cn/test/image-20230207164637418.png" alt="image-20230207164637418"></p><p>   <img src="https://img.777nx.cn/test/image-20230207164709929.png" alt="image-20230207164709929"></p><ol><li><p>修改<code>npm</code>源。npm下载各种模块，默认是从国处服务器下载，速度较慢，建议配置成淘宝镜像。打开CMD窗口，运行如下命令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></li></ol><h2 id="4-安装Hexo"><a href="#4-安装Hexo" class="headerlink" title="4. 安装Hexo"></a>4. 安装Hexo</h2><ol><li><p>在目标路径打开CMD窗口，输入<code>npm install -g hexo-cli</code>安装<code>Hexo</code>环境。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></li><li><p>安装完后输入<code>hexo -v</code>验证是否安装成功。</p><p><img src="https://img.777nx.cn/test/image-20230207165223840.png" alt="image-20230207165223840"></p></li></ol><h2 id="5-GitHub注册与创建仓库"><a href="#5-GitHub注册与创建仓库" class="headerlink" title="5. GitHub注册与创建仓库"></a>5. GitHub注册与创建仓库</h2><ol><li>进入官网 <a href="https://github.com/">https://github.com/</a></li><li><p>点击右上角的 Sign up(注册)，不是Sign in（登录）。</p><p><img src="https://img.777nx.cn/test/image-20230207165353004.png" alt="image-20230207165353004"></p></li><li><p>填写自己的邮箱、密码、用户名等信息，然后用邮箱验证即可完成。</p><p><img src="https://img.777nx.cn/test/627d2c05ee628.png" alt="img"></p></li><li><p>注册完成后，点击右上角的<code>+</code>按钮，选择<code>New repository</code>，创建一个<code>&lt;用户名&gt;.github.io</code>的仓库。</p><p><img src="https://img.777nx.cn/test/image-20230207165857473.png" alt="image-20230207165857473"></p></li></ol><ul><li><p>仓库的格式必须为：<code>&lt;用户名&gt;.github.io</code> (注意：前缀必须为用户名，不要等后面404了再来为什么！！！)</p></li><li><p>Description：为描述仓库（选填）</p></li><li>勾选 Initialize this repository with a README 初始化一个 <a href="http://readme.md/">README.md</a> 文件</li><li><p>点击 Creat repository 进行创建</p><p> <img src="https://img.777nx.cn/test/image-20230207170421890.png" alt="image-20230207170421890"></p></li></ul><h2 id="6-Git安装"><a href="#6-Git安装" class="headerlink" title="6. Git安装"></a>6. Git安装</h2><ol><li><p>进入官网：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a> ，由于官网下载太慢可以通过淘宝的开源镜像下载 网址：<a href="https://registry.npmmirror.com/binary.html?path=git-for-windows/v2.36.1.windows.1/">https://registry.npmmirror.com/binary.html?path=git-for-windows/v2.36.1.windows.1/</a> ，下载版本更具自己的需求选择即可。</p><p><img src="https://img.777nx.cn/test/image-20230207170542643.png" alt="image-20230207170542643"></p></li><li><p>下载后傻瓜式安装Git即可，安装的目录可以使用默认目录【C:/Program Files/Git】，也可以自定义路径。</p></li><li><p>点击电脑左下角开始即可看见<code>Git Bash</code>。</p><p><img src="https://img.777nx.cn/test/627d410ddc940.webp" alt="img"></p></li></ol><ul><li><code>Git CMD</code> 是windows命令行的指令风格</li><li><code>Git Bash</code> 是linux系统的指令风格（建议使用）</li><li><code>Git GUI</code>是图形化界面（新手学习不建议使用）</li></ul><ol><li><p>常用命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config -l  //查看所有配置</span><br><span class="line">git config --system --list //查看系统配置</span><br><span class="line">git config --global --list //查看用户（全局）配置</span><br></pre></td></tr></table></figure></li><li><p>配置用户名和邮箱</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;你的用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;你的邮箱&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>通过<code>git config -l</code> 检查是否配置成功，至此git安装及配置全部完成。</p><p><img src="https://img.777nx.cn/test/image-20230207171254479.png" alt="image-20230207171254479"></p></li></ol><h2 id="7-连接至Github"><a href="#7-连接至Github" class="headerlink" title="7. 连接至Github"></a>7. 连接至Github</h2><ol><li><p>执行以下命令生成ssh公钥，此公钥用于你的计算机连接Github</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你的邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>之后打开C盘下用户文件夹下的.ssh的文件夹，会看到 id_rsa.pub</p><p><img src="https://img.777nx.cn/test/627e87126fc59.png" alt="img"></p><p>用记事本打开上述图片中的公钥（id_rsa.pub），复制里面的内容，然后开始在github中配置ssh密钥。</p><p><img src="https://img.777nx.cn/test/627e87156038a.png" alt="img"></p></li><li><p>将 SSH KEY 配置到 GitHub<br>进入github，点击右上角头像 选择<code>settings</code>，进入设置页后选择 <code>SSH and GPG keys</code>，名字随便起，公钥填到<code>Key</code>那一栏。</p><p><img src="https://img.777nx.cn/test/image-20230207172219006.png" alt="image-20230207172219006"></p><p><img src="https://img.777nx.cn/test/image-20230207172524478.png" alt="image-20230207172524478"></p><p><img src="https://img.777nx.cn/test/image-20230207172800764.png" alt="image-20230207172800764"></p></li><li><p>测试连接，输入以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/image-20230207173014736.png" alt="image-20230207173014736"></p><p>出现连接到账户的信息，说明已经大功告成，至此完成了环境准备工作。</p></li></ol><h2 id="8-初始化-Hexo-项目"><a href="#8-初始化-Hexo-项目" class="headerlink" title="8. 初始化 Hexo 项目"></a>8. 初始化 Hexo 项目</h2><ol><li><p>在目标路径（我这里选的路径为【C:/Hexo-Blog】）打开cmd命令窗口，执行<code>hexo init</code>初始化项目。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog-demo(项目名)</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/1fbeb52671cf4b1daeca3660d1a31a2f" alt="img"></p></li><li><p>进入<code>blog-demo</code> ，输入<code>npm i</code>安装相关依赖。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog-demo  //进入blog-demo文件夹</span><br><span class="line">npm i</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/150eeb3e61c94b89a1cad2a3079b1f94" alt="img"></p></li><li><p>初始化项目后，<code>blog-demo</code>有如下结构：</p><p><img src="https://img.777nx.cn/test/70cf503f27c54d30a31c6b13735023b7" alt="img"></p></li></ol><p>【node_modules】：依赖包<br>【scaffolds】：生成文章的一些模板<br>【source】：用来存放你的文章<br>【themes】：主题<br>【.npmignore】：发布时忽略的文件（可忽略）<br>【_config.landscape.yml】：主题的配置文件<br>【_config.yml】：博客的配置文件<br>【package.json】：项目名称、描述、版本、运行和开发等信息</p><ol><li><p>输入<code>hexo server</code>或者<code>hexo s</code>启动项目</p><p><img src="https://img.777nx.cn/test/688592f6db1448d29a2f722fc7a0bb0a" alt="img"></p></li><li><p>打开浏览器，输入地址：<a href="http://localhost:4000/">http://localhost:4000/</a> ，看到下面的效果，说明你的博客已经构建成功了。</p><p><img src="https://img.777nx.cn/test/628e5423df640.webp" alt="img"></p></li></ol><h2 id="9-将静态博客挂载到GitHub-Pages"><a href="#9-将静态博客挂载到GitHub-Pages" class="headerlink" title="9. 将静态博客挂载到GitHub Pages"></a>9. 将静态博客挂载到GitHub Pages</h2><ol><li><p>安装 hexo-deployer-git</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li><p>修改 _config.yml 文件</p><p>修改 在blog-demo目录下的_config.yml，就是整个Hexo框架的配置文件了。可以在里面修改大部分的配置。详细可参考官方的配置描述。</p><p>修改最后一行的配置，将repository修改为你自己的github项目地址即可，还有分支要改为<code>main</code>代表主分支（注意缩进）。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:777nx-Blog/777nx.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure></li><li><p>修改好配置后，运行如下命令，将代码部署到 GitHub（Hexo三连）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure></li></ol><ul><li>hexo clean：删除之前生成的文件，若未生成过静态文件，可忽略此命令。</li><li>hexo generate：生成静态文章，可以用<code>hexo g</code>缩写</li><li><p>hexo deploy：部署文章，可以用<code>hexo d</code>缩写</p><p> <img src="https://img.777nx.cn/test/7ed7b8256d75408aa86e90cd37d0ea53" alt="img"></p></li></ul><blockquote><p>注意：deploy时可能要你输入 username 和 password。</p></blockquote><p>如果出现<code>Deploy done</code>，则说明部署成功了。</p><p><img src="https://img.777nx.cn/test/85b61e7242214d368539d744b4778a5d" alt="img"></p><p>打开浏览器访问：<a href="https://777nx.github.io">https://777nx.github.io</a> ，这时候我们就可以看到博客内容了。</p><p><img src="https://img.777nx.cn/test/628e5f7360e9c.webp" alt="img"></p><h2 id="10-参考文档"><a href="#10-参考文档" class="headerlink" title="10. 参考文档"></a>10. 参考文档</h2><ol><li><p><a href="https://tzy1997.com/articles/hexo1601/">基于 Hexo 从零开始搭建个人博客（一）</a></p></li><li><p><a href="https://tzy1997.com/articles/hexo1602/">基于 Hexo 从零开始搭建个人博客（二）</a></p></li></ol>]]></content>
    
    
    <summary type="html">Hexo博客搭建基础教程(一)</summary>
    
    
    
    <category term="博客" scheme="https://www.777nx.cn/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="butterfly" scheme="https://www.777nx.cn/tags/butterfly/"/>
    
    <category term="Hexo" scheme="https://www.777nx.cn/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>FastGithub下载及使用</title>
    <link href="https://www.777nx.cn/posts/4e86faf1.html"/>
    <id>https://www.777nx.cn/posts/4e86faf1.html</id>
    <published>2023-02-06T15:10:51.000Z</published>
    <updated>2023-02-06T16:34:18.359Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、-前言"><a href="#一、-前言" class="headerlink" title="一、 前言"></a>一、 前言</h2><p>很多需要用到的脚本及软件会先发布在GitHub上，所以经常需要访问GitHub，但是每次都会卡在跳转到GitHub的步骤，就是还没开始就可以结束了。</p><p><img src="https://img.777nx.cn/test/image-20230206231529708.png" alt="image-20230206231529708"></p><h2 id="二、-教程"><a href="#二、-教程" class="headerlink" title="二、 教程"></a>二、 教程</h2><h3 id="2-1-FastGithub介绍"><a href="#2-1-FastGithub介绍" class="headerlink" title="2.1 FastGithub介绍"></a>2.1 FastGithub介绍</h3><p>FastGithub 是 GitHub 加速神器，解决 GitHub 打不开、用户头像无法加载、releases 无法上传下载、git-clone、git-pull、git-push 失败等问题。</p><h3 id="2-2-下载"><a href="#2-2-下载" class="headerlink" title="2.2 下载"></a>2.2 下载</h3><ol><li>项目下载地址</li></ol><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://github.com/dotnetcore/fastgithub/releases">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/github.com/dotnetcore/fastgithub/releases.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">FastGithub</div>            <div class="tag-link-sitename">GitHub下载</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><ol><li>提供蓝奏云网盘下载地址</li></ol><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://777nx.lanzoue.com/if0Vz0msm2ni">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/777nx.lanzoue.com/if0Vz0msm2ni.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">FastGithub</div>            <div class="tag-link-sitename">蓝奏云下载</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="2-3-安装及使用"><a href="#2-3-安装及使用" class="headerlink" title="2.3 安装及使用"></a>2.3 安装及使用</h3><p>解压下载的zip包, 将文件夹放到合适位置</p><p>找到FastGithub.UI.exe, 双击执行即可</p><p><img src="https://img.777nx.cn/test/image-20230207000735209.png" alt="image-20230207000735209.png"></p><h3 id="2-4-注意"><a href="#2-4-注意" class="headerlink" title="2.4 注意"></a>2.4 注意</h3><ol><li>在使用GitHub前需要打开并保证Fast GitHub在运行状态</li><li>在安装完成之后可以直接点开FastGithub的执行文件就可以运行程序，顺利连接到Github</li><li>如果不能正常打开.exe的执行文件的话还是使用命令去启动</li></ol><ul><li>进入fastgithub_win-x64文件夹, 使用管理员权限在此处打开cmd命令框, 输入</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastgithub.exe start</span><br></pre></td></tr></table></figure><ul><li>进入fastgithub_win-x64文件夹, 使用管理员权限在此处打开cmd命令框, 输入</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastgithub.exe stop</span><br></pre></td></tr></table></figure><h2 id="三、-加速原理"><a href="#三、-加速原理" class="headerlink" title="三、 加速原理"></a>三、 加速原理</h2><ul><li><p>修改本机的 dns 服务指向 FastGithub 自身</p></li><li><p>解析匹配的域名为 FastGithub 自身的 ip</p></li><li>请求安全 dns 服务 (dnscrypt-proxy) 获取域名的 ip</li><li>选择最优的 ip 进行 ssh 代理或 https 反向代理</li></ul><h2 id="四、-参考文档"><a href="#四、-参考文档" class="headerlink" title="四、 参考文档"></a>四、 参考文档</h2><ol><li><a href="https://www.cnblogs.com/iminifly/p/16040826.html">GitHub加速访问插件-FastGithub推荐</a></li><li><a href="https://zhuanlan.zhihu.com/p/364453651#:~:text=%E2%80%9D,FastGithub%E6%9C%AC%E5%9C%B0%E4%BB%A3%E7%90%86%E4%BD%BF%E7%94%A8%E7%9A%84%E9%83%BD%E6%98%AF%E2%80%9C%E5%85%AC%E7%94%A8%E7%94%B5%E4%BF%A1%E7%BD%91%E6%8F%90%E4%BE%9B%E7%9A%84%E5%9B%BD%E9%99%85%E5%87%BA%E5%85%A5%E5%8F%A3%E4%BF%A1%E9%81%93%E2%80%9D%EF%BC%8C%E4%BB%8E%E5%9B%BD%E5%A4%96Github%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%88%B0%E5%9B%BD%E5%86%85%E7%94%A8%E6%88%B7%E7%94%B5%E8%84%91%E4%B8%8AFastGithub%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%B5%81%E9%87%8F%EF%BC%8C%E4%BD%BF%E7%94%A8%E7%9A%84%E6%98%AF%E6%AD%A3%E5%B8%B8%E6%B5%81%E9%87%8F%E9%80%9A%E9%81%93%EF%BC%8C%E5%85%B6%E9%97%B4%E6%9C%AA%E5%AF%B9%E6%B5%81%E9%87%8F%E8%BF%9B%E8%A1%8C%E4%BB%BB%E4%BD%95%E9%A2%9D%E5%A4%96%E5%8A%A0%E5%AF%86%EF%BC%88%E4%BB%85%E6%9C%89%E7%BD%91%E9%A1%B5%E5%8E%9F%E6%9C%89%E7%9A%84TLS%E5%8A%A0%E5%AF%86%EF%BC%8C%E5%8C%BA%E5%88%AB%E4%BA%8EV%CF%81%D0%BF%E7%9A%84%E6%B5%81%E9%87%8F%E5%8A%A0%E5%AF%86%EF%BC%89%EF%BC%8C%E8%80%8CFastGithub%E8%8E%B7%E5%8F%96%E5%88%B0%E7%BD%91%E9%A1%B5%E6%95%B0%E6%8D%AE%E4%B9%8B%E5%90%8E%E5%8F%91%E7%94%9F%E7%9A%84%E6%95%B4%E4%B8%AA%E4%BB%A3%E7%90%86%E8%BF%87%E7%A8%8B%E5%AE%8C%E5%85%A8%E5%9C%A8%E5%9B%BD%E5%86%85%EF%BC%8C%E4%B8%8D%E5%86%8D%E9%80%82%E7%94%A8%E5%9B%BD%E9%99%85%E4%BA%92%E8%81%94%E7%BD%91%E7%9B%B8%E5%85%B3%E4%B9%8B%E8%A7%84%E5%AE%9A%E3%80%82">上万良心软件都在GitHub，你却还卡在无法访问？(Github加速访问教程）</a></li></ol><h2 id="五、-最后"><a href="#五、-最后" class="headerlink" title="五、 最后"></a>五、 最后</h2><div class="tip cogs"><p>《国际联网暂行规定》第六条规定：“计算机信息网络直接进行国际联网，必须使用邮电部国家公用电信网提供的国际出入口信道。任何单位和个人不得自行建立或者使用其他信道进行国际联网。”</p></div><p>Fast Github本地代理使用的都是“公用电信网提供的国际出入口信道”，从国外Github服务器到国内用户电脑上Fast Github程序的流量，使用的是正常流量通道，其间未对流量进行任何额外加密（仅有网页原有的TLS加密，区别于Vρп的流量加密），而Fast Github获取到网页数据之后发生的整个代理过程完全在国内，不再适用国际互联网相关之规定。</p>]]></content>
    
    
    <summary type="html">FastGithub-GitHub加速器</summary>
    
    
    
    <category term="计算机基础" scheme="https://www.777nx.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="GitHub" scheme="https://www.777nx.cn/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>如何使用手机电脑在博客上快捷发朋友圈</title>
    <link href="https://www.777nx.cn/posts/5e985e10.html"/>
    <id>https://www.777nx.cn/posts/5e985e10.html</id>
    <published>2023-02-01T13:17:27.000Z</published>
    <updated>2023-02-01T14:47:25.887Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>本项目来自<a href="https://immmmm.com/">林木木</a>发的<a href="https://immmmm.com/bb-by-wechat-pro/">「哔哔点啥」微信公众号 2.0</a>做的Butterfly适配。可以通过动态发一些一句话几句话的动态而不是写一篇博客，减少水文，提升整站文章质量。类似朋友圈。</p><h2 id="二、教程"><a href="#二、教程" class="headerlink" title="二、教程"></a>二、教程</h2><h3 id="2-1-电脑"><a href="#2-1-电脑" class="headerlink" title="2.1 电脑"></a>2.1 电脑</h3><h4 id="2-1-1-使用dent配合uTools发送哔哔（新）"><a href="#2-1-1-使用dent配合uTools发送哔哔（新）" class="headerlink" title="2.1.1 使用dent配合uTools发送哔哔（新）"></a>2.1.1 使用dent配合uTools发送哔哔（新）</h4><p>如果电脑没有安装<code>nodejs</code>的<code>dent</code>模块的话需要装一下（全局安装）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i dent</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/image-20230201212428705.png" alt="image-20230201212428705"></p><p>打开<code>uTools</code>，安装<code>快捷命令</code>插件，将下面的代码复制后粘贴点击<code>新建快捷命令</code>，更改url变量的内容即可。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;features&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;key_15gw45g5gf6&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;explain&quot;</span><span class="punctuation">:</span> <span class="string">&quot;哔哔发射台&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;cmds&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="string">&quot;发送哔哔&quot;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;icon&quot;</span><span class="punctuation">:</span> <span class="string">&quot;logo/quickcommand.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;platform&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="string">&quot;win32&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;darwin&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;linux&quot;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;program&quot;</span><span class="punctuation">:</span> <span class="string">&quot;quickcommand&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;cmd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;const bent = require(&#x27;bent&#x27;);\nconst getJSON = bent(&#x27;GET&#x27;, &#x27;json&#x27;);\nvar input = encodeURIComponent(`&#123;&#123;subinput&#125;&#125;`);\n\nvar url = `https://zhheo-0g8unj30bfbeb210-1302424805.ap-shanghai.app.tcloudbase.com/bber?key=zhheobbtime&amp;from=iPhone&amp;text=`+input\n\nconst obj = getJSON(url).then(json =&gt; &#123;\n  console.log(json.content)\n&#125;);&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;output&quot;</span><span class="punctuation">:</span> <span class="string">&quot;notice&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hasSubInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;scptarg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;charset&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;scriptCode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;outputCode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;tags&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="2-1-2-使用request配合uTools发送哔哔"><a href="#2-1-2-使用request配合uTools发送哔哔" class="headerlink" title="2.1.2 使用request配合uTools发送哔哔"></a>2.1.2 使用request配合uTools发送哔哔</h4><blockquote><p>与dent版二选一即可</p></blockquote><p>如果电脑没有安装<code>nodejs</code>的<code>request</code>模块的话需要装一下（全局安装）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i request</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/test/image-20230201212428705.png" alt="image-20230201212428705"></p><p>打开<code>uTools</code>，安装<code>快捷命令</code>插件，将下面的代码复制后粘贴点击<code>新建快捷命令</code>，更改url变量的内容即可。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;features&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;key_15gw45g5gf6&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;explain&quot;</span><span class="punctuation">:</span> <span class="string">&quot;哔哔发射台&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;cmds&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="string">&quot;发送哔哔&quot;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;icon&quot;</span><span class="punctuation">:</span> <span class="string">&quot;logo/quickcommand.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;platform&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="string">&quot;win32&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;darwin&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;linux&quot;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;program&quot;</span><span class="punctuation">:</span> <span class="string">&quot;quickcommand&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;cmd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;const request = require(&#x27;request&#x27;);\nvar input = encodeURIComponent(`&#123;&#123;subinput&#125;&#125;`)\n\nvar url = `https://zhheo-0g8unj30bfbeb210-1302424805.ap-shanghai.app.tcloudbase.com/bber?key=zhheobbtime&amp;from=iPhone&amp;text=`+input\n \nrequest(url, &#123; json: true &#125;, (err, res, body) =&gt; &#123;\n  if (err) &#123; return console.log(err); &#125;\n  console.log(body.content);\n&#125;);&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;output&quot;</span><span class="punctuation">:</span> <span class="string">&quot;notice&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hasSubInput&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;scptarg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;charset&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;scriptCode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;outputCode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;tags&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="2-2-手机"><a href="#2-2-手机" class="headerlink" title="2.2 手机"></a>2.2 手机</h3><h4 id="2-2-1-下载软件"><a href="#2-2-1-下载软件" class="headerlink" title="2.2.1 下载软件"></a>2.2.1 下载软件</h4><p>下载<code>HTTP Shortcuts</code>，可以直接使用谷歌搜索下载(推荐)<br>也可以通过Github下载：<a href="https://github.com/Waboodoo/HTTP-Shortcuts/releases">https://github.com/Waboodoo/HTTP-Shortcuts/releases</a><br>不确定手机什么内核的可以下载<code>app-universal-release.apk</code></p><h4 id="2-2-2-开始配置"><a href="#2-2-2-开始配置" class="headerlink" title="2.2.2 开始配置"></a>2.2.2 开始配置</h4><h5 id="2-2-2-1-添加变量"><a href="#2-2-2-1-添加变量" class="headerlink" title="2.2.2.1 添加变量"></a>2.2.2.1 添加变量</h5><p>点击右上角三个点 &gt; 变量，点击加号，选择<code>输入文本</code>，名称填<code>content</code>，标题可以填：哔哔内容，下面的对话框可填可不填，这都不是必须的。<br>输入选项选中<code>多行</code>，点右上角对号进行保存。</p><p><img src="https://img.777nx.cn/test/image-20230201213422068.png" alt="image-20230201213422068"></p><h5 id="2-2-2-2-添加快捷方式"><a href="#2-2-2-2-添加快捷方式" class="headerlink" title="2.2.2.2 添加快捷方式"></a>2.2.2.2 添加快捷方式</h5><p>返回主页面，点击加号，选择最上面的<code>新建快捷方式</code>，名称随便，描述随便。</p><p>点击<code>基本设置</code>，方法选择<code>GET</code>，URL填写自己的<code>API的URL</code>，然后返回</p><p><img src="https://img.777nx.cn/test/image-20230201213840102.png" alt="image-20230201213840102"></p><blockquote><p>注意：上面的<code>&#123;content&#125;</code>需要先删除，然后点击旁边的<code>&#123;&#125;</code>插入变量（插入的变量颜色是蓝色）。不能直接填写！！！</p></blockquote><p>全部填写完之后保存即可，点击快捷方式就可以实现发送哔哔了。<br>长按快捷方式可以将此快捷方式添加到桌面，想发说说时直接点击即可，方便至极。</p><h2 id="三、参考文档"><a href="#三、参考文档" class="headerlink" title="三、参考文档"></a>三、参考文档</h2><ol><li><p><a href="https://blog.zhheo.com/p/27be0e44.html">Hexo的Butterfly适配个人动态（哔哔 for 腾讯云），在博客上发朋友圈</a></p></li><li><p><a href="https://blog.zhheo.com/p/a6947667.html">Hexo-Butterfly说说朋友圈适配（哔哔 for 腾讯云）自用</a></p></li><li><p><a href="https://blog.leonus.cn/2022/talkInAndroid.html">在安卓手机上快捷发送说说(哔哔)</a></p></li></ol><h2 id="四、最后"><a href="#四、最后" class="headerlink" title="四、最后"></a>四、最后</h2><p>有些事真的是不能急于一时，放一段时间再去接触或许会有意外收获。</p>]]></content>
    
    
    <summary type="html">如何使用手机电脑在博客上快捷发朋友圈</summary>
    
    
    
    <category term="博客" scheme="https://www.777nx.cn/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="哔哔" scheme="https://www.777nx.cn/tags/%E5%93%94%E5%93%94/"/>
    
    <category term="手机" scheme="https://www.777nx.cn/tags/%E6%89%8B%E6%9C%BA/"/>
    
    <category term="电脑" scheme="https://www.777nx.cn/tags/%E7%94%B5%E8%84%91/"/>
    
  </entry>
  
  <entry>
    <title>重学C语言环境搭建</title>
    <link href="https://www.777nx.cn/posts/6722dc87.html"/>
    <id>https://www.777nx.cn/posts/6722dc87.html</id>
    <published>2023-01-31T14:29:55.000Z</published>
    <updated>2023-01-31T14:39:36.542Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><p>参考：<a href="https://www.lovestu.com/studyc01.html">2022重学C语言笔记（一）：环境搭建</a></p></div><p>2022了，C语言也，马上C2x标准要出来了。以前很多C语言的内容都忘记了，所以记此笔记，从学C语言。</p><p>笔记使用Clion作为IDE，MinGW作为C编译器。支持window，linux，和Mac玩。</p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><h3 id="安装IDE"><a href="#安装IDE" class="headerlink" title="安装IDE"></a>安装IDE</h3><p>IDEA旗下的IDE非常牛逼，自认为比VS好用很多，用IEDA习惯了，所以写C也用他家的IDE吧。</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href=" https://www.jetbrains.com/zh-cn/clion/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/ https://www.jetbrains.com/zh-cn/clion/.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Clion</div>            <div class="tag-link-sitename"> 官方下载地址</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><p>先下载下来</p><h3 id="安装MSYS2"><a href="#安装MSYS2" class="headerlink" title="安装MSYS2"></a>安装MSYS2</h3><p>MSYS2 也是一个包管理软件，用来安装环境非常简单。推荐使用。</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href=" https://www.msys2.org/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/ https://www.msys2.org/.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">MSYS2</div>            <div class="tag-link-sitename"> 官方下载地址</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><p>进入官网，下载安装包即可。</p><p><img src="https://img.777nx.cn/test/1662985763379.webp" alt="img"></p><p>安装包一路下一步即可，我是安装在D盘的。</p><p>进入：D:\msys64，启动msys2.exe。</p><p>输入 <code>pacman -Su</code> 更新一下包，一路Y即可</p><p><img src="https://img.777nx.cn/test/1662985989564.webp" alt="img"></p><p>第二次输入Y以后，窗口会关闭。再次打开即可。</p><h3 id="安装MinGW"><a href="#安装MinGW" class="headerlink" title="安装MinGW"></a>安装MinGW</h3><p>在msys2中输入命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -Sy base-devel</span><br></pre></td></tr></table></figure><p>然后输入Y即可，稍等一会，即可安装完成。然后安装mingw环境。还是Y即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S mingw-w64-x86_64-toolchain</span><br></pre></td></tr></table></figure><p>这样，就把所有的环境给安装下来了，非常简单。</p><p>至此，需要的东西，全部都给安装下来了，可以愉快的玩耍C语言了。</p><h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h2><p>之前安装好了MinGW，一般就在msys64的目录下，我默认在C盘，我msys64安装在D盘，所以MinGW也在D盘。</p><p>有mingw64和mingw32，64位系统用mingw64就好，按照下图配置好构建工具和编译器就行。</p><p><img src="https://img.777nx.cn/test/1662986745916.webp" alt="img"></p><p>然后设置CMake，默认是Debug，如果没有，手动添加就是了。这儿是可以设置多个编译器环境的，例如使用微软的MSVC，当然了，我们只安装了MinGW，用这个就好了。</p><p><img src="https://img.777nx.cn/test/1662987078400.webp" alt="img"></p><h2 id="helloWord"><a href="#helloWord" class="headerlink" title="helloWord"></a>helloWord</h2><p>环境配置好了，当然要跑起来看看啦，创建一个C项目，默认就会有一些代码，如图。点击右边运行按钮，即可在控制台看到Hello Word，说明环境成功搭建。</p><p><img src="https://img.777nx.cn/test/1662987268220.webp" alt="img"></p>]]></content>
    
    
    <summary type="html">重学C语言环境搭建</summary>
    
    
    
    <category term="计算机基础" scheme="https://www.777nx.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="C语言" scheme="https://www.777nx.cn/tags/C%E8%AF%AD%E8%A8%80/"/>
    
    <category term="程序设计" scheme="https://www.777nx.cn/tags/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>Dev-C++安装教程</title>
    <link href="https://www.777nx.cn/posts/1244f223.html"/>
    <id>https://www.777nx.cn/posts/1244f223.html</id>
    <published>2023-01-31T10:54:51.000Z</published>
    <updated>2023-02-08T12:45:25.582Z</updated>
    
    <content type="html"><![CDATA[<div class="tip "><p>工欲善其事，必先利其器。——《论语》</p></div><h2 id="软件介绍"><a href="#软件介绍" class="headerlink" title="软件介绍"></a>软件介绍</h2><p>Dev-C++ （或者叫做 Dev-Cpp）是 Windows 环境下的一个用于 C 语言和 C++ 语言程序设计的轻量级免费<strong>集成开发环境</strong>。 它集成了 SynEdit 源码编辑器、MinGW-w64 编译器、GDB 调试器和 AStyle 格式整理器等众多自由软件，非常适合于在教学中供 C/C++语言初学者使用，也适合于非商业级普通开发者使用。</p><ul><li><p>优点是功能简洁，是学习c或者c++的首选开发工具。</p></li><li><p>缺点是它并没有完善的可视化开发功能，所以不适合用于开发图形化界面的软件。</p></li></ul><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>操作系统建议 Windows 7或10，直接搜索 Dev-C++ 下载。</p><p>或者 sourceforge 官网下载</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://sourceforge.net/projects/orwelldevcpp/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/sourceforge.net/projects/orwelldevcpp/.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Dev-C++</div>            <div class="tag-link-sitename">sourceforge官网下载链接</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><p>或者 Dev-C++ 中文版网站 下载最新版本</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://devcpp.gitee.io/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/devcpp.gitee.io/.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Dev-C++</div>            <div class="tag-link-sitename">Dev-C++中文版网站</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>下载之后开始<strong>安装</strong>。安装过程很简单，按照对话框的操作提示执行即可，在此略过不叙。</p><p>安装完毕之后，双击 Windows 桌面上的 Dev-C++ 图标，以启动Dev-C++。工作界面如下图所示。</p><p><img src="https://img.777nx.cn/test/image-20230131190923235.png" alt="image-20230131190923235"></p><p>界面上依次显示有菜单栏和两行工具栏。其中第一行工具栏是平时使用最多的，其各个按钮的功能如下图所示：</p><p><img src="https://img.777nx.cn/test/v2-c2827ff938e65dee71a08fef65fa524e_r.jpg" alt="img"></p><h2 id="简单使用"><a href="#简单使用" class="headerlink" title="简单使用"></a>简单使用</h2><h3 id="1-新建-hello-c-源代码文件"><a href="#1-新建-hello-c-源代码文件" class="headerlink" title="1. 新建 hello.c 源代码文件"></a>1. 新建 hello.c 源代码文件</h3><p>菜单中依次选择 文件-新建-另存为，输入 hello.c 文件名；</p><p>或者快捷键</p><p>Ctr+N 新建源代码文件</p><p>Ctrl+S 保存</p><h3 id="2-编写-Hello-World-示例程序"><a href="#2-编写-Hello-World-示例程序" class="headerlink" title="2. 编写 Hello World 示例程序"></a>2. 编写 Hello World 示例程序</h3><p>在编辑器窗口，输入以下C语言代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* Hello world示例程序</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Hello,world!\n&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-编译运行"><a href="#3-编译运行" class="headerlink" title="3. 编译运行"></a>3. 编译运行</h3><p>菜单中选择 运行-编译运行或者快捷键 F11，即可运行该程序，如果有错误也会提示，正常运行弹出以下窗口显示结果。</p><p><img src="https://img.777nx.cn/test/image-20230131192258771.png" alt="image-20230131192258771"></p><h3 id="4-其他常用功能"><a href="#4-其他常用功能" class="headerlink" title="4. 其他常用功能"></a>4. 其他常用功能</h3><p>调试、项目工程、多文件编译等，建议查看帮助文档学习或者网上搜索，一般简单示例学习代码无需这些功能。</p>]]></content>
    
    
    <summary type="html">Dev-C++安装教程</summary>
    
    
    
    <category term="计算机基础" scheme="https://www.777nx.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="C语言" scheme="https://www.777nx.cn/tags/C%E8%AF%AD%E8%A8%80/"/>
    
    <category term="程序设计" scheme="https://www.777nx.cn/tags/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>Git笔记</title>
    <link href="https://www.777nx.cn/posts/5bd9b965.html"/>
    <id>https://www.777nx.cn/posts/5bd9b965.html</id>
    <published>2023-01-23T07:48:21.000Z</published>
    <updated>2023-01-29T09:48:20.079Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-Git常用命令"><a href="#1-Git常用命令" class="headerlink" title="1. Git常用命令"></a>1. Git常用命令</h2><div class="table-container"><table><thead><tr><th style="text-align:center"><strong>命令</strong></th><th style="text-align:center"><strong>作用</strong></th></tr></thead><tbody><tr><td style="text-align:center">git config –global user.name 用户名</td><td style="text-align:center">设置用户签名</td></tr><tr><td style="text-align:center">git config –global user.email 邮箱</td><td style="text-align:center">设置用户签名</td></tr><tr><td style="text-align:center">git init</td><td style="text-align:center">初始化本地库</td></tr><tr><td style="text-align:center">git status</td><td style="text-align:center">查看本地库状态</td></tr><tr><td style="text-align:center">git add 文件名</td><td style="text-align:center">添加到暂存区</td></tr><tr><td style="text-align:center">git commit -m “日志信息” 文件名</td><td style="text-align:center">提交到本地库（将会记录版本）</td></tr><tr><td style="text-align:center">git reflog</td><td style="text-align:center">查看历史纪录</td></tr><tr><td style="text-align:center">git log</td><td style="text-align:center">查看详细历史记录</td></tr><tr><td style="text-align:center">git reset –hard 版本号</td><td style="text-align:center">版本穿梭</td></tr></tbody></table></div><h2 id="2-分支的操作"><a href="#2-分支的操作" class="headerlink" title="2. 分支的操作"></a>2. 分支的操作</h2><div class="table-container"><table><thead><tr><th style="text-align:center"><strong>命令</strong></th><th style="text-align:center"><strong>作用</strong></th></tr></thead><tbody><tr><td style="text-align:center">git branch 分支名</td><td style="text-align:center">创建分支</td></tr><tr><td style="text-align:center">git branch -v</td><td style="text-align:center">查看分支</td></tr><tr><td style="text-align:center">git checkout 分支名</td><td style="text-align:center">切换分支</td></tr><tr><td style="text-align:center">git merge 分支名</td><td style="text-align:center">把指定的分支合并到当前分支上</td></tr></tbody></table></div><h2 id="3-远程仓库操作"><a href="#3-远程仓库操作" class="headerlink" title="3. 远程仓库操作"></a>3. 远程仓库操作</h2><div class="table-container"><table><thead><tr><th style="text-align:center"><strong>命令</strong></th><th style="text-align:center"><strong>作用</strong></th></tr></thead><tbody><tr><td style="text-align:center">git remote -v</td><td style="text-align:center">查看当前所有远程地址</td></tr><tr><td style="text-align:center">git remote add 别名 远程地址</td><td style="text-align:center">添加远程仓库并为其起别名</td></tr><tr><td style="text-align:center">git push 别名 分支</td><td style="text-align:center">推送本地分支上的内容到远程仓库</td></tr><tr><td style="text-align:center">git clone 远程地址</td><td style="text-align:center">将远程仓库的内容克隆到本地</td></tr></tbody></table></div><h2 id="4-SSH连接远程仓库"><a href="#4-SSH连接远程仓库" class="headerlink" title="4. SSH连接远程仓库"></a>4. SSH连接远程仓库</h2><p>添加SSH</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;1362724990@qq.com&quot;</span></span><br></pre></td></tr></table></figure><p>检查SSH</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Git笔记</summary>
    
    
    
    <category term="Java" scheme="https://www.777nx.cn/categories/Java/"/>
    
    
    <category term="Git" scheme="https://www.777nx.cn/tags/Git/"/>
    
    <category term="学习笔记" scheme="https://www.777nx.cn/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>完美校园自动打卡</title>
    <link href="https://www.777nx.cn/posts/e234fb3d.html"/>
    <id>https://www.777nx.cn/posts/e234fb3d.html</id>
    <published>2023-01-23T06:54:28.000Z</published>
    <updated>2023-01-29T09:48:20.118Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><p>最近几天总是忘打卡，总被辅导员问话。然后就突然想到弄个自动化让他自动打开不就行了嘛</p><p>虽然我自己没这个技术，但是计算机领域最不缺的就是大佬</p><h2 id="2-教程"><a href="#2-教程" class="headerlink" title="2. 教程"></a>2. 教程</h2><p>因为有现成的教程，所以我就不写了，说说我弄的时候遇到的问题</p><h3 id="2-1-文件下载"><a href="#2-1-文件下载" class="headerlink" title="2.1 文件下载"></a>2.1 文件下载</h3><p>云函数版本2.3beta：<a href="https://777nx.lanzoue.com/ir4Uj0lo43ha">https://777nx.lanzoue.com/ir4Uj0lo43ha</a></p><p>注册设备ID软件：<a href="https://777nx.lanzoue.com/ipzUI0lo40gb">https://777nx.lanzoue.com/ipzUI0lo40gb</a></p><h3 id="2-2-文字教程"><a href="#2-2-文字教程" class="headerlink" title="2.2 文字教程"></a>2.2 文字教程</h3><blockquote><p>建议看下面视频教程，比较详细</p></blockquote><p>作者教程：<a href="https://reajason.top/2021/03/19/17wanxiaocheckinscf/">https://reajason.top/2021/03/19/17wanxiaocheckinscf/</a></p><p>GitHub地址：<a href="https://github.com/ReaJason/17wanxiaoCheckin">https://github.com/ReaJason/17wanxiaoCheckin</a></p><h3 id="2-3-视频教程"><a href="#2-3-视频教程" class="headerlink" title="2.3 视频教程"></a>2.3 视频教程</h3><p><a href="https://www.bilibili.com/video/BV14S4y1B7QA/?p=2">【完美校园自动打卡】保姆级教程，学生党必看！</a></p><div align=center class="aspect-ratio">    <iframe src="//player.bilibili.com/player.html?aid=727159804&bvid=BV14S4y1B7QA&cid=738581398&page=1"     scrolling="no"     border="0"     frameborder="no"     framespacing="0"     high_quality=1    danmaku=1     allowfullscreen="true">     </iframe></div><h2 id="3-注意事项"><a href="#3-注意事项" class="headerlink" title="3. 注意事项"></a>3. 注意事项</h2><p>简单的说说我遇到的一些问题以及配置等等</p><p>建议先看完视频再看我的建议</p><ul><li>虽然配置很多，但是基本不需要修改，填写账号密码和设备ID之后开启第一类和邮箱推送即可</li><li>我只开启了第一类健康打卡，校内打卡没有开启，不知道是啥来的</li><li>推送我是开启的邮箱推送，配置简单，推荐也使用此方法</li><li>一个人的话可以把第二个用户删一下，没删我也不知道会怎么样，建议还是删一下</li></ul>]]></content>
    
    
    <summary type="html">完美校园自动打卡</summary>
    
    
    
    <category term="Python" scheme="https://www.777nx.cn/categories/Python/"/>
    
    
    <category term="自动打卡" scheme="https://www.777nx.cn/tags/%E8%87%AA%E5%8A%A8%E6%89%93%E5%8D%A1/"/>
    
    <category term="云函数" scheme="https://www.777nx.cn/tags/%E4%BA%91%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>基于Memos实现哔哔和清单功能</title>
    <link href="https://www.777nx.cn/posts/30a6c6b0.html"/>
    <id>https://www.777nx.cn/posts/30a6c6b0.html</id>
    <published>2023-01-21T12:10:13.000Z</published>
    <updated>2023-01-29T09:48:20.161Z</updated>
    
    <content type="html"><![CDATA[<h2 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h2><ul><li>哔哔功能预览：<a href="https://www.777nx.cn/bb/">点我预览</a></li><li>清单功能预览：<a href="https://www.777nx.cn/list/">点我预览</a></li></ul><blockquote><p>首先说明，这一切只是我定的规则而已，且功能不多。</p></blockquote><h2 id="哔哔功能"><a href="#哔哔功能" class="headerlink" title="哔哔功能"></a>哔哔功能</h2><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><p>找个页面丢入以下 html + js + css 即可。当然，得先部署个<a href="https://immmmm.com/hi-memos/">Memos</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="comment">/* 页面初始化 */</span></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">div</span><span class="selector-id">#page</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background</span>: none;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-attr">[data-theme=dark]</span> <span class="selector-id">#twikoo</span> <span class="selector-class">.tk-content</span>,</span></span><br><span class="line"><span class="language-css"><span class="selector-id">#twikoo</span> <span class="selector-class">.tk-content</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background</span>: transparent;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.talk_item</span>,</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.tk-expand</span>,</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.tk-comments-container</span>&gt;<span class="selector-class">.tk-comment</span>,</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.tk-submit</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>)&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background</span>: <span class="built_in">var</span>(--card-bg);</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#e0e3ed</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">5px</span> <span class="number">10px</span> <span class="built_in">rgb</span>(<span class="number">189</span> <span class="number">189</span> <span class="number">189</span> / <span class="number">10%</span>);</span></span><br><span class="line"><span class="language-css">    <span class="attribute">transition</span>: all .<span class="number">3s</span> ease-in-out;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-radius</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.talk_item</span><span class="selector-pseudo">:hover</span>,</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.tk-comments-container</span>&gt;<span class="selector-class">.tk-comment</span><span class="selector-pseudo">:hover</span>,</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.tk-submit</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>)<span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-color</span>: <span class="number">#49b1f5</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.tk-submit</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">10px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.tk-comments-container</span>&gt;<span class="selector-class">.tk-comment</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="comment">/* 页面初始化结束 */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-id">#talk</span>&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin-top</span>: <span class="number">1rem</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-id">#talk</span> <span class="selector-class">.loading</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">flex-direction</span>: column;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-id">#talk</span> <span class="selector-class">.loading</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.talk_item</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">flex-direction</span>: column;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin-bottom</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.avatar</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">60px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">60px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.talk_bottom</span>,</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.talk_meta</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">line-height</span>: <span class="number">1.5</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.talk_bottom</span>&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">justify-content</span>: space-between;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.info</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">flex-direction</span>: column;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin-left</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">span</span><span class="selector-class">.talk_nick</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: <span class="number">#6dbdc3</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">font-size</span>: <span class="number">1.2rem</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css">svg<span class="selector-class">.is-badge</span><span class="selector-class">.icon</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin-left</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding-top</span>: <span class="number">3px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">span</span><span class="selector-class">.talk_date</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">opacity</span>: .<span class="number">6</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.talk_content</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">line-height</span>: <span class="number">1.5</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.zone_imgbox</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">flex-wrap</span>: wrap;</span></span><br><span class="line"><span class="language-css">    <span class="attr">--w</span>: <span class="built_in">calc</span>(<span class="number">25%</span> - <span class="number">8px</span>);</span></span><br><span class="line"><span class="language-css">    <span class="attribute">gap</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin-top</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.zone_imgbox</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-radius</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="built_in">var</span>(--w);</span></span><br><span class="line"><span class="language-css">    aspect-ratio: <span class="number">1</span>/<span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.zone_imgbox</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">object-fit</span>: cover;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="comment">/* 底部 */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.talk_bottom</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">opacity</span>: .<span class="number">9</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.talk_bottom</span> <span class="selector-class">.icon</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: <span class="built_in">var</span>(--font-color);</span></span><br><span class="line"><span class="language-css">    <span class="attribute">float</span>: right;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">transition</span>: all .<span class="number">3s</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.talk_bottom</span> <span class="selector-class">.icon</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: <span class="number">#49b1f5</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">span</span><span class="selector-class">.talk_tag</span>&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.talk_content</span>&gt;<span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">3px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: <span class="number">#ff7d73</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.talk_content</span>&gt;<span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">text-decoration</span>: none <span class="meta">!important</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: <span class="number">#ff5143</span> <span class="meta">!important</span></span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="comment">/* 提醒 */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.limit</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">transition</span>: all .<span class="number">3s</span> ease-in-out;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">76</span>, <span class="number">73</span>, <span class="number">72</span>, <span class="number">0.6</span>);</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-attr">[data-theme=dark]</span> <span class="selector-class">.limit</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.5</span>);</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.limit</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">display</span>: none;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: <span class="built_in">var</span>(--font-color);</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">900px</span>) &#123;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.zone_imgbox</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attr">--w</span>: <span class="built_in">calc</span>(<span class="number">33%</span> - <span class="number">5px</span>);</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#talk</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">3px</span> <span class="number">0</span></span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#post-comment</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">3px</span></span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">768px</span>) &#123;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.zone_imgbox</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">gap</span>: <span class="number">6px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.zone_imgbox</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attr">--w</span>: <span class="built_in">calc</span>(<span class="number">50%</span> - <span class="number">3px</span>);</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">span</span><span class="selector-class">.talk_date</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;talk&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;loading&#x27;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/img/loading.svg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;加载中...&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;limit&quot;</span>&gt;</span>- 只展示最近30条说说 -<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="title function_">pageTalk</span>();</span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 页面说说</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">pageTalk</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">fetch</span>(<span class="string">&#x27;https://你的memos地址/api/memo?creatorId=1&amp;tag=说说&amp;limit=30&#x27;</span>).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> res.<span class="title function_">json</span>()).<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> &#123; <span class="comment">// 注意修改域名</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> items = [],</span></span><br><span class="line"><span class="language-javascript">            html = <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            icon = <span class="string">&#x27;&lt;svg viewBox=&quot;0 0 512 512&quot;xmlns=&quot;http://www.w3.org/2000/svg&quot;class=&quot;is-badge icon&quot;&gt;&lt;path d=&quot;m512 268c0 17.9-4.3 34.5-12.9 49.7s-20.1 27.1-34.6 35.4c.4 2.7.6 6.9.6 12.6 0 27.1-9.1 50.1-27.1 69.1-18.1 19.1-39.9 28.6-65.4 28.6-11.4 0-22.3-2.1-32.6-6.3-8 16.4-19.5 29.6-34.6 39.7-15 10.2-31.5 15.2-49.4 15.2-18.3 0-34.9-4.9-49.7-14.9-14.9-9.9-26.3-23.2-34.3-40-10.3 4.2-21.1 6.3-32.6 6.3-25.5 0-47.4-9.5-65.7-28.6-18.3-19-27.4-42.1-27.4-69.1 0-3 .4-7.2 1.1-12.6-14.5-8.4-26-20.2-34.6-35.4-8.5-15.2-12.8-31.8-12.8-49.7 0-19 4.8-36.5 14.3-52.3s22.3-27.5 38.3-35.1c-4.2-11.4-6.3-22.9-6.3-34.3 0-27 9.1-50.1 27.4-69.1s40.2-28.6 65.7-28.6c11.4 0 22.3 2.1 32.6 6.3 8-16.4 19.5-29.6 34.6-39.7 15-10.1 31.5-15.2 49.4-15.2s34.4 5.1 49.4 15.1c15 10.1 26.6 23.3 34.6 39.7 10.3-4.2 21.1-6.3 32.6-6.3 25.5 0 47.3 9.5 65.4 28.6s27.1 42.1 27.1 69.1c0 12.6-1.9 24-5.7 34.3 16 7.6 28.8 19.3 38.3 35.1 9.5 15.9 14.3 33.4 14.3 52.4zm-266.9 77.1 105.7-158.3c2.7-4.2 3.5-8.8 2.6-13.7-1-4.9-3.5-8.8-7.7-11.4-4.2-2.7-8.8-3.6-13.7-2.9-5 .8-9 3.2-12 7.4l-93.1 140-42.9-42.8c-3.8-3.8-8.2-5.6-13.1-5.4-5 .2-9.3 2-13.1 5.4-3.4 3.4-5.1 7.7-5.1 12.9 0 5.1 1.7 9.4 5.1 12.9l58.9 58.9 2.9 2.3c3.4 2.3 6.9 3.4 10.3 3.4 6.7-.1 11.8-2.9 15.2-8.7z&quot;fill=&quot;#1da1f2&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        data.<span class="property">data</span>.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123; items.<span class="title function_">push</span>(<span class="title class_">Format</span>(item)) &#125;);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (items.<span class="property">length</span> == <span class="number">30</span>) <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.limit&#x27;</span>).<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;block&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        items.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            html += <span class="string">`&lt;div class=&quot;talk_item&quot;&gt;&lt;div class=&quot;talk_meta&quot;&gt;&lt;img class=&quot;no-lightbox avatar&quot; src=&quot;https://q1.qlogo.cn/g?b=qq&amp;nk=553344777&amp;s=5&quot;&gt;&lt;div class=&quot;info&quot;&gt;&lt;span class=&quot;talk_nick&quot;&gt;Leonus<span class="subst">$&#123;icon&#125;</span>&lt;/span&gt;&lt;span class=&quot;talk_date&quot;&gt;<span class="subst">$&#123;item.date&#125;</span>&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;talk_content&quot;&gt;<span class="subst">$&#123;item.content&#125;</span>&lt;/div&gt;&lt;div class=&quot;talk_bottom&quot;&gt;&lt;div&gt;&lt;span class=&quot;talk_tag&quot;&gt;# <span class="subst">$&#123;item.tag&#125;</span>&lt;/span&gt;&lt;/div&gt;&lt;a href=&quot;javascript:;&quot;onclick=&quot;goComment(&#x27;<span class="subst">$&#123;item.text&#125;</span>&#x27;)&quot;&gt;&lt;span class=&quot;icon&quot;&gt;&lt;i class=&quot;fa-solid fa-message fa-fw&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;`</span> <span class="comment">// 注意修改头像链接和名称</span></span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;talk&#x27;</span>).<span class="property">innerHTML</span> = html</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 页面评论</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">goComment</span>(<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> n = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.el-textarea__inner&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">    n.<span class="property">value</span> = <span class="string">`&gt; <span class="subst">$&#123;e&#125;</span>\n\n`</span>;</span></span><br><span class="line"><span class="language-javascript">    n.<span class="title function_">focus</span>();</span></span><br><span class="line"><span class="language-javascript">    btf.<span class="title function_">snackbarShow</span>(<span class="string">&quot;无需删除空行，直接输入评论即可&quot;</span>, !<span class="number">1</span>, <span class="number">2e3</span>);</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 页面内容格式化</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">Format</span>(<span class="params">item</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> date = <span class="title function_">getTime</span>(<span class="keyword">new</span> <span class="title class_">Date</span>(item.<span class="property">createdTs</span> * <span class="number">1000</span>).<span class="title function_">toString</span>()),</span></span><br><span class="line"><span class="language-javascript">        content = item.<span class="property">content</span>,</span></span><br><span class="line"><span class="language-javascript">        tag = item.<span class="property">content</span>.<span class="title function_">match</span>(<span class="regexp">/(?&lt;=\&#123;)(.*?)(?=\&#125;)/g</span>),</span></span><br><span class="line"><span class="language-javascript">        imgls = content.<span class="title function_">match</span>(<span class="regexp">/(?&lt;=!\[.*\]\()(.*?)(?=\))/g</span>), <span class="comment">// 2023-01-15更新</span></span></span><br><span class="line"><span class="language-javascript">        text = <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    text = content.<span class="title function_">replace</span>(<span class="regexp">/#(.*?)\s/g</span>, <span class="string">&#x27;&#x27;</span>).<span class="title function_">replace</span>(<span class="regexp">/\!\[(.*?)\]\((.*?)\)/g</span>, <span class="string">&#x27;&#x27;</span>).<span class="title function_">replace</span>(<span class="regexp">/\&#123;(.*?)\&#125;/g</span>, <span class="string">&#x27;&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    content = text.<span class="title function_">replace</span>(<span class="regexp">/(?&lt;!!)\[(.*?)\]\((.*?)\)/g</span>, <span class="string">`&lt;a href=&quot;$2&quot;&gt;@$1&lt;/a&gt;`</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (imgls) &#123;</span></span><br><span class="line"><span class="language-javascript">        content += <span class="string">`&lt;div class=&quot;zone_imgbox&quot;&gt;`</span></span></span><br><span class="line"><span class="language-javascript">        imgls.<span class="title function_">forEach</span>(<span class="function"><span class="params">e</span> =&gt;</span> content += <span class="string">`&lt;a href=&quot;<span class="subst">$&#123;e&#125;</span>&quot; data-fancybox=&quot;gallery&quot; class=&quot;fancybox&quot; data-thumb=&quot;<span class="subst">$&#123;e&#125;</span>&quot;&gt;&lt;img src=&quot;<span class="subst">$&#123;e&#125;</span>&quot;&gt;&lt;/a&gt;`</span></span></span><br><span class="line"><span class="language-javascript">        )</span></span><br><span class="line"><span class="language-javascript">        content += <span class="string">&#x27;&lt;/div&gt;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">content</span>: content,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">tag</span>: tag ? tag : <span class="string">&#x27;无标签&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">date</span>: date,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">text</span>: text.<span class="title function_">replace</span>(<span class="regexp">/(?&lt;!!)\[(.*?)\]\((.*?)\)/g</span>, <span class="string">&#x27;[链接]&#x27;</span> + <span class="string">`<span class="subst">$&#123;imgls?<span class="string">&#x27;[图片]&#x27;</span>:<span class="string">&#x27;&#x27;</span>&#125;</span>`</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 页面时间格式化</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">getTime</span>(<span class="params">time</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> d = <span class="keyword">new</span> <span class="title class_">Date</span>(time),</span></span><br><span class="line"><span class="language-javascript">        ls = [d.<span class="title function_">getFullYear</span>(), d.<span class="title function_">getMonth</span>() + <span class="number">1</span>, d.<span class="title function_">getDate</span>(), d.<span class="title function_">getHours</span>(), d.<span class="title function_">getMinutes</span>(), d.<span class="title function_">getSeconds</span>()];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; ls.<span class="property">length</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">        ls[i] = ls[i] &lt;= <span class="number">9</span> ? <span class="string">&#x27;0&#x27;</span> + ls[i] : ls[i] + <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (<span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getFullYear</span>() == ls[<span class="number">0</span>]) <span class="keyword">return</span> ls[<span class="number">1</span>] + <span class="string">&#x27;月&#x27;</span> + ls[<span class="number">2</span>] + <span class="string">&#x27;日 &#x27;</span> + ls[<span class="number">3</span>] +<span class="string">&#x27;:&#x27;</span>+ ls[<span class="number">4</span>]</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">else</span> <span class="keyword">return</span> ls[<span class="number">0</span>] + <span class="string">&#x27;年&#x27;</span> + ls[<span class="number">1</span>] + <span class="string">&#x27;月&#x27;</span> + ls[<span class="number">2</span>] + <span class="string">&#x27;日 &#x27;</span> + ls[<span class="number">3</span>] +<span class="string">&#x27;:&#x27;</span>+ ls[<span class="number">4</span>]</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>使用的格式如下：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#说说 &#123;说说标签&#125; 我是内容 <span class="selector-attr">[我是链接]</span>(链接地址) !<span class="selector-attr">[]</span>(图片链接)</span><br></pre></td></tr></table></figure><p>注意，前面的<code>#说说</code>是固定的。标签用大括号包起来。</p><h2 id="清单功能"><a href="#清单功能" class="headerlink" title="清单功能"></a>清单功能</h2><h3 id="实现-1"><a href="#实现-1" class="headerlink" title="实现"></a>实现</h3><p>还是找个页面丢入以下 html + js + css 即可。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="comment">/* 页面初始化 */</span></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">div</span><span class="selector-id">#page</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background</span>: none;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-attr">[data-theme=dark]</span> <span class="selector-id">#twikoo</span> <span class="selector-class">.tk-content</span>,</span></span><br><span class="line"><span class="language-css"><span class="selector-id">#twikoo</span> <span class="selector-class">.tk-content</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background</span>: transparent;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.tk-comments-container</span>&gt;<span class="selector-class">.tk-comment</span>,</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.tk-submit</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>)&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background</span>: <span class="built_in">var</span>(--card-bg);</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: <span class="number">1px</span> <span class="built_in">rgba</span>(<span class="number">188</span>, <span class="number">188</span>, <span class="number">188</span>, <span class="number">0.8</span>) solid;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">5px</span> <span class="number">10px</span> <span class="built_in">rgb</span>(<span class="number">189</span> <span class="number">189</span> <span class="number">189</span> / <span class="number">10%</span>);</span></span><br><span class="line"><span class="language-css">    <span class="attribute">transition</span>: all .<span class="number">3s</span> ease-in-out;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-radius</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.tk-comments-container</span>&gt;<span class="selector-class">.tk-comment</span><span class="selector-pseudo">:hover</span>,</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.tk-submit</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>)<span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-color</span>: <span class="number">#6dc3fd</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.tk-submit</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">10px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.tk-comments-container</span>&gt;<span class="selector-class">.tk-comment</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="comment">/* 页面初始化结束 */</span></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">div</span><span class="selector-id">#todolist</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">flex-wrap</span>: wrap;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin-top</span>: <span class="number">1rem</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.list_item</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="built_in">calc</span>(<span class="number">50%</span> - .<span class="number">4rem</span>);</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background</span>: <span class="number">#ffe3dd</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-radius</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">1rem</span> <span class="number">1.2rem</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: <span class="number">2px</span> dashed <span class="number">#f7a796</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attr">--todo-border</span>: <span class="number">1px</span> solid <span class="number">#f7a796</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin-right</span>: <span class="number">1rem</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin-bottom</span>: <span class="number">1rem</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.list_item</span> <span class="selector-tag">h3</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-bottom</span>: <span class="built_in">var</span>(--todo-border);</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.list_item</span> <span class="selector-tag">ul</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">font-size</span>: <span class="number">17px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"> <span class="selector-class">.list_item</span> <span class="selector-tag">li</span>&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-bottom</span>: <span class="built_in">var</span>(--todo-border);</span></span><br><span class="line"><span class="language-css"> &#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.list_item</span> <span class="selector-tag">li</span><span class="selector-pseudo">::marker</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">content</span>: none;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">li</span><span class="selector-class">.achieve</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">opacity</span>: .<span class="number">8</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">text-decoration</span>: line-through;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">900px</span>) &#123;</span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">div</span><span class="selector-id">#todolist</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin</span>: <span class="number">1rem</span> <span class="number">5px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">768px</span>) &#123;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.list_item</span>&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;todolist&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 瀑布流函数，不用管</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">waterfall</span>(<span class="params">t</span>)&#123;<span class="keyword">function</span> <span class="title function_">e</span>(<span class="params">t,e</span>)&#123;<span class="keyword">var</span> n=<span class="variable language_">window</span>.<span class="title function_">getComputedStyle</span>(e);<span class="keyword">return</span> <span class="built_in">parseFloat</span>(n[<span class="string">&quot;margin&quot;</span>+t])||<span class="number">0</span>&#125;<span class="keyword">function</span> <span class="title function_">n</span>(<span class="params">t</span>)&#123;<span class="keyword">return</span> t+<span class="string">&quot;px&quot;</span>&#125;<span class="keyword">function</span> <span class="title function_">r</span>(<span class="params">t</span>)&#123;<span class="keyword">return</span> <span class="built_in">parseFloat</span>(t.<span class="property">style</span>.<span class="property">left</span>)&#125;<span class="keyword">function</span> <span class="title function_">o</span>(<span class="params">t</span>)&#123;<span class="keyword">return</span> t.<span class="property">clientWidth</span>&#125;<span class="keyword">function</span> <span class="title function_">l</span>(<span class="params">t</span>)&#123;<span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">t</span>)&#123;<span class="keyword">return</span> <span class="built_in">parseFloat</span>(t.<span class="property">style</span>.<span class="property">top</span>)&#125;(t)+<span class="keyword">function</span>(<span class="params">t</span>)&#123;<span class="keyword">return</span> t.<span class="property">clientHeight</span>&#125;(t)+<span class="title function_">e</span>(<span class="string">&quot;Bottom&quot;</span>,t)&#125;<span class="keyword">function</span> <span class="title function_">i</span>(<span class="params">t</span>)&#123;<span class="keyword">return</span> <span class="title function_">r</span>(t)+<span class="title function_">o</span>(t)+<span class="title function_">e</span>(<span class="string">&quot;Right&quot;</span>,t)&#125;<span class="keyword">function</span> <span class="title function_">u</span>(<span class="params">t</span>)&#123;t=t.<span class="title function_">sort</span>((<span class="keyword">function</span>(<span class="params">t,e</span>)&#123;<span class="keyword">return</span> <span class="title function_">l</span>(t)===<span class="title function_">l</span>(e)?<span class="title function_">r</span>(e)-<span class="title function_">r</span>(t):<span class="title function_">l</span>(e)-<span class="title function_">l</span>(t)&#125;))&#125;<span class="keyword">function</span> <span class="title function_">a</span>(<span class="params">e</span>)&#123;<span class="title function_">o</span>(t)!=h&amp;&amp;(e.<span class="property">target</span>.<span class="title function_">removeEventListener</span>(e.<span class="property">type</span>,<span class="variable language_">arguments</span>.<span class="property">callee</span>),<span class="title function_">waterfall</span>(t))&#125;<span class="string">&quot;string&quot;</span>==<span class="keyword">typeof</span> t&amp;&amp;(t=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(t));<span class="keyword">var</span> s=[].<span class="property">map</span>.<span class="title function_">call</span>(t.<span class="property">children</span>,(<span class="keyword">function</span>(<span class="params">t</span>)&#123;<span class="keyword">return</span> t.<span class="property">style</span>.<span class="property">position</span>=<span class="string">&quot;absolute&quot;</span>,t&#125;));t.<span class="property">style</span>.<span class="property">position</span>=<span class="string">&quot;relative&quot;</span>;<span class="keyword">var</span> f=[];s.<span class="property">length</span>&amp;&amp;(s[<span class="number">0</span>].<span class="property">style</span>.<span class="property">top</span>=<span class="string">&quot;0px&quot;</span>,s[<span class="number">0</span>].<span class="property">style</span>.<span class="property">left</span>=<span class="title function_">n</span>(<span class="title function_">e</span>(<span class="string">&quot;Left&quot;</span>,s[<span class="number">0</span>])),f.<span class="title function_">push</span>(s[<span class="number">0</span>]));<span class="keyword">for</span>(<span class="keyword">var</span> p=<span class="number">1</span>;p&lt;s.<span class="property">length</span>;p++)&#123;<span class="keyword">var</span> c=s[p-<span class="number">1</span>],y=s[p];<span class="keyword">if</span>(!(<span class="title function_">i</span>(c)+<span class="title function_">o</span>(y)&lt;=<span class="title function_">o</span>(t)))<span class="keyword">break</span>;y.<span class="property">style</span>.<span class="property">top</span>=c.<span class="property">style</span>.<span class="property">top</span>,y.<span class="property">style</span>.<span class="property">left</span>=<span class="title function_">n</span>(<span class="title function_">i</span>(c)+<span class="title function_">e</span>(<span class="string">&quot;Left&quot;</span>,y)),f.<span class="title function_">push</span>(y)&#125;<span class="keyword">for</span>(;p&lt;s.<span class="property">length</span>;p++)&#123;<span class="title function_">u</span>(f);y=s[p];<span class="keyword">var</span> d=f.<span class="title function_">pop</span>();y.<span class="property">style</span>.<span class="property">top</span>=<span class="title function_">n</span>(<span class="title function_">l</span>(d)+<span class="title function_">e</span>(<span class="string">&quot;Top&quot;</span>,y)),y.<span class="property">style</span>.<span class="property">left</span>=<span class="title function_">n</span>(<span class="title function_">r</span>(d)),f.<span class="title function_">push</span>(y)&#125;<span class="title function_">u</span>(f);<span class="keyword">var</span> v=f[<span class="number">0</span>];t.<span class="property">style</span>.<span class="property">height</span>=<span class="title function_">n</span>(<span class="title function_">l</span>(v));<span class="keyword">var</span> h=<span class="title function_">o</span>(t);<span class="variable language_">window</span>.<span class="property">addEventListener</span>?<span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;resize&quot;</span>,a):<span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">onresize</span>=a&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 清单函数</span></span></span><br><span class="line"><span class="language-javascript"><span class="title function_">todolist</span>();</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">todolist</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">fetch</span>(<span class="string">&#x27;https://你的memos地址/api/memo?creatorId=1&amp;tag=清单&#x27;</span>).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> res.<span class="title function_">json</span>()).<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> &#123; <span class="comment">// 注意替换链接</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 获取并处理数据</span></span></span><br><span class="line"><span class="language-javascript">        data = data.<span class="property">data</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> box = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;todolist&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        data.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 处理数据</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">let</span> content = item.<span class="property">content</span>,</span></span><br><span class="line"><span class="language-javascript">                title = content.<span class="title function_">match</span>(<span class="regexp">/(?&lt;=#.*\[)(.*?)(?=\])/g</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 去掉多余内容，替换清单内容</span></span></span><br><span class="line"><span class="language-javascript">            content = content.<span class="title function_">replace</span>(<span class="regexp">/#.*\s/g</span>, <span class="string">&#x27;&#x27;</span>).<span class="title function_">replace</span>(<span class="regexp">/(-\s\[\s\]\s)(.*)(?=\s*)/g</span>, <span class="string">`&lt;li&gt;&lt;i style=&quot;margin-right: 5px;&quot; class=&quot;fa-regular fa-circle&quot;&gt;&lt;/i&gt;$2&lt;/li&gt;`</span>).<span class="title function_">replace</span>(<span class="regexp">/(-\s\[x\]\s)(.*)(?=\s*)/g</span>, <span class="string">`&lt;li class=&quot;achieve&quot;&gt;&lt;i style=&quot;margin-right: 5px;&quot; class=&quot;fa-regular fa-circle-check&quot;&gt;&lt;/i&gt;$2&lt;/li&gt;`</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 渲染数据</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">let</span> div = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            div.<span class="property">className</span> = <span class="string">&#x27;list_item&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">            div.<span class="property">innerHTML</span> = <span class="string">`&lt;h3&gt;<span class="subst">$&#123;title&#125;</span>&lt;/h3&gt;&lt;ul&gt;<span class="subst">$&#123;content&#125;</span>&lt;/ul&gt;`</span>;</span></span><br><span class="line"><span class="language-javascript">            box.<span class="title function_">appendChild</span>(div);</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">waterfall</span>(<span class="string">&#x27;#todolist&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;).<span class="title function_">catch</span>()</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h3><p>使用的格式如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#清单 <span class="selector-attr">[想买的东西]</span></span><br><span class="line">- <span class="selector-attr">[ ]</span> 机械键盘</span><br><span class="line">- <span class="selector-attr">[x]</span> 已完成的清单</span><br></pre></td></tr></table></figure><p>注意，前面的<code>#清单</code>是固定的。标题用中括号包起来。已完成的将括号内的空格改成x即可。</p>]]></content>
    
    
    <summary type="html">基于Memos实现哔哔和清单功能</summary>
    
    
    
    <category term="博客" scheme="https://www.777nx.cn/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="memos" scheme="https://www.777nx.cn/tags/memos/"/>
    
    <category term="哔哔" scheme="https://www.777nx.cn/tags/%E5%93%94%E5%93%94/"/>
    
    <category term="清单" scheme="https://www.777nx.cn/tags/%E6%B8%85%E5%8D%95/"/>
    
  </entry>
  
  <entry>
    <title>随机壁纸API汇总</title>
    <link href="https://www.777nx.cn/posts/ffde9a2a.html"/>
    <id>https://www.777nx.cn/posts/ffde9a2a.html</id>
    <published>2023-01-21T07:10:07.000Z</published>
    <updated>2023-01-29T09:48:20.137Z</updated>
    
    <content type="html"><![CDATA[<h2 id="随机壁纸API汇总"><a href="#随机壁纸API汇总" class="headerlink" title="随机壁纸API汇总"></a>随机壁纸API汇总</h2><p>网上可以查到很多随机壁纸的API，但是很多都用不了或者是图片质量比较低，于是今天汇总了一些目前可以用的随机壁纸API，其中列出来的图片质量都是比较高的，可以放心食用，本站随机壁纸API模块用的都是这部分API。</p><ul><li>必应每日壁纸</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>bing.img.run/m.php</span><br></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>bing.img.run/<span class="number">1920</span>x1080.php</span><br></pre></td></tr></table></figure><ul><li>必应历史壁纸</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>bing.img.run/rand_m.php</span><br></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>bing.img.run/rand.php</span><br></pre></td></tr></table></figure><ul><li>EEE.DOG动漫壁纸</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>api.yimian.xyz/img?type=moe&amp;size=<span class="number">1920</span>x1080</span><br></pre></td></tr></table></figure><ul><li>seovx随机美图</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>cdn.seovx.com/?mom=<span class="number">302</span></span><br></pre></td></tr></table></figure><ul><li>picsum随机壁纸</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>picsum.photos<span class="regexp">/1920/</span><span class="number">1080</span>.webp</span><br></pre></td></tr></table></figure><ul><li>小歪二次元壁纸</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>api.ixiaowai.cn<span class="regexp">/api/</span>api.php</span><br></pre></td></tr></table></figure><ul><li>小歪高清壁纸</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>api.ixiaowai.cn<span class="regexp">/gqapi/g</span>qapi.php</span><br></pre></td></tr></table></figure><ul><li>tuapi动漫壁纸</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>tuapi.eees.cc/api.php?category=dongman</span><br></pre></td></tr></table></figure><ul><li>unsplash随机壁纸</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>source.unsplash.com<span class="regexp">/random/</span><span class="number">1920</span>x1080/</span><br></pre></td></tr></table></figure><p>具体的参数可以到相应官网查看API文档，这部分已经通过测试，到目前为止都是可用的，并且壁纸质量比较高；尤其是<code>必应</code>、<code>unsplash</code>、<code>picsum</code>这几个API的图片质量十分高，赶紧给你的网站换上随机壁纸吧！</p>]]></content>
    
    
    <summary type="html">随机壁纸API汇总</summary>
    
    
    
    <category term="前端" scheme="https://www.777nx.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="随机壁纸" scheme="https://www.777nx.cn/tags/%E9%9A%8F%E6%9C%BA%E5%A3%81%E7%BA%B8/"/>
    
    <category term="API" scheme="https://www.777nx.cn/tags/API/"/>
    
  </entry>
  
  <entry>
    <title>typescipt</title>
    <link href="https://www.777nx.cn/posts/e4b8bc80.html"/>
    <id>https://www.777nx.cn/posts/e4b8bc80.html</id>
    <published>2023-01-15T09:17:05.000Z</published>
    <updated>2023-02-08T15:37:48.363Z</updated>
    
    <content type="html"><![CDATA[<div class="note success flat"><p>笔记来自于尚硅谷课程</p></div><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.bilibili.com/video/BV1Xy4y1v7S2/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.bilibili.com/video/BV1Xy4y1v7S2/.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">尚硅谷TypeScript教程</div>            <div class="tag-link-sitename">李立超老师TS新课</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h2 id="第一章-快速入门"><a href="#第一章-快速入门" class="headerlink" title="第一章 快速入门"></a>第一章 快速入门</h2><h3 id="0、TypeScript简介"><a href="#0、TypeScript简介" class="headerlink" title="0、TypeScript简介"></a>0、TypeScript简介</h3><ol><li>TypeScript是JavaScript的超集。</li><li>它对JS进行了扩展，向JS中引入了类型的概念，并添加了许多新的特性。</li><li>TS代码需要通过编译器编译为JS，然后再交由JS解析器执行。</li><li>TS完全兼容JS，换言之，任何的JS代码都可以直接当成JS使用。</li><li>相较于JS而言，TS拥有了静态类型，更加严格的语法，更强大的功能；TS可以在代码执行前就完成代码的检查，减小了运行时异常的出现的几率；TS代码可以编译为任意版本的JS代码，可有效解决不同JS运行环境的兼容问题；同样的功能，TS的代码量要大于JS，但由于TS的代码结构更加清晰，变量类型更加明确，在后期代码的维护中TS却远远胜于JS。</li></ol><h3 id="1、TypeScript-开发环境搭建"><a href="#1、TypeScript-开发环境搭建" class="headerlink" title="1、TypeScript 开发环境搭建"></a>1、TypeScript 开发环境搭建</h3><ol><li>下载Node.js<ul><li>64位：<a href="https://nodejs.org/dist/v14.15.1/node-v14.15.1-x64.msi">https://nodejs.org/dist/v14.15.1/node-v14.15.1-x64.msi</a></li><li>32位：<a href="https://nodejs.org/dist/v14.15.1/node-v14.15.1-x86.msi">https://nodejs.org/dist/v14.15.1/node-v14.15.1-x86.msi</a></li></ul></li><li>安装Node.js</li><li>使用npm全局安装typescript<ul><li>进入命令行</li><li>输入：<code>npm i -g typescript</code></li></ul></li><li>创建一个ts文件</li><li>使用tsc对ts文件进行编译<ul><li>进入命令行</li><li>进入ts文件所在目录</li><li>执行命令：<code>tsc xxx.ts</code><h3 id="2、基本类型"><a href="#2、基本类型" class="headerlink" title="2、基本类型"></a>2、基本类型</h3><h4 id="2-1、类型声明"><a href="#2-1、类型声明" class="headerlink" title="2.1、类型声明"></a>2.1、类型声明</h4></li></ul></li></ol><ul><li>类型声明是TS非常重要的一个特点，通过类型声明可以指定TS中变量（参数、形参）的类型。</li><li>指定类型后，当为变量赋值时，TS编译器会自动检查值是否符合类型声明，符合则赋值，否则报错。</li><li>简而言之，类型声明给变量设置了类型，使得变量只能存储某种类型的值</li><li>语法：  <figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> 变量: 类型;</span><br><span class="line"><span class="keyword">let</span> 变量: 类型 = 值;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params">参数: 类型, 参数: 类型</span>): 类型&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-2、自动类型判断"><a href="#2-2、自动类型判断" class="headerlink" title="2.2、自动类型判断"></a>2.2、自动类型判断</h4><ul><li>TS拥有自动的类型判断机制</li><li>当对变量的声明和赋值是同时进行的，TS编译器会自动判断变量的类型</li><li>所以如果你的变量的声明和赋值时同时进行的，可以省略掉类型声明<h4 id="2-3、类型："><a href="#2-3、类型：" class="headerlink" title="2.3、类型："></a>2.3、类型：</h4>|  类型   |       例子        |              描述              |<br>| :——-: | :———————-: | :——————————————: |<br>| number  |    1, -33, 2.5    |            任意数字            |<br>| string  | ‘hi’, “hi”, <code>hi</code>  |           任意字符串           |<br>| boolean |    true、false    |       布尔值true或false        |<br>| 字面量  |      其本身       |  限制变量的值就是该字面量的值  |<br>|   any   |         <em>         |            任意类型            |<br>| unknown |         </em>         |         类型安全的any          |<br>|  void   | 空值（undefined） |     没有值（或undefined）      |<br>|  never  |      没有值       |          不能是任何值          |<br>| object  |  {name:’孙悟空’}  |          任意的JS对象          |<br>|  array  |      [1,2,3]      |           任意JS数组           |<br>|  tuple  |       [4,5]       | 元素，TS新增类型，固定长度数组 |<br>|  enum   |    enum{A, B}     |       枚举，TS中新增类型       |</li></ul></li><li>number<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">decimal</span>: <span class="built_in">number</span> = <span class="number">6</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">hex</span>: <span class="built_in">number</span> = <span class="number">0xf00d</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">binary</span>: <span class="built_in">number</span> = <span class="number">0b1010</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">octal</span>: <span class="built_in">number</span> = <span class="number">0o744</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">big</span>: <span class="built_in">bigint</span> = <span class="number">100n</span>;</span><br></pre></td></tr></table></figure></li><li>boolean<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">isDone</span>: <span class="built_in">boolean</span> = <span class="literal">false</span>;</span><br></pre></td></tr></table></figure></li><li>string<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">color</span>: <span class="built_in">string</span> = <span class="string">&quot;blue&quot;</span>;</span><br><span class="line">color = <span class="string">&#x27;red&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">fullName</span>: <span class="built_in">string</span> = <span class="string">`Bob Bobbington`</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">age</span>: <span class="built_in">number</span> = <span class="number">37</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">sentence</span>: <span class="built_in">string</span> = <span class="string">`Hello, my name is <span class="subst">$&#123;fullName&#125;</span>.</span></span><br><span class="line"><span class="string">I&#x27;ll be <span class="subst">$&#123;age + <span class="number">1</span>&#125;</span> years old next month.`</span>;</span><br></pre></td></tr></table></figure></li><li>字面量<br>也可以使用字面量去指定变量的类型，通过字面量可以确定变量的取值范围<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">color</span>: <span class="string">&#x27;red&#x27;</span> | <span class="string">&#x27;blue&#x27;</span> | <span class="string">&#x27;black&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">num</span>: <span class="number">1</span> | <span class="number">2</span> | <span class="number">3</span> | <span class="number">4</span> | <span class="number">5</span>;</span><br></pre></td></tr></table></figure></li><li>any<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">d</span>: <span class="built_in">any</span> = <span class="number">4</span>;</span><br><span class="line">d = <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line">d = <span class="literal">true</span>;</span><br></pre></td></tr></table></figure></li><li>unknown<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">notSure</span>: <span class="built_in">unknown</span> = <span class="number">4</span>;</span><br><span class="line">notSure = <span class="string">&#x27;hello&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li>void<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">unusable</span>: <span class="built_in">void</span> = <span class="literal">undefined</span>;</span><br></pre></td></tr></table></figure></li><li>never<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">error</span>(<span class="params">message: <span class="built_in">string</span></span>): <span class="built_in">never</span> &#123;</span><br><span class="line">  <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(message);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>object（没啥用）<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">obj</span>: <span class="built_in">object</span> = &#123;&#125;;</span><br></pre></td></tr></table></figure></li><li>array<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">list</span>: <span class="built_in">number</span>[] = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="attr">list</span>: <span class="title class_">Array</span>&lt;<span class="built_in">number</span>&gt; = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br></pre></td></tr></table></figure></li><li>tuple<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">x</span>: [<span class="built_in">string</span>, <span class="built_in">number</span>];</span><br><span class="line">x = [<span class="string">&quot;hello&quot;</span>, <span class="number">10</span>]; </span><br></pre></td></tr></table></figure></li><li>enum<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> <span class="title class_">Color</span> &#123;</span><br><span class="line">  <span class="title class_">Red</span>,</span><br><span class="line">  <span class="title class_">Green</span>,</span><br><span class="line">  <span class="title class_">Blue</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">c</span>: <span class="title class_">Color</span> = <span class="title class_">Color</span>.<span class="property">Green</span>;</span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">Color</span> &#123;</span><br><span class="line">  <span class="title class_">Red</span> = <span class="number">1</span>,</span><br><span class="line">  <span class="title class_">Green</span>,</span><br><span class="line">  <span class="title class_">Blue</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">c</span>: <span class="title class_">Color</span> = <span class="title class_">Color</span>.<span class="property">Green</span>;</span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">Color</span> &#123;</span><br><span class="line">  <span class="title class_">Red</span> = <span class="number">1</span>,</span><br><span class="line">  <span class="title class_">Green</span> = <span class="number">2</span>,</span><br><span class="line">  <span class="title class_">Blue</span> = <span class="number">4</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">c</span>: <span class="title class_">Color</span> = <span class="title class_">Color</span>.<span class="property">Green</span>;</span><br></pre></td></tr></table></figure></li><li>类型断言<br>有些情况下，变量的类型对于我们来说是很明确，但是TS编译器却并不清楚，此时，可以通过类型断言来告诉编译器变量的类型，断言有两种形式：<ul><li>第一种<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">someValue</span>: <span class="built_in">unknown</span> = <span class="string">&quot;this is a string&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">strLength</span>: <span class="built_in">number</span> = (someValue <span class="keyword">as</span> <span class="built_in">string</span>).<span class="property">length</span>;</span><br></pre></td></tr></table></figure></li><li>第二种<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">someValue</span>: <span class="built_in">unknown</span> = <span class="string">&quot;this is a string&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">strLength</span>: <span class="built_in">number</span> = (&lt;<span class="built_in">string</span>&gt;someValue).<span class="property">length</span>;</span><br></pre></td></tr></table></figure><h3 id="3、编译选项"><a href="#3、编译选项" class="headerlink" title="3、编译选项"></a>3、编译选项</h3><h4 id="3-1、自动编译文件"><a href="#3-1、自动编译文件" class="headerlink" title="3.1、自动编译文件"></a>3.1、自动编译文件</h4><ul><li>编译文件时，使用 -w 指令后，TS编译器会自动监视文件的变化，并在文件发生变化时对文件进行重新编译。示例：<code>tsc xxx.ts -w</code><h4 id="3-2、自动编译整个项目"><a href="#3-2、自动编译整个项目" class="headerlink" title="3.2、自动编译整个项目"></a>3.2、自动编译整个项目</h4></li><li>如果直接使用tsc指令，则可以自动将当前项目下的所有ts文件编译为js文件。</li><li>但是能直接使用tsc命令的前提时，要先在项目根目录下创建一个ts的配置文件 tsconfig.json</li><li>tsconfig.json是一个JSON文件，添加配置文件后，只需只需 tsc 命令即可完成对整个项目的编译<h5 id="3-2-1、配置选择"><a href="#3-2-1、配置选择" class="headerlink" title="3.2.1、配置选择"></a>3.2.1、配置选择</h5></li></ul></li></ul></li><li><p><strong>include</strong><br>定义希望被编译文件所在的目录，默认值：<code>[&quot;\*\*/\*&quot;]</code><br><strong>示例：</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;include&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;src/**/*&quot;</span><span class="punctuation">,</span> <span class="string">&quot;tests/**/*&quot;</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>上述示例中，所有src目录和tests目录下的文件都会被编译</p></li><li><p><strong>exclude</strong><br>定义需要排除在外的目录，默认值：<code>[&quot;node_modules&quot;, &quot;bower_components&quot;, &quot;jspm_packages&quot;]</code><br><strong>示例：</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;exclude&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;./src/hello/**/*&quot;</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>上述示例中，src下hello目录下的文件都不会被编译</p></li><li><p><strong>extends</strong><br>定义被继承的配置文件<br><strong>示例：</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;extends&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./configs/base&quot;</span></span><br></pre></td></tr></table></figure><p>上述示例中，当前配置文件中会自动包含config目录下base.json中的所有配置信息</p></li><li><p><strong>files</strong><br>指定被编译文件的列表，只有需要编译的文件少时才会用到<br><strong>示例：</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;files&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;core.ts&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;sys.ts&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;types.ts&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;scanner.ts&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;parser.ts&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;utilities.ts&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;binder.ts&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;checker.ts&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;tsc.ts&quot;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>列表中的文件都会被TS编译器所编译</p></li><li><p><strong>compilerOptions</strong><br>编译选项是配置文件中非常重要也比较复杂的配置选项，在compilerOptions中包含多个子选项，用来完成对编译的配置。<br><strong>项目选项：</strong></p><ul><li>target<br>设置ts代码编译的目标版本可选值：<code>ES3（默认）、ES5、ES6/ES2015、ES7/ES2016、ES2017、ES2018、ES2019、ES2020、ESNext</code><br>示例：<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;compilerOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;target&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ES6&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>如上设置，我们所编写的ts代码将会被编译为ES6版本的js代码</li><li>lib<br>指定代码运行时所包含的库（宿主环境），可选值：<code>ES5、ES6/ES2015、ES7/ES2016、ES2017、ES2018、ES2019、ES2020、ESNext、DOM、WebWorker、ScriptHost ...</code><br>示例：<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;compilerOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;target&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ES6&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;lib&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;ES6&quot;</span><span class="punctuation">,</span> <span class="string">&quot;DOM&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;outDir&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dist&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;outFile&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dist/aa.js&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li>module<br>设置编译后代码使用的模块化系统，可选值：<code>CommonJS、UMD、AMD、System、ES2020、ESNext、None</code><br>示例：<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;compilerOptions&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;module&quot;</span>: <span class="string">&quot;CommonJS&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>outDir<br>编译后文件的所在目录。默认情况下，编译后的js文件会和ts文件位于相同的目录，设置outDir后可以改变编译后文件的位置<br>示例：<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;compilerOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;outDir&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dist&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>设置后编译后的js文件将会生成到dist目录</li><li>outFile<br>将所有的文件编译为一个js文件，默认会将所有的编写在全局作用域中的代码合并为一个js文件，如果module制定了None、System或AMD则会将模块一起合并到文件之中。<br>示例：<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;compilerOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;outFile&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dist/app.js&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li>rootDir<br>指定代码的根目录，默认情况下编译后文件的目录结构会以最长的公共目录为根目录，通过rootDir可以手动指定根目录<br>示例：<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;compilerOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;rootDir&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./src&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li>allowJs<br>是否对js文件编译</li><li>checkJs<br>是否对js文件进行检查<br>示例：<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;compilerOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;allowJs&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;checkJs&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li>removeComments<br>是否删除注释，默认值：false</li><li>noEmit<br>不对代码进行编译，默认值：false</li><li>sourceMap<br>是否生成sourceMap，默认值：false</li></ul></li><li><p><strong>严格检查</strong></p><ul><li>strict<br>启用所有的严格检查，默认值为true，设置后相当于开启了所有的严格检查</li><li>alwaysStrict<br>总是以严格模式对代码进行编译</li><li>noImplicitAny<br>禁止隐式的any类型</li><li>noImplicitThis<br>禁止类型不明确的this</li><li>strictBindCallApply<br>严格检查bind、call和apply的参数列表</li><li>strictFunctionTypes<br>严格检查函数的类型</li><li>strictNullChecks<br>严格的空值检查</li><li>strictPropertyInitialization<br>严格检查属性是否初始化</li></ul></li><li><p><strong>额外检查</strong></p><ul><li>noFallthroughCasesInSwitch<br>检查switch语句包含正确的break</li><li>noImplicitReturns<br>检查函数没有隐式的返回值</li><li>noUnusedLocals<br>检查未使用的局部变量</li><li>noUnusedParameters<br>检查未使用的参数</li></ul></li><li><p><strong>高级</strong></p><ul><li>allowUnreachableCode<br>检查不可达代码<br>可选值：<ul><li>true，忽略不可达代码</li><li>false，不可达代码将引起错误</li></ul></li><li>noEmitOnError<br>有错误的情况下不进行编译，默认值：false<h3 id="4、webpack"><a href="#4、webpack" class="headerlink" title="4、webpack"></a>4、webpack</h3>通常情况下，实际开发中我们都需要使用构建工具对代码进行打包，TS同样也可以结合构建工具一起使用，下边以webpack为例介绍一下如何结合构建工具使用TS。<br>步骤：</li></ul></li></ul><ol><li>初始化项目<br> 进入项目根目录，执行命令 <code>npm init -y</code>。<br> 主要作用：创建package.json文件</li><li>下载构建工具<br> <code>npm i -D webpack webpack-cli webpack-dev-server typescript ts-loader clean-webpack-plugin</code><ul><li>共安装了7个包<ul><li>webpack<br>构建工具webpack</li><li>webpack-cli<br>webpack的命令行工具</li><li>webpack-dev-server<br>webpack的开发服务器</li><li>typescript<br>ts编译器</li><li>ts-loader<br>ts加载器，用于在webpack中编译ts文件</li><li>html-webpack-plugin<br>webpack中html插件，用来自动创建html文件</li><li>clean-webpack-plugin<br>webpack中的清除插件，每次构建都会先清除目录</li></ul></li></ul></li><li>根目录下创建webpack的配置文件webpack.config.js <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">HtmlWebpackPlugin</span> = <span class="built_in">require</span>(<span class="string">&quot;html-webpack-plugin&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; <span class="title class_">CleanWebpackPlugin</span> &#125; = <span class="built_in">require</span>(<span class="string">&quot;clean-webpack-plugin&quot;</span>);</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="attr">optimization</span>:&#123;</span><br><span class="line">        <span class="attr">minimize</span>: <span class="literal">false</span> <span class="comment">// 关闭代码压缩，可选</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">entry</span>: <span class="string">&quot;./src/index.ts&quot;</span>,</span><br><span class="line">    <span class="attr">devtool</span>: <span class="string">&quot;inline-source-map&quot;</span>,</span><br><span class="line">    <span class="attr">devServer</span>: &#123;</span><br><span class="line">        <span class="attr">contentBase</span>: <span class="string">&#x27;./dist&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">output</span>: &#123;</span><br><span class="line">        <span class="attr">path</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&quot;dist&quot;</span>),</span><br><span class="line">        <span class="attr">filename</span>: <span class="string">&quot;bundle.js&quot;</span>,</span><br><span class="line">        <span class="attr">environment</span>: &#123;</span><br><span class="line">            <span class="attr">arrowFunction</span>: <span class="literal">false</span> <span class="comment">// 关闭webpack的箭头函数，可选</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">resolve</span>: &#123;</span><br><span class="line">        <span class="attr">extensions</span>: [<span class="string">&quot;.ts&quot;</span>, <span class="string">&quot;.js&quot;</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">module</span>: &#123;</span><br><span class="line">        <span class="attr">rules</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.ts$/</span>,</span><br><span class="line">                <span class="attr">use</span>: &#123;</span><br><span class="line">                  <span class="attr">loader</span>: <span class="string">&quot;ts-loader&quot;</span>     </span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">exclude</span>: <span class="regexp">/node_modules/</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">plugins</span>: [</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">CleanWebpackPlugin</span>(),</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">HtmlWebpackPlugin</span>(&#123;</span><br><span class="line">            <span class="attr">title</span>:<span class="string">&#x27;TS测试&#x27;</span></span><br><span class="line">        &#125;),</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>根目录下创建tsconfig.json，配置可以根据自己需要 <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;compilerOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;target&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ES2015&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;module&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ES2015&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;strict&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li>修改package.json添加如下配置 <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  ...略...</span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;test&quot;</span><span class="punctuation">:</span> <span class="string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webpack&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webpack serve --open chrome.exe&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  ...略...</span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li>在src下创建ts文件，并在并命令行执行<code>npm run build</code>对代码进行编译，或者执行<code>npm start</code>来启动开发服务器<h3 id="5、Babel"><a href="#5、Babel" class="headerlink" title="5、Babel"></a>5、Babel</h3>经过一系列的配置，使得TS和webpack已经结合到了一起，除了webpack，开发中还经常需要结合babel来对代码进行转换以使其可以兼容到更多的浏览器，在上述步骤的基础上，通过以下步骤再将babel引入到项目中。<ol><li>安装依赖包：<br><code>npm i -D @babel/core @babel/preset-env babel-loader core-js</code><ul><li>共安装了4个包，分别是：<ul><li>@babel/core<br>babel的核心工具</li><li>@babel/preset-env<br>babel的预定义环境</li><li>@babel-loader<br>babel在webpack中的加载器</li><li>core-js<br>core-js用来使老版本的浏览器支持新版ES语法</li></ul></li></ul></li><li>修改webpack.config.js配置文件<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">...略...</span><br><span class="line"><span class="attr">module</span>: &#123;</span><br><span class="line">    <span class="attr">rules</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">test</span>: <span class="regexp">/\.ts$/</span>,</span><br><span class="line">            <span class="attr">use</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">loader</span>: <span class="string">&quot;babel-loader&quot;</span>,</span><br><span class="line">                    <span class="attr">options</span>:&#123;</span><br><span class="line">                        <span class="attr">presets</span>: [</span><br><span class="line">                            [</span><br><span class="line">                                <span class="string">&quot;@babel/preset-env&quot;</span>,</span><br><span class="line">                                &#123;</span><br><span class="line">                                    <span class="string">&quot;targets&quot;</span>:&#123;</span><br><span class="line">                                        <span class="string">&quot;chrome&quot;</span>: <span class="string">&quot;58&quot;</span>,</span><br><span class="line">                                        <span class="string">&quot;ie&quot;</span>: <span class="string">&quot;11&quot;</span></span><br><span class="line">                                    &#125;,</span><br><span class="line">                                    <span class="string">&quot;corejs&quot;</span>:<span class="string">&quot;3&quot;</span>,</span><br><span class="line">                                    <span class="string">&quot;useBuiltIns&quot;</span>: <span class="string">&quot;usage&quot;</span></span><br><span class="line">                                &#125;</span><br><span class="line">                            ]</span><br><span class="line">                        ]</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">loader</span>: <span class="string">&quot;ts-loader&quot;</span>,</span><br><span class="line">                &#125;</span><br><span class="line">            ],</span><br><span class="line">            <span class="attr">exclude</span>: <span class="regexp">/node_modules/</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">...略...</span><br></pre></td></tr></table></figure>如此一来，使用ts编译后的文件将会再次被babel处理，使得代码可以在大部分浏览器中直接使用，可以在配置选项的targets中指定要兼容的浏览器版本。<h2 id="第二章：面向对象"><a href="#第二章：面向对象" class="headerlink" title="第二章：面向对象"></a>第二章：面向对象</h2>面向对象是程序中一个非常重要的思想，它被很多同学理解成了一个比较难，比较深奥的问题，其实不然。面向对象很简单，简而言之就是程序之中所有的操作都需要通过对象来完成。<br>举例来说：</li></ol><ul><li>操作浏览器要使用window对象</li><li>操作网页要使用document对象</li><li>操作控制台要使用console对象<br>一切操作都要通过对象，也就是所谓的面向对象，那么对象到底是什么呢？这就要先说到程序是什么，计算机程序的本质就是对现实事物的抽象，抽象的反义词是具体，比如：照片是对一个具体的人的抽象，汽车模型是对具体汽车的抽象等等。程序也是对事物的抽象，在程序中我们可以表示一个人、一条狗、一把枪、一颗子弹等等所有的事物。一个事物到了程序中就变成了一个对象。<br>在程序中所有的对象都被分成了两个部分数据和功能，以人为例，人的姓名、性别、年龄、身高、体重等属于数据，人可以说话、走路、吃饭、睡觉这些属于人的功能。数据在对象中被成为属性，而功能就被称为方法。所以简而言之，在程序中一切皆是对象。<h3 id="1、类（class）"><a href="#1、类（class）" class="headerlink" title="1、类（class）"></a>1、类（class）</h3>要想面向对象，操作对象，首先便要拥有对象，那么下一个问题就是如何创建对象。要创建对象，必须要先定义类，所谓的类可以理解为对象的模型，程序中可以根据类创建指定类型的对象，举例来说：可以通过Person类来创建人的对象，通过Dog类创建狗的对象，通过Car类来创建汽车的对象，不同的类可以用来创建不同的对象。</li></ul></li></ol><ul><li>定义类：<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> 类名 &#123;</span><br><span class="line">属性名: 类型;</span><br><span class="line"><span class="title function_">constructor</span>(<span class="params">参数: 类型</span>)&#123;</span><br><span class="line"><span class="variable language_">this</span>.属性名 = 参数;</span><br><span class="line">&#125;</span><br><span class="line">方法名()&#123;</span><br><span class="line">....</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>示例：<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name: <span class="built_in">string</span>, age: <span class="built_in">number</span></span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">sayHello</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`大家好，我是<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>使用类：<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> p = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&#x27;孙悟空&#x27;</span>, <span class="number">18</span>);</span><br><span class="line">p.<span class="title function_">sayHello</span>();</span><br></pre></td></tr></table></figure><h3 id="2、面向对象的特点"><a href="#2、面向对象的特点" class="headerlink" title="2、面向对象的特点"></a>2、面向对象的特点</h3><h4 id="2-1、封装"><a href="#2-1、封装" class="headerlink" title="2.1、封装"></a>2.1、封装</h4><ul><li>对象实质上就是属性和方法的容器，它的主要作用就是存储属性和方法，这就是所谓的封装</li><li>默认情况下，对象的属性是可以任意的修改的，为了确保数据的安全性，在TS中可以对属性的权限进行设置</li><li>只读属性（readonly）：<ul><li>如果在声明属性时添加一个readonly，则属性便成了只读属性无法修改</li></ul></li><li>TS中属性具有三种修饰符：<ul><li>public（默认值），可以在类、子类和对象中修改</li><li>protected ，可以在类、子类中修改</li><li>private ，可以在类中修改</li></ul></li><li>示例：<ul><li>public<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="attr">name</span>: <span class="built_in">string</span>; <span class="comment">// 写或什么都不写都是public</span></span><br><span class="line">    <span class="keyword">public</span> <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name: <span class="built_in">string</span>, age: <span class="built_in">number</span></span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name; <span class="comment">// 可以在类中修改</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">sayHello</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`大家好，我是<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Employee</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Person</span>&#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name: <span class="built_in">string</span>, age: <span class="built_in">number</span></span>)&#123;</span><br><span class="line">        <span class="variable language_">super</span>(name, age);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name; <span class="comment">//子类中可以修改</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> p = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&#x27;孙悟空&#x27;</span>, <span class="number">18</span>);</span><br><span class="line">p.<span class="property">name</span> = <span class="string">&#x27;猪八戒&#x27;</span>;<span class="comment">// 可以通过对象修改</span></span><br></pre></td></tr></table></figure></li><li>protected<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name: <span class="built_in">string</span>, age: <span class="built_in">number</span></span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name; <span class="comment">// 可以修改</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">sayHello</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`大家好，我是<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Employee</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Person</span>&#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name: <span class="built_in">string</span>, age: <span class="built_in">number</span></span>)&#123;</span><br><span class="line">        <span class="variable language_">super</span>(name, age);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name; <span class="comment">//子类中可以修改</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> p = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&#x27;孙悟空&#x27;</span>, <span class="number">18</span>);</span><br><span class="line">p.<span class="property">name</span> = <span class="string">&#x27;猪八戒&#x27;</span>;<span class="comment">// 不能修改</span></span><br></pre></td></tr></table></figure></li><li>private<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name: <span class="built_in">string</span>, age: <span class="built_in">number</span></span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name; <span class="comment">// 可以修改</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">sayHello</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`大家好，我是<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Employee</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Person</span>&#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name: <span class="built_in">string</span>, age: <span class="built_in">number</span></span>)&#123;</span><br><span class="line">        <span class="variable language_">super</span>(name, age);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name; <span class="comment">//子类中不能修改</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> p = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&#x27;孙悟空&#x27;</span>, <span class="number">18</span>);</span><br><span class="line">p.<span class="property">name</span> = <span class="string">&#x27;猪八戒&#x27;</span>;<span class="comment">// 不能修改</span></span><br></pre></td></tr></table></figure></li></ul></li><li>属性存取器<ul><li>对于一些不希望被任意修改的属性，可以将其设置为private</li><li>直接将其设置为private将导致无法再通过对象修改其中的属性</li><li>我们可以在类中定义一组读取、设置属性的方法，这种对属性读取或设置的属性被称为属性的存取器</li><li>读取属性的方法叫做setter方法，设置属性的方法叫做getter方法</li><li>示例：<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="attr">_name</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name: <span class="built_in">string</span></span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">_name</span> = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">get</span> <span class="title function_">name</span>()&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">_name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">set</span> <span class="title function_">name</span>(<span class="params">name: <span class="built_in">string</span></span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">_name</span> = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> p1 = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&#x27;孙悟空&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(p1.<span class="property">name</span>); <span class="comment">// 通过getter读取name属性</span></span><br><span class="line">p1.<span class="property">name</span> = <span class="string">&#x27;猪八戒&#x27;</span>; <span class="comment">// 通过setter修改name属性</span></span><br></pre></td></tr></table></figure></li></ul></li><li>静态属性<ul><li>静态属性（方法），也称为类属性。使用静态属性无需创建实例，通过类即可直接使用</li><li>静态属性（方法）使用static开头</li><li>示例：<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Tools</span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="variable constant_">PI</span> = <span class="number">3.1415926</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">sum</span>(<span class="params">num1: <span class="built_in">number</span>, num2: <span class="built_in">number</span></span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> num1 + num2</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Tools</span>.<span class="property">PI</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Tools</span>.<span class="title function_">sum</span>(<span class="number">123</span>, <span class="number">456</span>));</span><br></pre></td></tr></table></figure></li></ul></li><li>this<ul><li>在类中，使用this表示当前对象<h4 id="2-2、继承"><a href="#2-2、继承" class="headerlink" title="2.2、继承"></a>2.2、继承</h4></li></ul></li><li>继承时面向对象中的又一个特性</li><li>通过继承可以将其他类中的属性和方法引入到当前类中<ul><li>示例：<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span>&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name: <span class="built_in">string</span>, age: <span class="built_in">number</span></span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Animal</span>&#123;</span><br><span class="line">    <span class="title function_">bark</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>在汪汪叫！`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> dog = <span class="keyword">new</span> <span class="title class_">Dog</span>(<span class="string">&#x27;旺财&#x27;</span>, <span class="number">4</span>);</span><br><span class="line">dog.<span class="title function_">bark</span>();</span><br></pre></td></tr></table></figure></li></ul></li><li>通过继承可以在不修改类的情况下完成对类的扩展</li><li>重写<ul><li>发生继承时，如果子类中的方法会替换掉父类中的同名方法，这就称为方法的重写</li><li>示例：<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span>&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name: <span class="built_in">string</span>, age: <span class="built_in">number</span></span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">run</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`父类中的run方法！`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Animal</span>&#123;</span><br><span class="line">    <span class="title function_">bark</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>在汪汪叫！`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">run</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`子类中的run方法，会重写父类中的run方法！`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> dog = <span class="keyword">new</span> <span class="title class_">Dog</span>(<span class="string">&#x27;旺财&#x27;</span>, <span class="number">4</span>);</span><br><span class="line">dog.<span class="title function_">bark</span>();</span><br></pre></td></tr></table></figure><ul><li>在子类中可以使用super来完成对父类的引用</li></ul></li></ul></li><li>抽象类（abstract class）<ul><li>抽象类是专门用来被其他类所继承的类，它只能被其他类所继承不能用来创建实例<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">Animal</span>&#123;</span><br><span class="line">    <span class="keyword">abstract</span> <span class="title function_">run</span>(): <span class="built_in">void</span>;</span><br><span class="line">    <span class="title function_">bark</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;动物在叫~&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Animals</span>&#123;</span><br><span class="line">    <span class="title function_">run</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;狗在跑~&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>使用abstract开头的方法叫做抽象方法，抽象方法没有方法体只能定义在抽象类中，继承抽象类时抽象方法必须要实现<h3 id="3、接口（Interface）"><a href="#3、接口（Interface）" class="headerlink" title="3、接口（Interface）"></a>3、接口（Interface）</h3>接口的作用类似于抽象类，不同点在于接口中的所有方法和属性都是没有实值的，换句话说接口中的所有方法都是抽象方法。接口主要负责定义一个类的结构，接口可以去限制一个对象的接口，对象只有包含接口中定义的所有属性和方法时才能匹配接口。同时，可以让一个类去实现接口，实现接口时类中要保护接口中的所有属性。</li></ul></li></ul></li><li>示例（检查对象类型）：<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="title function_">sayHello</span>():<span class="built_in">void</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params">per: Person</span>)&#123;</span><br><span class="line">    per.<span class="title function_">sayHello</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>(&#123;<span class="attr">name</span>:<span class="string">&#x27;孙悟空&#x27;</span>, <span class="title function_">sayHello</span>(<span class="params"></span>) &#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Hello, 我是 <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>`</span>)&#125;&#125;);</span><br></pre></td></tr></table></figure></li><li>示例（实现）<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="title function_">sayHello</span>():<span class="built_in">void</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">implements</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"><span class="keyword">public</span> name: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">sayHello</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;大家好，我是&#x27;</span>+<span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4、泛型（Generic）"><a href="#4、泛型（Generic）" class="headerlink" title="4、泛型（Generic）"></a>4、泛型（Generic）</h3>定义一个函数或类时，有些情况下无法确定其中要使用的具体类型（返回值、参数、属性的类型不能确定），此时泛型便能够发挥作用。<br>举个例子：<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params">arg: <span class="built_in">any</span></span>): <span class="built_in">any</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> arg;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>上例中，test函数有一个参数类型不确定，但是能确定的时其返回值的类型和参数的类型是相同的，由于类型不确定所以参数和返回值均使用了any，但是很明显这样做是不合适的，首先使用any会关闭TS的类型检查，其次这样设置也不能体现出参数和返回值是相同的类型<ul><li>使用泛型：<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> test&lt;T&gt;(<span class="attr">arg</span>: T): T&#123;</span><br><span class="line"><span class="keyword">return</span> arg;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>这里的<code>&lt;T&gt;</code>就是泛型，T是我们给这个类型起的名字（不一定非叫T），设置泛型后即可在函数中使用T来表示该类型。所以泛型其实很好理解，就表示某个类型。</li><li>那么如何使用上边的函数呢？<ul><li>方式一（直接使用）：<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">test</span>(<span class="number">10</span>)</span><br></pre></td></tr></table></figure><ul><li>使用时可以直接传递参数使用，类型会由TS自动推断出来，但有时编译器无法自动推断时还需要使用下面的方式</li></ul></li><li>方式二（指定类型）：<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test&lt;<span class="built_in">number</span>&gt;(<span class="number">10</span>)</span><br></pre></td></tr></table></figure><ul><li>也可以在函数后手动指定泛型</li></ul></li></ul></li><li>可以同时指定多个泛型，泛型间使用逗号隔开：<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> test&lt;T, K&gt;(<span class="attr">a</span>: T, <span class="attr">b</span>: K): K&#123;</span><br><span class="line">    <span class="keyword">return</span> b;</span><br><span class="line">&#125;</span><br><span class="line">test&lt;<span class="built_in">number</span>, <span class="built_in">string</span>&gt;(<span class="number">10</span>, <span class="string">&quot;hello&quot;</span>);</span><br></pre></td></tr></table></figure><ul><li>使用泛型时，完全可以将泛型当成是一个普通的类去使用</li></ul></li><li>类中同样可以使用泛型：<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyClass</span>&lt;T&gt;&#123;</span><br><span class="line">    <span class="attr">prop</span>: T;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">prop: T</span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">prop</span> = prop;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>除此之外，也可以对泛型的范围进行约束<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">MyInter</span>&#123;</span><br><span class="line">    <span class="attr">length</span>: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> test&lt;T <span class="keyword">extends</span> <span class="title class_">MyInter</span>&gt;(<span class="attr">arg</span>: T): <span class="built_in">number</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> arg.<span class="property">length</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>使用T extends MyInter表示泛型T必须是MyInter的子类，不一定非要使用接口类和抽象类同样适用。</li></ul></li></ul></li></ul>]]></content>
    
    
    <summary type="html">typescipt</summary>
    
    
    
    <category term="前端" scheme="https://www.777nx.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="typescipt" scheme="https://www.777nx.cn/tags/typescipt/"/>
    
    <category term="JavaScript" scheme="https://www.777nx.cn/tags/JavaScript/"/>
    
    <category term="尚硅谷" scheme="https://www.777nx.cn/tags/%E5%B0%9A%E7%A1%85%E8%B0%B7/"/>
    
  </entry>
  
  <entry>
    <title>Front-matter</title>
    <link href="https://www.777nx.cn/posts/31e4c77c.html"/>
    <id>https://www.777nx.cn/posts/31e4c77c.html</id>
    <published>2023-01-13T12:37:56.000Z</published>
    <updated>2023-01-29T09:48:20.144Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-Page-Front-matter"><a href="#1-Page-Front-matter" class="headerlink" title="1. Page Front-matter"></a>1. Page Front-matter</h2><div class="table-container"><table><thead><tr><th style="text-align:center"><strong>写法</strong></th><th style="text-align:center"><strong>解释</strong></th></tr></thead><tbody><tr><td style="text-align:center">title</td><td style="text-align:center">【必需】页面标题</td></tr><tr><td style="text-align:center">date</td><td style="text-align:center">【必需】页面创建日期</td></tr><tr><td style="text-align:center">type</td><td style="text-align:center">【必需】标签、分类和友情链接三个页面需要配置</td></tr><tr><td style="text-align:center">updated</td><td style="text-align:center">【必需】标签、分类和友情链接三个页面需要配置</td></tr><tr><td style="text-align:center">description</td><td style="text-align:center">【可选】页面描述</td></tr><tr><td style="text-align:center">keywords</td><td style="text-align:center">【可选】页面关键字</td></tr><tr><td style="text-align:center">comments</td><td style="text-align:center">【可选】显示页面评论模块 (默认 true)</td></tr><tr><td style="text-align:center">top_img</td><td style="text-align:center">【可选】页面顶部图片</td></tr><tr><td style="text-align:center">mathjax</td><td style="text-align:center">【可选】显示 mathjax (当设置 mathjax 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td style="text-align:center">katex</td><td style="text-align:center">【可选】显示 katex (当设置 katex 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td style="text-align:center">aside</td><td style="text-align:center">【可选】显示侧边栏 (默认 true)</td></tr><tr><td style="text-align:center">aplayer</td><td style="text-align:center">【可选】在需要的页面加载 aplayer 的 js 和 css</td></tr><tr><td style="text-align:center">highlight_shrink</td><td style="text-align:center">【可选】配置代码框是否展开 (true/false) (默认为设置中 highlight_shrink 的配置)</td></tr></tbody></table></div><h2 id="2-Post-Front-matter"><a href="#2-Post-Front-matter" class="headerlink" title="2. Post Front-matter"></a>2. Post Front-matter</h2><div class="table-container"><table><thead><tr><th style="text-align:center"><strong>写法</strong></th><th style="text-align:center"><strong>解释</strong></th></tr></thead><tbody><tr><td style="text-align:center">title</td><td style="text-align:center">【必需】文章标题</td></tr><tr><td style="text-align:center">date</td><td style="text-align:center">【必需】文章创建日期</td></tr><tr><td style="text-align:center">updated</td><td style="text-align:center">【可选】文章更新日期</td></tr><tr><td style="text-align:center">tags</td><td style="text-align:center">【可选】文章标签</td></tr><tr><td style="text-align:center">categories</td><td style="text-align:center">【可选】文章分类</td></tr><tr><td style="text-align:center">keywords</td><td style="text-align:center">【可选】文章关键字</td></tr><tr><td style="text-align:center">description</td><td style="text-align:center">【可选】文章描述</td></tr><tr><td style="text-align:center">top_img</td><td style="text-align:center">【可选】文章顶部图片</td></tr><tr><td style="text-align:center">cover</td><td style="text-align:center">【可选】文章缩略图 (如果没有设置 top_img，文章页顶部将显示缩略图，可设为 false/图片地址/留空)</td></tr><tr><td style="text-align:center">comments</td><td style="text-align:center">【可选】显示文章评论模块 (默认 true)</td></tr><tr><td style="text-align:center">toc</td><td style="text-align:center">【可选】显示文章 TOC (默认为设置中 toc 的 enable 配置)</td></tr><tr><td style="text-align:center">toc_number</td><td style="text-align:center">【可选】显示 toc_number (默认为设置中 toc 的 number 配置)</td></tr><tr><td style="text-align:center">copyright</td><td style="text-align:center">【可选】显示文章版权模块 (默认为设置中 post_copyright 的 enable 配置)</td></tr><tr><td style="text-align:center">copyright_author</td><td style="text-align:center">【可选】文章版权模块的文章作者</td></tr><tr><td style="text-align:center">copyright_author_href</td><td style="text-align:center">【可选】文章版权模块的文章作者链接</td></tr><tr><td style="text-align:center">copyright_url</td><td style="text-align:center">【可选】文章版权模块的文章版权链接</td></tr><tr><td style="text-align:center">copyright_info</td><td style="text-align:center">【可选】文章版权模块的版权声明文字</td></tr><tr><td style="text-align:center">mathjax</td><td style="text-align:center">【可选】显示 mathjax (当设置 mathjax 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td style="text-align:center">katex</td><td style="text-align:center">【可选】显示 katex (当设置 katex 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td style="text-align:center">aplayer</td><td style="text-align:center">【可选】在需要的页面加载 aplayer 的 js 和 css</td></tr><tr><td style="text-align:center">highlight_shrink</td><td style="text-align:center">【可选】配置代码框是否展开 (true/false) (默认为设置中 highlight_shrink 的配置)</td></tr><tr><td style="text-align:center">aside</td><td style="text-align:center">【可选】显示侧边栏 (默认 true)</td></tr></tbody></table></div>]]></content>
    
    
    <summary type="html">Front-matter</summary>
    
    
    
    <category term="博客" scheme="https://www.777nx.cn/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="hexo" scheme="https://www.777nx.cn/tags/hexo/"/>
    
    <category term="butterfly" scheme="https://www.777nx.cn/tags/butterfly/"/>
    
  </entry>
  
  <entry>
    <title>Vue中常用的提示信息</title>
    <link href="https://www.777nx.cn/posts/4f2ee09a.html"/>
    <id>https://www.777nx.cn/posts/4f2ee09a.html</id>
    <published>2023-01-11T12:50:36.000Z</published>
    <updated>2023-01-29T09:48:20.132Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><p>参考：<a href="https://blog.csdn.net/weixin_53791978/article/details/124169067">Vue中常用的提示信息</a></p></div><h2 id="1-Message提示："><a href="#1-Message提示：" class="headerlink" title="1. Message提示："></a>1. Message提示：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">this.$message.warnging(&#x27;请......&#x27;)  // 警告（提示）信息</span><br><span class="line">this.$message.success(&#x27;......成功&#x27;)  // ....成功信息</span><br><span class="line">this.$message.error(&#x27;......失败&#x27;)  // .....失败信息</span><br><span class="line">this.$message.info(&#x27;......&#x27;)  // 提示信息</span><br><span class="line"></span><br><span class="line">this.$message(&#123;</span><br><span class="line">title:&#x27;成功&#x27;,</span><br><span class="line">message:&#x27;...成功&#x27;,</span><br><span class="line">type:&#x27;seccess&#x27;,</span><br><span class="line">duration:2000</span><br><span class="line">&#125;)</span><br><span class="line">type的类型：success/warning/info/error</span><br><span class="line"></span><br><span class="line">例如：</span><br><span class="line">更新数据、搜索数据、添加数据、删除成功</span><br></pre></td></tr></table></figure><h2 id="2-confirm二次确认提示："><a href="#2-confirm二次确认提示：" class="headerlink" title="2. confirm二次确认提示："></a>2. confirm二次确认提示：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">this.$confirm(&#x27;是否删除&#x27; , &#x27;提示&#x27; , &#123;</span><br><span class="line">confirmButtonText:&#x27;确认&#x27;,</span><br><span class="line">cancelButtonText:&#x27;取消&#x27;,</span><br><span class="line">type:&#x27;warning&#x27;</span><br><span class="line">&#125;).then(()=&gt;&#123;</span><br><span class="line">.....删除或确认修改的方法（多用于确认删除操作，减少失误操作）</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="3-notify提示："><a href="#3-notify提示：" class="headerlink" title="3. notify提示："></a>3. notify提示：</h2><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">this.$<span class="keyword">notify</span>(&#123;</span><br><span class="line">title:<span class="string">&#x27;成功&#x27;</span>,</span><br><span class="line">message:<span class="string">&#x27;...成功&#x27;</span>,</span><br><span class="line"><span class="keyword">type</span>:<span class="string">&#x27;seccess&#x27;</span>,</span><br><span class="line">duration:<span class="number">2000</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">type</span>的类型：success/<span class="built_in">warning</span>/<span class="keyword">info</span>/error</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Vue中常用的提示信息</summary>
    
    
    
    <category term="前端" scheme="https://www.777nx.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://www.777nx.cn/tags/vue/"/>
    
    <category term="框架" scheme="https://www.777nx.cn/tags/%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>使用脚本文件自动化部署页面到博客网站</title>
    <link href="https://www.777nx.cn/posts/dca810e5.html"/>
    <id>https://www.777nx.cn/posts/dca810e5.html</id>
    <published>2023-01-11T09:47:51.000Z</published>
    <updated>2023-01-29T09:48:20.152Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-遇到问题"><a href="#1-遇到问题" class="headerlink" title="1. 遇到问题"></a>1. 遇到问题</h2><p>每次写完 Markdown 文章，都要手动执行命名部署页面到博客网站</p><p>命令如下：</p><ul><li>清理本地缓存</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><ul><li>重新编译静态页面</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure><ul><li>压缩静态资源</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gulp <span class="comment">#gulp插件</span></span><br></pre></td></tr></table></figure><ul><li>构建新的索引</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo algolia <span class="comment">#algolia插件</span></span><br></pre></td></tr></table></figure><ul><li>将最新修改部署至 hexo</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><ul><li>提交最新修改到 GitHub</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;Update posts content&quot;</span></span><br><span class="line">git push origin <span class="variable">$branch</span></span><br></pre></td></tr></table></figure><h2 id="2-分析问题"><a href="#2-分析问题" class="headerlink" title="2. 分析问题"></a>2. 分析问题</h2><p>于是我就想能不能有一种方式，让我每次写完 Markdown 文章，自动执行这些命令部署上去。</p><p>答案是肯定的！！使用 .sh 文件，一般都是bash脚本</p><h2 id="3-解决问题"><a href="#3-解决问题" class="headerlink" title="3. 解决问题"></a>3. 解决问题</h2><p>在博客根目录新建 <code>menu.sh</code> 的文件，用记事本打开将以下代码粘贴进去</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment">#本脚本用于hexo交流，完全开源，可以随意传阅，不过希望保留出处。</span></span><br><span class="line"><span class="comment">#Author：Fantasy</span></span><br><span class="line"><span class="comment">#Updated: 2023-01-11</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;==================================================&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;              欢迎使用Hexo控制脚本!&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;                更方便的魔改版本&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;==================================================&quot;</span></span><br><span class="line">HexoPath=$(<span class="built_in">cd</span> <span class="string">&quot;<span class="subst">$(dirname <span class="string">&quot;<span class="variable">$0</span>&quot;</span>)</span>&quot;</span>; <span class="built_in">pwd</span>)</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$&#123;HexoPath&#125;</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\033[32m Blog 根目录：&quot;</span><span class="variable">$&#123;HexoPath&#125;</span><span class="string">&quot;\033[0m\n&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\033[32m [0] \033[0m 退出菜单\n&quot;</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\033[31m =============以下功能需要在Hexo文件夹内使用======\033[0m\n&quot;</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\033[32m [1] \033[0m 开启本地预览\n&quot;</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\033[32m [2] \033[0m 重新编译后开启本地预览\033[33m（修改过_config.yml需使用这个才能看到变化）\033[0m\n&quot;</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\033[32m [3] \033[0m 新建博客文章\n&quot;</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\033[32m [4] \033[0m 新建博客页面\n&quot;</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\033[32m [5] \033[0m 部署页面到博客网站\n&quot;</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\033[32m [6] \033[0m 从Github拉取最新版本\n&quot;</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\033[32m [7] \033[0m 提交本地修改到GitHub\n&quot;</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\033[32m [8] \033[0m 重新安装依赖\n&quot;</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;请选择需要的功能，默认选择\033[32m [1] \033[0m开启本地预览\n&quot;</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;选择：\n&quot;</span></span><br><span class="line"><span class="built_in">read</span> answer</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;answer&#125;</span>&quot;</span> = <span class="string">&quot;1&quot;</span> ] || [ <span class="string">&quot;<span class="variable">$&#123;answer&#125;</span>&quot;</span> = <span class="string">&quot;&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\033[32mINFO \033[0m 正在启动本地预览，可以按Ctrl+C退出\n&quot;</span></span><br><span class="line">hexo s</span><br><span class="line"><span class="built_in">exec</span> <span class="variable">$&#123;HexoPath&#125;</span>/menu.sh</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;answer&#125;</span>&quot;</span> = <span class="string">&quot;2&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\033[32mINFO \033[0m 正在清理本地缓存...\n&quot;</span></span><br><span class="line">hexo clean</span><br><span class="line"><span class="comment"># printf &quot;\033[32mINFO \033[0m 正在更新番剧列表...\n&quot;</span></span><br><span class="line"><span class="comment"># hexo bangumi -u #bilibili追番插件，未配置无需开启</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\033[32mINFO \033[0m 正在重新编译静态页面...\n&quot;</span></span><br><span class="line">hexo generate</span><br><span class="line"><span class="comment"># printf &quot;\033[32mINFO \033[0m 正在压缩静态资源...\n&quot;</span></span><br><span class="line"><span class="comment"># gulp #gulp插件，未配置无需开启</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\033[32mINFO \033[0m 正在开启本地预览，可以按Ctrl+C退出\n&quot;</span></span><br><span class="line">hexo server</span><br><span class="line"><span class="built_in">exec</span> <span class="variable">$&#123;HexoPath&#125;</span>/menu.sh</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;answer&#125;</span>&quot;</span> = <span class="string">&quot;3&quot;</span> ] || [ <span class="string">&quot;<span class="variable">$&#123;answer&#125;</span>&quot;</span> = <span class="string">&quot;&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\033[32mINFO \033[0m 请输入您想要新建的文章标题\n&quot;</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\033[32mINFO \033[0m \033[33m标题中的各类标点符号和空格，请用短横\&quot;-\&quot;代替！\033[0m\n&quot;</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;您的文章标题：&quot;</span></span><br><span class="line"><span class="built_in">read</span> posttitle</span><br><span class="line">hexo new post <span class="variable">$&#123;posttitle&#125;</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\033[32mINFO \033[0m 新建完成，正在尝试为您打开文章文件\n&quot;</span></span><br><span class="line">start <span class="variable">$&#123;HexoPath&#125;</span>/source/_posts/<span class="variable">$&#123;posttitle&#125;</span>.md</span><br><span class="line"><span class="built_in">exec</span> <span class="variable">$&#123;HexoPath&#125;</span>/menu.sh</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;answer&#125;</span>&quot;</span> = <span class="string">&quot;4&quot;</span> ] || [ <span class="string">&quot;<span class="variable">$&#123;answer&#125;</span>&quot;</span> = <span class="string">&quot;&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\033[32mINFO \033[0m 请输入您想要新建的页面名称\n&quot;</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\033[32mINFO \033[0m \033[33m名称中的各类标点符号和空格，请用短横\&quot;-\&quot;代替！\033[0m\n&quot;</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;您的页面名称：&quot;</span></span><br><span class="line"><span class="built_in">read</span> pagename</span><br><span class="line">hexo new page <span class="variable">$&#123;pagename&#125;</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\033[32mINFO \033[0m 新建完成，正在尝试为您打开页面文件\n&quot;</span></span><br><span class="line">start <span class="variable">$&#123;HexoPath&#125;</span>/source/<span class="variable">$&#123;pagename&#125;</span>/index.md</span><br><span class="line"><span class="built_in">exec</span> <span class="variable">$&#123;HexoPath&#125;</span>/menu.sh</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;answer&#125;</span>&quot;</span> = <span class="string">&quot;5&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\033[32mINFO \033[0m 正在清理本地缓存...\n&quot;</span></span><br><span class="line">hexo clean</span><br><span class="line"><span class="comment"># printf &quot;\033[32mINFO \033[0m 正在更新番剧列表...\n&quot;</span></span><br><span class="line"><span class="comment"># hexo bangumi -u #bilibili追番插件，未配置无需开启</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\033[32mINFO \033[0m 正在重新编译静态页面...\n&quot;</span></span><br><span class="line">hexo generate</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\033[32mINFO \033[0m 正在压缩静态资源...\n&quot;</span></span><br><span class="line">gulp <span class="comment">#gulp插件，未配置无需开启</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\033[32mINFO \033[0m 正在构建新的索引...\n&quot;</span></span><br><span class="line">hexo algolia <span class="comment">#algolia插件，未配置无需开启</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\033[32mINFO \033[0m 正在准备将最新修改部署至Hexo...\n&quot;</span></span><br><span class="line">hexo deploy</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\033[32mINFO \033[0m 部署完成，您的网站已经是最新版本！\n&quot;</span></span><br><span class="line"><span class="built_in">sleep</span> 1s</span><br><span class="line"><span class="built_in">exec</span> <span class="variable">$&#123;HexoPath&#125;</span>/menu.sh</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;answer&#125;</span>&quot;</span> = <span class="string">&quot;6&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\033[32mINFO \033[0m 正在启动拉取器...\n&quot;</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;请输入分支名: &quot;</span></span><br><span class="line"><span class="built_in">read</span> branch</span><br><span class="line">git pull origin <span class="variable">$branch</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\033[32mINFO \033[0m 拉取完毕，您的博客已是最新版本！\n&quot;</span></span><br><span class="line"><span class="built_in">sleep</span> 1s</span><br><span class="line"><span class="built_in">exec</span> <span class="variable">$&#123;HexoPath&#125;</span>/menu.sh</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;answer&#125;</span>&quot;</span> = <span class="string">&quot;7&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\033[32mINFO \033[0m 正在提交最新修改到GitHub...\n&quot;</span></span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;Update posts content&quot;</span></span><br><span class="line">git push origin <span class="variable">$branch</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\033[32mINFO \033[0m 提交完毕，您的修改已上传至Github！\n&quot;</span></span><br><span class="line"><span class="built_in">sleep</span> 1s</span><br><span class="line"><span class="built_in">exec</span> <span class="variable">$&#123;HexoPath&#125;</span>/menu.sh</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;answer&#125;</span>&quot;</span> = <span class="string">&quot;8&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\033[32mINFO \033[0m 正在清空当前依赖环境 ...\n&quot;</span></span><br><span class="line"><span class="built_in">rm</span> node_modules</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\033[32mINFO \033[0m 正在清空当前依赖关系锁定 ...\n&quot;</span></span><br><span class="line"><span class="built_in">rm</span> package-lock.json</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\033[32mINFO \033[0m 正在清空当前依赖关系缓存 ...\n&quot;</span></span><br><span class="line">npm cache clean --force</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\033[32mINFO \033[0m 正在将npm源替换为阿里云镜像 ...\n&quot;</span></span><br><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmmirror.com</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\033[32mINFO \033[0m 正在重新安装当前依赖环境 ...\n&quot;</span></span><br><span class="line">npm install</span><br><span class="line"><span class="built_in">sleep</span> 2s</span><br><span class="line"><span class="built_in">exec</span> <span class="variable">$&#123;HexoPath&#125;</span>/menu.sh</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;answer&#125;</span>&quot;</span> = <span class="string">&quot;0&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\033[32mINFO \033[0m 欢迎下次光临！\n&quot;</span></span><br><span class="line"><span class="built_in">sleep</span> 1s</span><br><span class="line"><span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\033[31mERROR \033[0m 输入错误，请返回重新选择...\n&quot;</span></span><br><span class="line"><span class="built_in">sleep</span> 1s</span><br><span class="line"><span class="built_in">exec</span> <span class="variable">$&#123;HexoPath&#125;</span>/menu.sh</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h2 id="4-效果演示"><a href="#4-效果演示" class="headerlink" title="4. 效果演示"></a>4. 效果演示</h2><p><img src="https://img.777nx.cn/test/Snipaste_2023-01-11_18-06-26.png" alt="Snipaste_2023-01-11_18-06-26.png"></p>]]></content>
    
    
    <summary type="html">使用脚本文件自动化部署页面到博客网站</summary>
    
    
    
    <category term="博客" scheme="https://www.777nx.cn/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="hexo" scheme="https://www.777nx.cn/tags/hexo/"/>
    
    <category term="butterfly" scheme="https://www.777nx.cn/tags/butterfly/"/>
    
    <category term="脚本" scheme="https://www.777nx.cn/tags/%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>5分钟搭一个博客</title>
    <link href="https://www.777nx.cn/posts/3fe5d4e9.html"/>
    <id>https://www.777nx.cn/posts/3fe5d4e9.html</id>
    <published>2023-01-11T07:21:01.000Z</published>
    <updated>2023-01-29T09:48:20.140Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="https://img.777nx.cn/%E5%8D%9A%E5%AE%A2/%E4%BA%94%E5%88%86%E9%92%9F%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2/hexo.png" style="zoom:50%;" /></p><p><strong>hexo</strong>也算是老牌博客框架了，以前对于hexo的了解也仅仅停留在知道他是一个能够快速将本地的markdown文件生成静态网站的框架。<br>最早的个人博客网站还是自己动手，从0-1的一个spa，并做了大量seo，设备适配，性能优化，配套开发的服务也包括后台管理系统，node服务以及sql数据库，当然个人还兼备产品设计，UI设计等工作。</p><p>入坑尝试hexo是由于看到hexo：</p><ol><li>主题丰富，且多端适配良好。</li><li>seo优化，网页性能👍🏻。</li><li>方便管理，迁移。</li></ol><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>准备好基本环境：</p><ol><li>git</li><li>node</li></ol><p>直接全局安装hexo-cli</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>运行检查是否安装完成</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo version</span><br></pre></td></tr></table></figure><h2 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h2><p>使用hero-cli初始化blog项目，我取名叫”777nx”吧🌛。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init 777nx</span><br></pre></td></tr></table></figure><p>接着安装依赖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd 777nx</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>安装完成之后，我们可以运行看下效果。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>打开<code>http://localhost:4000/</code>查看效果</p><p><img src="https://img.777nx.cn/%E5%8D%9A%E5%AE%A2/%E4%BA%94%E5%88%86%E9%92%9F%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2/image-20220703154230288.png" alt="image-20220703154230288"></p><p><strong>文章迁移</strong></p><p>把原先写过的markdown，copy到source/_posts。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -r /Users/allen/Documents/blog /User/allen/Desktop/777nx/source/_posts</span><br></pre></td></tr></table></figure><blockquote><p>这里我没找到如何快速批量配置front-matter的方式，只能手动一个一个改了</p></blockquote><h2 id="配置-config-yml"><a href="#配置-config-yml" class="headerlink" title="配置_config.yml"></a>配置_config.yml</h2><p>Yaml语言的配置文件，对网站进行详细的设置。</p><p><a href="https://hexo.io/docs/configuration.html">https://hexo.io/docs/configuration.html</a></p><h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><p>默认的主题有点丑，可以到官网找下喜欢的。</p><p><a href="https://hexo.io/themes/">https://hexo.io/themes/</a></p><p>我选了Butterfly<br><a href="https://butterfly.js.org/">https://butterfly.js.org/</a></p><p>按照提示安装配置即可。</p><h2 id="写个web服务器"><a href="#写个web服务器" class="headerlink" title="写个web服务器"></a>写个web服务器</h2><p>目前我们已经完成了hexo项目的初始化，但hexo仅是一个静态页面生成的框架，如果我们需要部署到机器上，那么还需要一个服务器。</p><p>express即可满足我所有需求。</p><p>安装express，在项目根目录下，创建一个<code>777nx/www/index.js</code>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>()</span><br><span class="line"><span class="keyword">const</span> port = <span class="number">80</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** 静态资源 */</span></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">static</span>(<span class="string">&#x27;./public&#x27;</span>))</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(port, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`app listening on port <span class="subst">$&#123;port&#125;</span>`</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>安装pm2，添加script。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;logs&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pm2 logs&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pm2 start ./www/index.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;stop&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pm2 stop all&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>其实快速在机器上更新代码还挺麻烦的，再写个脚本。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;🚚 拉取最新代码...&quot;</span></span><br><span class="line">git pull</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;🚗 更新npm包...&quot;</span></span><br><span class="line">npm install</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;📦️ 打包前端代码...&quot;</span></span><br><span class="line">npm run build</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;🌏︎ 启动www服务...&quot;</span></span><br><span class="line">npm run stop</span><br><span class="line">npm run start</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;🎉🎉🎉 部署成功!!!&quot;</span></span><br></pre></td></tr></table></figure><p>放在<code>777nx/script/deploy.sh</code>，然后再加个script。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;logs&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pm2 logs&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pm2 start ./www/index.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;stop&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pm2 stop all&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;deploy&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sh ./script/deploy.sh&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>测试一下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run deploy</span><br></pre></td></tr></table></figure><p><img src="https://img.777nx.cn/%E5%8D%9A%E5%AE%A2/%E4%BA%94%E5%88%86%E9%92%9F%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2/image-20220721230920045.png" alt="image-20220721230920045"></p><p>看起来好像没什么问题🤔</p><h2 id="搭个图床"><a href="#搭个图床" class="headerlink" title="搭个图床"></a>搭个图床</h2><p>博客里图片资源那么多，你看我的1M的学生服务器怎么扛得住呢？图片资源都上CDN吧。</p><p>本身我也习惯本地用Typora写博，那么就推荐一下picGo做图床管理吧，mac体验满分。</p><p><img src="https://img.777nx.cn/%E5%8D%9A%E5%AE%A2/%E4%BA%94%E5%88%86%E9%92%9F%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2/image-20220721231448819.png" alt="image-20220721231448819"></p><p><a href="https://picgo.github.io/PicGo-Doc/">PicGo官网</a></p><p>支持的图床还蛮多的（我用COS），先配置好你的图床。<img src="https://img.777nx.cn/%E5%8D%9A%E5%AE%A2/%E4%BA%94%E5%88%86%E9%92%9F%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2/image-20220721231557705.png" alt="image-20220721231557705"></p><p>打开Typora偏好设置，配置PicGO自动上传。</p><p><img src="https://img.777nx.cn/%E5%8D%9A%E5%AE%A2/%E4%BA%94%E5%88%86%E9%92%9F%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2/image-20220721231756498.png" alt="image-20220721231756498"></p><p>试试在Typora里粘贴图片吧</p><h2 id="实现自动部署"><a href="#实现自动部署" class="headerlink" title="实现自动部署"></a>实现自动部署</h2><p>自动部署使用方式luna写进了仓库的README.md了</p><p><a href="https://github.com/AHREAL/luna#%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2">自动部署</a></p><p>100行实现</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> dotenv = <span class="built_in">require</span>(<span class="string">&quot;dotenv&quot;</span>)</span><br><span class="line">dotenv.<span class="title function_">config</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; <span class="title class_">Buffer</span> &#125; = <span class="built_in">require</span>(<span class="string">&#x27;buffer&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> childrenProcess = <span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">&#x27;body-parser&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> crypto = <span class="built_in">require</span>(<span class="string">&#x27;crypto&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>()</span><br><span class="line"><span class="keyword">const</span> port = <span class="number">80</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">HUB_SECRET</span> = process.<span class="property">env</span>.<span class="property">HUB_SECRET</span>;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(bodyParser.<span class="title function_">json</span>())</span><br><span class="line"></span><br><span class="line"><span class="comment">/** 执行命令 */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">exec</span> = (<span class="params">bash</span>) =&gt; &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`🔧 开始执行命令 <span class="subst">$&#123;bash&#125;</span>`</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    childrenProcess.<span class="title function_">exec</span>(bash, <span class="function">(<span class="params">error, stdout, stderr</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (error) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">`🔧 命令出错 <span class="subst">$&#123;bash&#125;</span> exec error: <span class="subst">$&#123;error&#125;</span>`</span>);</span><br><span class="line">        <span class="title function_">reject</span>()</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`🔧 命令完成 <span class="subst">$&#123;bash&#125;</span> stdout: <span class="subst">$&#123;stdout&#125;</span> stderr: <span class="subst">$&#123;stderr&#125;</span>`</span>);</span><br><span class="line">      <span class="title function_">resolve</span>()</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** 校验sig */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">validateHubSig</span> = (<span class="params">req</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!req.<span class="property">body</span>) <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    <span class="keyword">const</span> signature = <span class="title class_">Buffer</span>.<span class="title function_">from</span>(<span class="string">`sha1=<span class="subst">$&#123;crypto.createHmac(<span class="string">&#x27;sha1&#x27;</span>, HUB_SECRET).update(<span class="built_in">JSON</span>.stringify(req.body)).digest(<span class="string">&#x27;hex&#x27;</span>)&#125;</span>`</span>)</span><br><span class="line">    <span class="keyword">const</span> _signature = <span class="title class_">Buffer</span>.<span class="title function_">from</span>(req.<span class="property">headers</span>[<span class="string">&#x27;x-hub-signature&#x27;</span>])</span><br><span class="line">    <span class="keyword">if</span> (signature.<span class="property">length</span> !== _signature.<span class="property">length</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> crypto.<span class="title function_">timingSafeEqual</span>(signature, _signature)</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;validateHubSigFail&#x27;</span>, error)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** 静态资源 */</span></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">static</span>(<span class="string">&#x27;./public&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">/** webhook - 自动刷新 */</span></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/refresh&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="title function_">validateHubSig</span>(req)) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;🏂 webhook自动刷新触发，正在执行...&#x27;</span>)</span><br><span class="line">    <span class="title function_">exec</span>(<span class="string">&#x27;git pull&#x27;</span>)</span><br><span class="line">      .<span class="title function_">then</span>(exec.<span class="title function_">bind</span>(<span class="variable language_">this</span>, <span class="string">&#x27;npm install&#x27;</span>))</span><br><span class="line">      .<span class="title function_">then</span>(exec.<span class="title function_">bind</span>(<span class="variable language_">this</span>, <span class="string">&#x27;npm run build&#x27;</span>))</span><br><span class="line">      .<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;🎉 自动刷新完成!&#x27;</span>)</span><br><span class="line">      &#125;).<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;❌ 自动刷新失败，请查看日志详情!&#x27;</span>)</span><br><span class="line">      &#125;)</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">send</span>(&#123;</span><br><span class="line">      <span class="attr">msg</span>:<span class="string">&#x27;webhook success&#x27;</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">send</span>(&#123;</span><br><span class="line">    <span class="attr">msg</span>: <span class="string">&#x27;validate signature fail&#x27;</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(port, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`app listening on port <span class="subst">$&#123;port&#125;</span>`</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>剩下就是直接push，再也不用上机器了（当然有BUG还是要去的 😅）</p>]]></content>
    
    
    <summary type="html">5分钟搭一个博客</summary>
    
    
    
    <category term="博客" scheme="https://www.777nx.cn/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="hexo" scheme="https://www.777nx.cn/tags/hexo/"/>
    
    <category term="butterfly" scheme="https://www.777nx.cn/tags/butterfly/"/>
    
  </entry>
  
  <entry>
    <title>希望学编程的同学都知道这些宝藏老师！</title>
    <link href="https://www.777nx.cn/posts/97ec1411.html"/>
    <id>https://www.777nx.cn/posts/97ec1411.html</id>
    <published>2023-01-10T08:29:58.000Z</published>
    <updated>2023-01-29T09:48:20.173Z</updated>
    
    <content type="html"><![CDATA[<div class="tip home"><p>以下文章来源于程序员库森，作者库森</p></div><div class="note info flat"><p>参考：<a href="https://mp.weixin.qq.com/s/WdRD5Kj_2z4NlLR0FLllyQ">希望计算机专业学生都知道这些宝藏老师</a></p></div><p>大家好，我是Fantasy。<br>今天给大家分享一些计算机专业的宝藏老师，这些都是名师，听他们的课程一点不枯燥，跟着名师学学起来事半功倍！</p><h2 id="1-c语言——翁凯老师-郝斌老师"><a href="#1-c语言——翁凯老师-郝斌老师" class="headerlink" title="1.  c语言——翁凯老师,郝斌老师"></a>1.  c语言——翁凯老师,郝斌老师</h2><p>翁凯老师是浙江大学的老师，讲的很细致，学他的课，你能感受到代码的美感，在他的引导下能去思考，是不少人的男神。<br><img src="https://img.777nx.cn/Java/%E5%B8%8C%E6%9C%9B%E5%AD%A6%E7%BC%96%E7%A8%8B%E7%9A%84%E5%90%8C%E5%AD%A6%E9%83%BD%E7%9F%A5%E9%81%93%E8%BF%99%E4%BA%9B%E5%AE%9D%E8%97%8F%E8%80%81%E5%B8%88%EF%BC%81/1.png" alt=""><br>入门还可以先看郝斌老师，郝斌老师几乎把c语言的根本原理都讲出来了，很基础很接地气的，很容易理解上手，是培训班的实操教学风格。<br><img src="https://img.777nx.cn/Java/%E5%B8%8C%E6%9C%9B%E5%AD%A6%E7%BC%96%E7%A8%8B%E7%9A%84%E5%90%8C%E5%AD%A6%E9%83%BD%E7%9F%A5%E9%81%93%E8%BF%99%E4%BA%9B%E5%AE%9D%E8%97%8F%E8%80%81%E5%B8%88%EF%BC%81/2.png" alt=""></p><h2 id="2-C-——侯捷老师"><a href="#2-C-——侯捷老师" class="headerlink" title="2.  C++ ——侯捷老师"></a>2.  C++ ——侯捷老师</h2><p>侯捷老师是《深入浅出MFC》作者，C++国内布道者，他的 C++ 视频广为人知！初学者通常被指针困扰，推荐去看侯捷老师的课程，看完后你会理解的完全透彻。<br><img src="https://img.777nx.cn/Java/%E5%B8%8C%E6%9C%9B%E5%AD%A6%E7%BC%96%E7%A8%8B%E7%9A%84%E5%90%8C%E5%AD%A6%E9%83%BD%E7%9F%A5%E9%81%93%E8%BF%99%E4%BA%9B%E5%AE%9D%E8%97%8F%E8%80%81%E5%B8%88%EF%BC%81/3.png" alt=""></p><h2 id="3-Python——北大陈斌老师"><a href="#3-Python——北大陈斌老师" class="headerlink" title="3. Python——北大陈斌老师"></a>3. Python——北大陈斌老师</h2><p>陈斌老师全面而系统地讲述了Python的实质核心知识，课后测试. 作业和讲解分析都很到位，能很好地巩固学习。<br><img src="https://img.777nx.cn/Java/%E5%B8%8C%E6%9C%9B%E5%AD%A6%E7%BC%96%E7%A8%8B%E7%9A%84%E5%90%8C%E5%AD%A6%E9%83%BD%E7%9F%A5%E9%81%93%E8%BF%99%E4%BA%9B%E5%AE%9D%E8%97%8F%E8%80%81%E5%B8%88%EF%BC%81/4.png" alt=""></p><h2 id="4-Java——韩顺平老师"><a href="#4-Java——韩顺平老师" class="headerlink" title="4.  Java——韩顺平老师"></a>4.  Java——韩顺平老师</h2><p>韩老师毕业于清华大学，韩老师的这套课程对新手很 友好了， 韩老师在敲代码之前会先把概念捏的非常清楚，一定会举例说明！通俗易懂。<br><img src="https://img.777nx.cn/Java/%E5%B8%8C%E6%9C%9B%E5%AD%A6%E7%BC%96%E7%A8%8B%E7%9A%84%E5%90%8C%E5%AD%A6%E9%83%BD%E7%9F%A5%E9%81%93%E8%BF%99%E4%BA%9B%E5%AE%9D%E8%97%8F%E8%80%81%E5%B8%88%EF%BC%81/5.png" alt=""></p><h2 id="5-Linux——韩顺平老师"><a href="#5-Linux——韩顺平老师" class="headerlink" title="5.  Linux——韩顺平老师"></a>5.  Linux——韩顺平老师</h2><p>韩老师的Linux是非常经典的课程，他的图解式讲解我觉得特别易懂和舒服，韩老师的Linux课程包括基础篇,实操篇,高级篇,java定制篇,大数据定制篇, python定制篇, 企业面试题讲解篇。<br><img src="https://img.777nx.cn/Java/%E5%B8%8C%E6%9C%9B%E5%AD%A6%E7%BC%96%E7%A8%8B%E7%9A%84%E5%90%8C%E5%AD%A6%E9%83%BD%E7%9F%A5%E9%81%93%E8%BF%99%E4%BA%9B%E5%AE%9D%E8%97%8F%E8%80%81%E5%B8%88%EF%BC%81/6.png" alt=""></p><h2 id="6-数据结构——王卓老师，陈越老师"><a href="#6-数据结构——王卓老师，陈越老师" class="headerlink" title="6.  数据结构——王卓老师，陈越老师"></a>6.  数据结构——王卓老师，陈越老师</h2><p>青岛大学的王卓老师，老师讲的思路很清晰，零基础也没关系。<br><img src="https://img.777nx.cn/Java/%E5%B8%8C%E6%9C%9B%E5%AD%A6%E7%BC%96%E7%A8%8B%E7%9A%84%E5%90%8C%E5%AD%A6%E9%83%BD%E7%9F%A5%E9%81%93%E8%BF%99%E4%BA%9B%E5%AE%9D%E8%97%8F%E8%80%81%E5%B8%88%EF%BC%81/7.png" alt=""><br>浙大的陈越老师讲得蛮接地气的，但讲的比较快，用来巩固复习很不错。学完数据结构，建议刷题巩固。可以在牛客网上复习，有剑指offer和各类笔试题。<br><img src="https://img.777nx.cn/Java/%E5%B8%8C%E6%9C%9B%E5%AD%A6%E7%BC%96%E7%A8%8B%E7%9A%84%E5%90%8C%E5%AD%A6%E9%83%BD%E7%9F%A5%E9%81%93%E8%BF%99%E4%BA%9B%E5%AE%9D%E8%97%8F%E8%80%81%E5%B8%88%EF%BC%81/8.png" alt=""></p><h2 id="7-操作系统——哈工大李治军老师，南大蒋炎岩老师"><a href="#7-操作系统——哈工大李治军老师，南大蒋炎岩老师" class="headerlink" title="7.  操作系统——哈工大李治军老师，南大蒋炎岩老师"></a>7.  操作系统——哈工大李治军老师，南大蒋炎岩老师</h2><p>哈工大李治军老师每节课都带着回顾一下上一节内容；遇到问题先提出一个浅显直接的初级解法，然后在此基础逐渐优化。<br><img src="https://img.777nx.cn/Java/%E5%B8%8C%E6%9C%9B%E5%AD%A6%E7%BC%96%E7%A8%8B%E7%9A%84%E5%90%8C%E5%AD%A6%E9%83%BD%E7%9F%A5%E9%81%93%E8%BF%99%E4%BA%9B%E5%AE%9D%E8%97%8F%E8%80%81%E5%B8%88%EF%BC%81/9.png" alt=""><br>蒋炎岩老师的这门课整个课程从状态机的视角出发，像剥洋葱一样一层一层剥给你看，不仅有高质量的实验，还为学生开发了类似CMU课程中提到的代码抄袭检测工具。<br><img src="https://img.777nx.cn/Java/%E5%B8%8C%E6%9C%9B%E5%AD%A6%E7%BC%96%E7%A8%8B%E7%9A%84%E5%90%8C%E5%AD%A6%E9%83%BD%E7%9F%A5%E9%81%93%E8%BF%99%E4%BA%9B%E5%AE%9D%E8%97%8F%E8%80%81%E5%B8%88%EF%BC%81/10.png" alt=""></p><h2 id="8-计算机网络——中科大郑烇老师"><a href="#8-计算机网络——中科大郑烇老师" class="headerlink" title="8.  计算机网络——中科大郑烇老师"></a>8.  计算机网络——中科大郑烇老师</h2><p>郑老师不是照本宣科，讲的非常流畅，深入浅出，比起普通精品课要详细很多。小破站百分百的好评证明了一切。<br><img src="https://img.777nx.cn/Java/%E5%B8%8C%E6%9C%9B%E5%AD%A6%E7%BC%96%E7%A8%8B%E7%9A%84%E5%90%8C%E5%AD%A6%E9%83%BD%E7%9F%A5%E9%81%93%E8%BF%99%E4%BA%9B%E5%AE%9D%E8%97%8F%E8%80%81%E5%B8%88%EF%BC%81/11.png" alt=""></p><h2 id="9-计算机组成原理——哈工大刘宏伟老师"><a href="#9-计算机组成原理——哈工大刘宏伟老师" class="headerlink" title="9. 计算机组成原理——哈工大刘宏伟老师"></a>9. 计算机组成原理——哈工大刘宏伟老师</h2><p>配套的教材就是唐硕飞的教材，刘宏伟老师是唐朔飞老师的学生，如果有考哈工大的研究生配合这个视频相当不错。<br><img src="https://img.777nx.cn/Java/%E5%B8%8C%E6%9C%9B%E5%AD%A6%E7%BC%96%E7%A8%8B%E7%9A%84%E5%90%8C%E5%AD%A6%E9%83%BD%E7%9F%A5%E9%81%93%E8%BF%99%E4%BA%9B%E5%AE%9D%E8%97%8F%E8%80%81%E5%B8%88%EF%BC%81/12.png" alt=""></p><h2 id="10-数据库——哈工大战德臣"><a href="#10-数据库——哈工大战德臣" class="headerlink" title="10. 数据库——哈工大战德臣"></a>10. 数据库——哈工大战德臣</h2><p>战德臣老师大家都称他战神，战老师是教学名师，讲课很清晰，也很用心，每一节课都在标题里告诉你本节时长，讲解同时会告诉你怎么去思考，培养思维。<br><img src="https://img.777nx.cn/Java/%E5%B8%8C%E6%9C%9B%E5%AD%A6%E7%BC%96%E7%A8%8B%E7%9A%84%E5%90%8C%E5%AD%A6%E9%83%BD%E7%9F%A5%E9%81%93%E8%BF%99%E4%BA%9B%E5%AE%9D%E8%97%8F%E8%80%81%E5%B8%88%EF%BC%81/13.png" alt=""></p><h2 id="11-编译原理——哈工大陈鄞"><a href="#11-编译原理——哈工大陈鄞" class="headerlink" title="11. 编译原理——哈工大陈鄞"></a>11. 编译原理——哈工大陈鄞</h2><p>编译原理是计算机专业的进阶课，陈鄞老师的ppt做得很好，例题非常经典，教计算机很棒的美女老师真是少见呢。<br><img src="https://img.777nx.cn/Java/%E5%B8%8C%E6%9C%9B%E5%AD%A6%E7%BC%96%E7%A8%8B%E7%9A%84%E5%90%8C%E5%AD%A6%E9%83%BD%E7%9F%A5%E9%81%93%E8%BF%99%E4%BA%9B%E5%AE%9D%E8%97%8F%E8%80%81%E5%B8%88%EF%BC%81/14.png" alt=""></p><h2 id="12-机器学习——吴恩达老师，李宏毅老师"><a href="#12-机器学习——吴恩达老师，李宏毅老师" class="headerlink" title="12.  机器学习——吴恩达老师，李宏毅老师"></a>12.  机器学习——吴恩达老师，李宏毅老师</h2><p>吴恩达的机器学习课程是很多人的启蒙课程，难度适中且完全免费。Coursera平均得分4.9分，满分5分。学完这门课能够快速对整个机器学习知识点有比较整体的认识，便于快速入门。<br><img src="https://img.777nx.cn/Java/%E5%B8%8C%E6%9C%9B%E5%AD%A6%E7%BC%96%E7%A8%8B%E7%9A%84%E5%90%8C%E5%AD%A6%E9%83%BD%E7%9F%A5%E9%81%93%E8%BF%99%E4%BA%9B%E5%AE%9D%E8%97%8F%E8%80%81%E5%B8%88%EF%BC%81/15.png" alt=""><br>李老师的机器学习课程内容充实，讲解细致，会详细讲解DNN怎么来的，BP的推导过程！此课程配备大作业，且有详细的讲解和代码注释。<br><img src="https://img.777nx.cn/Java/%E5%B8%8C%E6%9C%9B%E5%AD%A6%E7%BC%96%E7%A8%8B%E7%9A%84%E5%90%8C%E5%AD%A6%E9%83%BD%E7%9F%A5%E9%81%93%E8%BF%99%E4%BA%9B%E5%AE%9D%E8%97%8F%E8%80%81%E5%B8%88%EF%BC%81/16.png" alt=""></p><h2 id="13-深度学习——李沐，李飞飞"><a href="#13-深度学习——李沐，李飞飞" class="headerlink" title="13.  深度学习——李沐，李飞飞"></a>13.  深度学习——李沐，李飞飞</h2><p>李沐老师是亚马逊AI主任科学家和 MXNet 的作者，李老师的课程偏实践，老师也会分享自己的心得，特别是课程后的答疑部分，真的能从大牛的思路中获得满满干货。<br><img src="https://img.777nx.cn/Java/%E5%B8%8C%E6%9C%9B%E5%AD%A6%E7%BC%96%E7%A8%8B%E7%9A%84%E5%90%8C%E5%AD%A6%E9%83%BD%E7%9F%A5%E9%81%93%E8%BF%99%E4%BA%9B%E5%AE%9D%E8%97%8F%E8%80%81%E5%B8%88%EF%BC%81/17.png" alt=""><br>斯坦福李飞飞的cs231n，是计算机视觉领域经典的入门课程。<br><img src="https://img.777nx.cn/Java/%E5%B8%8C%E6%9C%9B%E5%AD%A6%E7%BC%96%E7%A8%8B%E7%9A%84%E5%90%8C%E5%AD%A6%E9%83%BD%E7%9F%A5%E9%81%93%E8%BF%99%E4%BA%9B%E5%AE%9D%E8%97%8F%E8%80%81%E5%B8%88%EF%BC%81/18.png" alt=""><br>以上这些视频可以在小破站，大学mooc，YouTube搜到，搜老师人名就行！</p>]]></content>
    
    
    <summary type="html">希望学编程的同学都知道这些宝藏老师！</summary>
    
    
    
    <category term="计算机基础" scheme="https://www.777nx.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="计算机专业" scheme="https://www.777nx.cn/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%93%E4%B8%9A/"/>
    
  </entry>
  
  <entry>
    <title>IntelliJ IDEA 常用快捷键一览表</title>
    <link href="https://www.777nx.cn/posts/4ac6f3e6.html"/>
    <id>https://www.777nx.cn/posts/4ac6f3e6.html</id>
    <published>2023-01-08T13:34:03.000Z</published>
    <updated>2023-01-29T09:48:20.082Z</updated>
    
    <content type="html"><![CDATA[<h2 id="IntelliJ-IDEA-常用快捷键一览表"><a href="#IntelliJ-IDEA-常用快捷键一览表" class="headerlink" title="IntelliJ IDEA 常用快捷键一览表"></a>IntelliJ IDEA 常用快捷键一览表</h2><h2 id="IDEA的日常快捷键"><a href="#IDEA的日常快捷键" class="headerlink" title="IDEA的日常快捷键"></a>IDEA的日常快捷键</h2><h3 id="第1组：通用型"><a href="#第1组：通用型" class="headerlink" title="第1组：通用型"></a>第1组：通用型</h3><div class="table-container"><table><thead><tr><th><strong>说明</strong></th><th><strong>快捷键</strong></th></tr></thead><tbody><tr><td>复制代码-copy</td><td>ctrl + c</td></tr><tr><td>粘贴-paste</td><td>ctrl + v</td></tr><tr><td>剪切-cut</td><td>ctrl + x</td></tr><tr><td>撤销-undo</td><td>ctrl + z</td></tr><tr><td>反撤销-redo</td><td>ctrl + shift + z</td></tr><tr><td>保存-save all</td><td>ctrl + s</td></tr><tr><td>全选-select all</td><td>ctrl + a</td></tr></tbody></table></div><h3 id="第2组：提高编写速度（上）"><a href="#第2组：提高编写速度（上）" class="headerlink" title="第2组：提高编写速度（上）"></a>第2组：提高编写速度（上）</h3><div class="table-container"><table><thead><tr><th><strong>说明</strong></th><th><strong>快捷键</strong></th></tr></thead><tbody><tr><td>智能提示-edit</td><td>alt + enter</td></tr><tr><td>提示代码模板-insert live template</td><td>ctrl+j</td></tr><tr><td>使用xx块环绕-surround with …</td><td>ctrl+alt+t</td></tr><tr><td>调出生成getter/setter/构造器等结构-generate …</td><td>alt+insert</td></tr><tr><td>自动生成返回值变量-introduce variable …</td><td>ctrl+alt+v</td></tr><tr><td>复制指定行的代码-duplicate line or selection</td><td>ctrl+d</td></tr><tr><td>删除指定行的代码-delete line</td><td>ctrl+y</td></tr><tr><td>切换到下一行代码空位-start new line</td><td>shift + enter</td></tr><tr><td>切换到上一行代码空位-start new line before current</td><td>ctrl +alt+ enter</td></tr><tr><td>向上移动代码-move statement up</td><td>ctrl+shift+↑</td></tr><tr><td>向下移动代码-move statement down</td><td>ctrl+shift+↓</td></tr><tr><td>向上移动一行-move line up</td><td>alt+shift+↑</td></tr><tr><td>向下移动一行-move line down</td><td>alt+shift+↓</td></tr><tr><td>方法的形参列表提醒-parameter info</td><td>ctrl+p</td></tr></tbody></table></div><h3 id="第3组：提高编写速度（下）"><a href="#第3组：提高编写速度（下）" class="headerlink" title="第3组：提高编写速度（下）"></a>第3组：提高编写速度（下）</h3><div class="table-container"><table><thead><tr><th><strong>说明</strong></th><th><strong>快捷键</strong></th></tr></thead><tbody><tr><td>批量修改指定的变量名、方法名、类名等-rename</td><td>shift+f6</td></tr><tr><td>抽取代码重构方法-extract method …</td><td>ctrl+alt+m</td></tr><tr><td>重写父类的方法-override methods …</td><td>ctrl+o</td></tr><tr><td>实现接口的方法-implements methods …</td><td>ctrl+i</td></tr><tr><td>选中的结构的大小写的切换-toggle case</td><td>ctrl+shift+u</td></tr><tr><td>批量导包-optimize imports</td><td>ctrl+alt+o</td></tr></tbody></table></div><h3 id="第4组：类结构、查找和查看源码"><a href="#第4组：类结构、查找和查看源码" class="headerlink" title="第4组：类结构、查找和查看源码"></a>第4组：类结构、查找和查看源码</h3><div class="table-container"><table><thead><tr><th><strong>说明</strong></th><th><strong>快捷键</strong></th></tr></thead><tbody><tr><td>如何查看源码-go to class…</td><td>ctrl + 选中指定的结构 或 ctrl+n</td></tr><tr><td>显示当前类结构，支持搜索指定的方法、属性等-file structure</td><td>ctrl+f12</td></tr><tr><td>退回到前一个编辑的页面-back</td><td>ctrl+alt+←</td></tr><tr><td>进入到下一个编辑的页面-forward</td><td>ctrl+alt+→</td></tr><tr><td>打开的类文件之间切换-select previous/next tab</td><td>alt+←/→</td></tr><tr><td>光标选中指定的类，查看继承树结构-Type Hierarchy</td><td>ctrl+h</td></tr><tr><td>查看方法文档-quick documentation</td><td>ctrl+q</td></tr><tr><td>类的UML关系图-show uml popup</td><td>ctrl+alt+u</td></tr><tr><td>定位某行-go to line/column</td><td>ctrl+g</td></tr><tr><td>回溯变量或方法的来源-go to implementation(s)</td><td>ctrl+alt+b</td></tr><tr><td>折叠方法实现-collapse all</td><td>ctrl+shift+ -</td></tr><tr><td>展开方法实现-expand all</td><td>ctrl+shift+ +</td></tr></tbody></table></div><h3 id="第5组：查找、替换与关闭"><a href="#第5组：查找、替换与关闭" class="headerlink" title="第5组：查找、替换与关闭"></a>第5组：查找、替换与关闭</h3><div class="table-container"><table><thead><tr><th><strong>说明</strong></th><th><strong>快捷键</strong></th></tr></thead><tbody><tr><td>查找指定的结构</td><td>ctlr+f</td></tr><tr><td>快速查找：选中的Word快速定位到下一个-find next</td><td>ctrl+l</td></tr><tr><td>查找与替换-replace</td><td>ctrl+r</td></tr><tr><td>直接定位到当前行的首位-move caret to line start</td><td>home</td></tr><tr><td>直接定位到当前行的末位 -move caret to line end</td><td>end</td></tr><tr><td>查询当前元素在当前文件中的引用，然后按 F3 可以选择</td><td>ctrl+f7</td></tr><tr><td>全项目搜索文本-find in path …</td><td>ctrl+shift+f</td></tr><tr><td>关闭当前窗口-close</td><td>ctrl+f4</td></tr></tbody></table></div><h3 id="第6组：调整格式"><a href="#第6组：调整格式" class="headerlink" title="第6组：调整格式"></a>第6组：调整格式</h3><div class="table-container"><table><thead><tr><th><strong>说明</strong></th><th><strong>快捷键</strong></th></tr></thead><tbody><tr><td>格式化代码-reformat code</td><td>ctrl+alt+l</td></tr><tr><td>使用单行注释-comment with line comment</td><td>ctrl + /</td></tr><tr><td>使用/取消多行注释-comment with block comment</td><td>ctrl + shift + /</td></tr><tr><td>选中数行，整体往后移动-tab</td><td>tab</td></tr><tr><td>选中数行，整体往前移动-prev tab</td><td>shift + tab</td></tr></tbody></table></div><h2 id="Debug快捷键"><a href="#Debug快捷键" class="headerlink" title="Debug快捷键"></a>Debug快捷键</h2><div class="table-container"><table><thead><tr><th><strong>说明</strong></th><th><strong>快捷键</strong></th></tr></thead><tbody><tr><td>单步调试（不进入函数内部）- step over</td><td>F8</td></tr><tr><td>单步调试（进入函数内部）- step into</td><td>F7</td></tr><tr><td>强制单步调试（进入函数内部） - force step into</td><td>alt+shift+f7</td></tr><tr><td>选择要进入的函数 - smart step into</td><td>shift + F7</td></tr><tr><td>跳出函数 - step out</td><td>shift + F8</td></tr><tr><td>运行到断点 - run to cursor</td><td>alt + F9</td></tr><tr><td>继续执行，进入下一个断点或执行完程序 - resume program</td><td>F9</td></tr><tr><td>停止 - stop</td><td>Ctrl+F2</td></tr><tr><td>查看断点 - view breakpoints</td><td>Ctrl+Shift+F8</td></tr><tr><td>关闭 - close</td><td>Ctrl+F4</td></tr></tbody></table></div>]]></content>
    
    
    <summary type="html">IntelliJ IDEA 常用快捷键一览表</summary>
    
    
    
    <category term="Java" scheme="https://www.777nx.cn/categories/Java/"/>
    
    
    <category term="idea" scheme="https://www.777nx.cn/tags/idea/"/>
    
    <category term="快捷键" scheme="https://www.777nx.cn/tags/%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    
  </entry>
  
</feed>
